{
  "openapi": "3.1.0",
  "info": {
    "title": "AI Mage Supervision API",
    "description": "Supervision API for AI Mage project",
    "version": "0.6.0"
  },
  "paths": {
    "/api/v1/health-check": {
      "get": {
        "tags": ["Health Check"],
        "summary": "Health Check",
        "operationId": "health_check_api_v1_health_check_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Health Check Api V1 Health Check Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/users": {
      "get": {
        "tags": ["Admin Dashboard"],
        "summary": "List Users",
        "operationId": "list_users_api_v1_admin_users_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Contains the email of the user",
              "title": "Email"
            },
            "description": "Contains the email of the user"
          },
          {
            "name": "display_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Contains the display name of the user",
              "title": "Display Name"
            },
            "description": "Contains the display name of the user"
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UserRole"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Contains the role of the user",
              "title": "Role"
            },
            "description": "Contains the role of the user"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "The number of items to return per page",
              "default": 300,
              "title": "Size"
            },
            "description": "The number of items to return per page"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_UserAdminListOut_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Admin Dashboard"],
        "summary": "Create User",
        "operationId": "create_user_api_v1_admin_users_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIn"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/projects": {
      "get": {
        "tags": ["Admin Dashboard"],
        "summary": "List Projects",
        "operationId": "list_projects_api_v1_admin_projects_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Contains the name of the project",
              "title": "Name"
            },
            "description": "Contains the name of the project"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "The number of items to return per page",
              "default": 300,
              "title": "Size"
            },
            "description": "The number of items to return per page"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_ProjectSimpleOut_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/users/{user_id}/projects": {
      "get": {
        "tags": ["Admin Dashboard"],
        "summary": "Get User Projects",
        "operationId": "get_user_projects_api_v1_admin_users__user_id__projects_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "The number of items to return per page",
              "default": 300,
              "title": "Size"
            },
            "description": "The number of items to return per page"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_ProjectOut_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/users/{user_id}": {
      "patch": {
        "tags": ["Admin Dashboard"],
        "summary": "Update User Role",
        "operationId": "update_user_role_api_v1_admin_users__user_id__patch",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UserRole"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Admin Dashboard"],
        "summary": "Delete User",
        "description": "删除用户（仅限管理员）",
        "operationId": "delete_user_api_v1_admin_users__user_id__delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Auto Register User",
        "description": "Auto register user if not exists.",
        "operationId": "auto_register_user_api_v1_users_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIn"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": ["Users"],
        "summary": "Retrieve Current User",
        "operationId": "retrieve_current_user_api_v1_users_me_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Retrieve User",
        "operationId": "retrieve_user_api_v1_users__user_id__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me/preferences/liked-images": {
      "get": {
        "tags": ["User Preferences"],
        "summary": "Get Liked Images",
        "description": "Get user's liked images with fresh presigned URLs",
        "operationId": "get_liked_images_api_v1_users_me_preferences_liked_images_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LikedImageResponse"
                  },
                  "title": "Response Get Liked Images Api V1 Users Me Preferences Liked Images Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User Preferences"],
        "summary": "Add Liked Image",
        "description": "Add image to liked list with source tracking",
        "operationId": "add_liked_image_api_v1_users_me_preferences_liked_images_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LikedImageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Add Liked Image Api V1 Users Me Preferences Liked Images Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["User Preferences"],
        "summary": "Remove Liked Image",
        "description": "Remove image from liked list",
        "operationId": "remove_liked_image_api_v1_users_me_preferences_liked_images_delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LikedImageRemoveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Remove Liked Image Api V1 Users Me Preferences Liked Images Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me/preferences/": {
      "get": {
        "tags": ["User Preferences"],
        "summary": "Get User Preferences",
        "description": "Get user preferences and settings (liked images available via separate endpoint)",
        "operationId": "get_user_preferences_api_v1_users_me_preferences__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferencesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects": {
      "post": {
        "tags": ["Projects"],
        "summary": "Create Project",
        "operationId": "create_project_api_v1_projects_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Projects"],
        "summary": "List Projects",
        "operationId": "list_projects_api_v1_projects_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_ProjectSimpleOut_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}": {
      "get": {
        "tags": ["Projects"],
        "summary": "Get Project",
        "operationId": "get_project_api_v1_projects__project_id__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Projects"],
        "summary": "Delete Or Quit Project",
        "operationId": "delete_or_quit_project_api_v1_projects__project_id__delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/documents": {
      "post": {
        "tags": ["Projects"],
        "summary": "Upload Project Documents",
        "operationId": "upload_project_documents_api_v1_projects__project_id__documents_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_project_documents_api_v1_projects__project_id__documents_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/documents/{document_id}/url": {
      "get": {
        "tags": ["Projects"],
        "summary": "Get Document Url",
        "operationId": "get_document_url_api_v1_projects__project_id__documents__document_id__url_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Get Document Url Api V1 Projects  Project Id  Documents  Document Id  Url Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/rpd-reference-images": {
      "post": {
        "tags": ["Projects"],
        "summary": "Upload Rpd Reference Image",
        "description": "Upload a reference image for RPD copyright detection",
        "operationId": "upload_rpd_reference_image_api_v1_projects__project_id__rpd_reference_images_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_rpd_reference_image_api_v1_projects__project_id__rpd_reference_images_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/rpd-reference-images/batch": {
      "post": {
        "tags": ["Projects"],
        "summary": "Upload Rpd Reference Images Batch",
        "description": "Batch upload reference images for RPD copyright detection",
        "operationId": "upload_rpd_reference_images_batch_api_v1_projects__project_id__rpd_reference_images_batch_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_rpd_reference_images_batch_api_v1_projects__project_id__rpd_reference_images_batch_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/priorities": {
      "get": {
        "tags": ["Tasks"],
        "summary": "List Task Priorities",
        "operationId": "list_task_priorities_api_v1_tasks_priorities_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "The number of items to return per page",
              "default": 300,
              "title": "Size"
            },
            "description": "The number of items to return per page"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_TaskPriorityOut_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/statuses": {
      "get": {
        "tags": ["Tasks"],
        "summary": "List Task Statuses",
        "operationId": "list_task_statuses_api_v1_tasks_statuses_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "The number of items to return per page",
              "default": 300,
              "title": "Size"
            },
            "description": "The number of items to return per page"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_TaskStatusOut_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/tasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "List Project Tasks",
        "operationId": "list_project_tasks_api_v1_projects__project_id__tasks_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Page Size"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "enum": ["created_at", "priority"],
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "enum": ["asc", "desc"],
              "type": "string",
              "default": "desc",
              "title": "Order"
            }
          },
          {
            "name": "status_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status Id"
            }
          },
          {
            "name": "priority_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Priority Id"
            }
          },
          {
            "name": "assignee_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Assignee Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response List Project Tasks Api V1 Projects  Project Id  Tasks Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "summary": "Create Task",
        "operationId": "create_task_api_v1_projects__project_id__tasks_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskIn"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskSimpleOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}/status": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Update Task Status",
        "operationId": "update_task_status_api_v1_tasks__task_id__status_patch",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          },
          {
            "name": "status_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Status Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}/priority": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Update Task Priority",
        "operationId": "update_task_priority_api_v1_tasks__task_id__priority_patch",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          },
          {
            "name": "priority_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Priority Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/tasks-kanban-order": {
      "get": {
        "tags": ["Tasks"],
        "summary": "List Project Tasks Kanban Order",
        "operationId": "list_project_tasks_kanban_order_api_v1_projects__project_id__tasks_kanban_order_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "The number of items to return per page",
              "default": 300,
              "title": "Size"
            },
            "description": "The number of items to return per page"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_TaskKanbanOrderOut_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/tasks-kanban-order/statuses/{status_id}": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Create Or Update Project Tasks Kanban Order",
        "operationId": "create_or_update_project_tasks_kanban_order_api_v1_projects__project_id__tasks_kanban_order_statuses__status_id__post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "status_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Status Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskKanbanOrderIn"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get Task",
        "operationId": "get_task_api_v1_tasks__task_id__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete Task",
        "description": "Soft-deletes a task.\n\nThis operation marks a task as deleted but does not permanently remove it from the database.\nAssociated subtasks and other data are preserved.",
        "operationId": "delete_task_api_v1_tasks__task_id__delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Tasks"],
        "summary": "Update Task Details",
        "operationId": "update_task_details_api_v1_tasks__task_id__put",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}/tags/{tag_id}": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Add Tag To Task",
        "description": "Add a tag to a task",
        "operationId": "add_tag_to_task_api_v1_tasks__task_id__tags__tag_id__post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          },
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tag Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Remove Tag From Task",
        "description": "Remove a tag from a task",
        "operationId": "remove_tag_from_task_api_v1_tasks__task_id__tags__tag_id__delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          },
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Tag Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}/tags": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get Task Tags",
        "description": "Get all tags for a task",
        "operationId": "get_task_tags_api_v1_tasks__task_id__tags_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskTagOut"
                  },
                  "title": "Response Get Task Tags Api V1 Tasks  Task Id  Tags Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}/subtasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "List Task Subtasks",
        "operationId": "list_task_subtasks_api_v1_tasks__task_id__subtasks_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "The number of items to return per page",
              "default": 300,
              "title": "Size"
            },
            "description": "The number of items to return per page"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_SubtaskOut_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "summary": "Create Subtask",
        "description": "创建子任务，可选地通过上传文件（图片或视频）",
        "operationId": "create_subtask_api_v1_tasks__task_id__subtasks_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_subtask_api_v1_tasks__task_id__subtasks_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subtasks/{subtask_id}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get Subtask",
        "operationId": "get_subtask_api_v1_subtasks__subtask_id__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Subtask Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubtaskDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Tasks"],
        "summary": "Update Subtask Details",
        "description": "Update subtask name and description",
        "operationId": "update_subtask_details_api_v1_subtasks__subtask_id__put",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Subtask Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubtaskUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubtaskDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subtasks/{subtask_id}/characters": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Update Subtask Characters",
        "description": "Update subtask associated characters (user manual selection)",
        "operationId": "update_subtask_characters_api_v1_subtasks__subtask_id__characters_patch",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Subtask Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubtaskCharactersUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubtaskDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subtasks/{subtask_id}/annotations": {
      "get": {
        "tags": ["Tasks"],
        "summary": "List Subtask Annotations",
        "description": "List all annotations for a subtask.",
        "operationId": "list_subtask_annotations_api_v1_subtasks__subtask_id__annotations_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Subtask Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "The number of items to return per page",
              "default": 300,
              "title": "Size"
            },
            "description": "The number of items to return per page"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_SubtaskAnnotation_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "summary": "Create Subtask Annotation",
        "description": "Create a new annotation for a subtask.",
        "operationId": "create_subtask_annotation_api_v1_subtasks__subtask_id__annotations_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Subtask Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubtaskAnnotation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subtasks/{subtask_id}/annotations/{annotation_id}/solved": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Update Subtask Annotation Solved",
        "description": "Mark annotation as solved.",
        "operationId": "update_subtask_annotation_solved_api_v1_subtasks__subtask_id__annotations__annotation_id__solved_patch",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Subtask Id"
            }
          },
          {
            "name": "annotation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Annotation Id"
            }
          },
          {
            "name": "solved",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Solved"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubtaskDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subtasks/{subtask_id}/annotations/{annotation_id}": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Update Subtask Annotation",
        "description": "修改子任务注释内容",
        "operationId": "update_subtask_annotation_api_v1_subtasks__subtask_id__annotations__annotation_id__patch",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Subtask Id"
            }
          },
          {
            "name": "annotation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Annotation Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubtaskAnnotationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubtaskDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete Subtask Annotation",
        "description": "删除子任务注释",
        "operationId": "delete_subtask_annotation_api_v1_subtasks__subtask_id__annotations__annotation_id__delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Subtask Id"
            }
          },
          {
            "name": "annotation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Annotation Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubtaskDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subtasks/{subtask_id}/status": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Update Subtask Status",
        "description": "Update subtask status to either accepted or denied.",
        "operationId": "update_subtask_status_api_v1_subtasks__subtask_id__status_patch",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Subtask Id"
            }
          },
          {
            "name": "status_name",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SubtaskStatus",
              "default": "pending"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubtaskDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}/export-pdf": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Export Task Pdf",
        "description": "Export task and its subtasks as a PDF file.",
        "operationId": "export_task_pdf_api_v1_tasks__task_id__export_pdf_get",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subtasks/{subtask_id}/content": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Update Subtask Content",
        "description": "Update subtask content and maintain version history.",
        "operationId": "update_subtask_content_api_v1_subtasks__subtask_id__content_patch",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Subtask Id"
            }
          },
          {
            "name": "s3_path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "S3 Path"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/upload-pptx": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Upload Pptx",
        "description": "上传并处理多个PPT文件，创建任务和子任务\n\nArgs:\n    background_tasks (BackgroundTasks): FastAPI后台任务\n    project_id (str): 项目ID\n    files (List[UploadFile]): 上传的多个PPT文件\n    current_user (User): 当前用户\n\nReturns:\n    JSONResponse: 包含批次ID和处理状态的响应",
        "operationId": "upload_pptx_api_v1_tasks_upload_pptx_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_pptx_api_v1_tasks_upload_pptx_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/upload-status/{batch_id}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get Upload Status",
        "description": "获取文件上传和处理状态\n\nArgs:\n    batch_id: 批次ID\n    user: 当前用户\n\nReturns:\n    FileProcessingStatus: 处理状态信息",
        "operationId": "get_upload_status_api_v1_tasks_upload_status__batch_id__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "batch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Batch Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileProcessingStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}/export-pptx": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Export Task Pptx",
        "description": "Export task as PPTX - works for both PPTX and image-based tasks",
        "operationId": "export_task_pptx_api_v1_tasks__task_id__export_pptx_get",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/upload-document": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Upload Document",
        "description": "上传并保存docx, txt, excel等文件，为每个文件创建一个任务和对应的子任务。\n\nArgs:\n    project_id (str): 项目ID\n    files (List[UploadFile]): 上传的文件列表\n    background_tasks (BackgroundTasks): FastAPI后台任务\n    current_user (User): 当前用户\n\nReturns:\n    JSONResponse: 包含处理结果的响应",
        "operationId": "upload_document_api_v1_tasks_upload_document_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_document_api_v1_tasks_upload_document_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/tasks/create-from-image": {
      "post": {
        "tags": ["Tasks"],
        "summary": "画像からタスクを作成",
        "description": "画像をアップロードして新しいタスクと最初のサブタスクを作成します。",
        "operationId": "create_task_from_uploaded_image_api_v1_projects__project_id__tasks_create_from_image_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_task_from_uploaded_image_api_v1_projects__project_id__tasks_create_from_image_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/tasks/create-from-video": {
      "post": {
        "tags": ["Tasks"],
        "summary": "動画からタスクを作成",
        "description": "動画をアップロードして新しいタスクと最初のサブタスクを作成します。",
        "operationId": "create_task_from_uploaded_video_api_v1_projects__project_id__tasks_create_from_video_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_task_from_uploaded_video_api_v1_projects__project_id__tasks_create_from_video_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/tasks/all": {
      "get": {
        "tags": ["Tasks"],
        "summary": "List All Project Tasks",
        "operationId": "list_all_project_tasks_api_v1_projects__project_id__tasks_all_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskSimpleOut"
                  },
                  "title": "Response List All Project Tasks Api V1 Projects  Project Id  Tasks All Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subtasks/{subtask_id}/copy": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Copy Subtask",
        "description": "Copies a subtask to another task within the same project.",
        "operationId": "copy_subtask_api_v1_subtasks__subtask_id__copy_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Subtask Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubtaskCopyPayload"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubtaskOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}/suggested-review-sets": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Suggest Review Sets For Task",
        "description": "For a given task, suggest review sets based on its tags and characters in subtasks.",
        "operationId": "suggest_review_sets_for_task_api_v1_tasks__task_id__suggested_review_sets_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewSetOut"
                  },
                  "title": "Response Suggest Review Sets For Task Api V1 Tasks  Task Id  Suggested Review Sets Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/tasks/navigation": {
      "get": {
        "tags": ["Tasks"],
        "summary": "List Project Tasks For Navigation",
        "description": "获取项目下用于导航的任务列表（轻量版）\n\nArgs:\n    project_id: 项目ID\n    sort_by: 排序字段 (tid, name, created_at)\n    order: 排序方向 (asc, desc)\n\nReturns:\n    TaskNavigationResponse: 包含所有任务的导航数据",
        "operationId": "list_project_tasks_for_navigation_api_v1_projects__project_id__tasks_navigation_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "enum": ["tid", "name", "created_at"],
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "enum": ["asc", "desc"],
              "type": "string",
              "default": "desc",
              "title": "Order"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskNavigationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}/thumbnails": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get Task Thumbnails",
        "description": "获取任务的缩略图信息（前几个图片子任务）\n\nArgs:\n    task_id: 任务ID\n    limit: 返回的缩略图数量，默认3个",
        "operationId": "get_task_thumbnails_api_v1_tasks__task_id__thumbnails_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 3,
              "title": "Limit"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskThumbnailsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets": {
      "get": {
        "tags": ["Assets"],
        "summary": "Get Asset",
        "operationId": "get_asset_api_v1_assets_get",
        "parameters": [
          {
            "name": "s3_path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "S3 Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/images": {
      "post": {
        "tags": ["Assets"],
        "summary": "Upload Image",
        "description": "Upload an image file to S3 and return its URL.",
        "operationId": "upload_image_api_v1_assets_images_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_image_api_v1_assets_images_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/assets": {
      "get": {
        "tags": ["Assets"],
        "summary": "List Assets",
        "operationId": "list_assets_api_v1_projects__project_id__assets_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "The number of items to return per page",
              "default": 300,
              "title": "Size"
            },
            "description": "The number of items to return per page"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_AssetOut_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Assets"],
        "summary": "Upload Asset From Google Drive",
        "operationId": "upload_asset_from_google_drive_api_v1_projects__project_id__assets_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "google_access_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Google access token",
              "title": "Google Access Token"
            },
            "description": "Google access token"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/assets/process-pptx": {
      "post": {
        "tags": ["Assets"],
        "summary": "Process Pptx Assets",
        "description": "处理项目中的PPT文件资源。\n立即返回assets的processing状态，然后在后台处理PPT文件。\n\nArgs:\n    project_id: 项目ID\n    asset_ids: 要处理的Asset ID列表\n\nReturns:\n    List[ProcessPPTXResponse]: 包含每个asset的ID和初始状态",
        "operationId": "process_pptx_assets_api_v1_projects__project_id__assets_process_pptx_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "Asset Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessPPTXResponse"
                  },
                  "title": "Response Process Pptx Assets Api V1 Projects  Project Id  Assets Process Pptx Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/temp-images": {
      "post": {
        "tags": ["Assets"],
        "summary": "Upload Temp Image",
        "description": "上传临时图片，设置2小时TTL",
        "operationId": "upload_temp_image_api_v1_assets_temp_images_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_temp_image_api_v1_assets_temp_images_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/temp-sessions/{session_id}": {
      "delete": {
        "tags": ["Assets"],
        "summary": "Cleanup Temp Session",
        "description": "清理指定会话的所有临时文件",
        "operationId": "cleanup_temp_session_api_v1_assets_temp_sessions__session_id__delete",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CleanupSessionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/assets/temp-sessions/{session_id}/promote": {
      "post": {
        "tags": ["Assets"],
        "summary": "Promote Temp Images",
        "description": "将临时图片提升为正式图片（移动到正式存储路径）",
        "operationId": "promote_temp_images_api_v1_assets_temp_sessions__session_id__promote_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromoteTempImagesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromoteTempImagesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/google": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Google Login",
        "description": "使用谷歌 ID token 登录\n\n验证谷歌 ID token，并在数据库中创建或更新用户信息",
        "operationId": "google_login_api_v1_auth_google_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleLoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logout",
        "description": "登出用户，清除Cookie中的token",
        "operationId": "logout_api_v1_auth_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/review-point-definitions/": {
      "post": {
        "tags": ["Review Point Definitions"],
        "summary": "Create Review Point Definition Endpoint",
        "operationId": "create_review_point_definition_endpoint_api_v1_review_point_definitions__post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewPointDefinitionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewPointDefinition"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Review Point Definitions"],
        "summary": "List Review Point Definitions Endpoint",
        "operationId": "list_review_point_definitions_endpoint_api_v1_review_point_definitions__get",
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewPointDefinition"
                  },
                  "title": "Response List Review Point Definitions Endpoint Api V1 Review Point Definitions  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-point-definitions/appellation-data/": {
      "get": {
        "tags": ["Review Point Definitions"],
        "summary": "Get appellation table data",
        "description": "Retrieve the complete appellation table data from S3 storage.",
        "operationId": "get_appellation_data_endpoint_api_v1_review_point_definitions_appellation_data__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "s3_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "S3 Url"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppellationDataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-point-definitions/{rpd_id}/": {
      "get": {
        "tags": ["Review Point Definitions"],
        "summary": "Get Review Point Definition Endpoint",
        "operationId": "get_review_point_definition_endpoint_api_v1_review_point_definitions__rpd_id___get",
        "parameters": [
          {
            "name": "rpd_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rpd Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewPointDefinition"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Review Point Definitions"],
        "summary": "Soft-delete a Review Point Definition",
        "description": "Marks a Review Point Definition as deleted by setting its `is_deleted` flag to true. This makes it inaccessible through the API but preserves all data in the database, including all versions and generated AI review findings. This action is reversible in the database.",
        "operationId": "delete_review_point_definition_endpoint_api_v1_review_point_definitions__rpd_id___delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "rpd_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rpd Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-point-definitions/{rpd_id}/versions/": {
      "post": {
        "tags": ["Review Point Definitions"],
        "summary": "Create New Version For Review Point Endpoint",
        "operationId": "create_new_version_for_review_point_endpoint_api_v1_review_point_definitions__rpd_id__versions__post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "rpd_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rpd Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewPointDefinitionVersionBase"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewPointDefinitionVersionInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-point-definitions/{rpd_id}/status/": {
      "patch": {
        "tags": ["Review Point Definitions"],
        "summary": "Update Rpd Status Endpoint",
        "operationId": "update_rpd_status_endpoint_api_v1_review_point_definitions__rpd_id__status__patch",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "rpd_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rpd Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RPDStatusUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewPointDefinition"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-point-definitions/generate-description/": {
      "post": {
        "tags": ["Review Point Definitions"],
        "summary": "Generate Description Endpoint",
        "description": "根据图片和标签生成AI描述\n\nArgs:\n    request: 包含tag和image_url的请求体\n    current_user: 当前用户\n\nReturns:\n    GenerateDescriptionResponse: 生成的英日文描述",
        "operationId": "generate_description_endpoint_api_v1_review_point_definitions_generate_description__post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateDescriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateDescriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-point-definitions/rewrite-prompt": {
      "post": {
        "tags": ["Review Point Definitions"],
        "summary": "Rewrite user prompt with AI based on image",
        "description": "Uses AI to transform a simple user prompt into a more complete, professional, and effective prompt. This endpoint analyzes the image content from the specified subtask to create a detailed and context-aware prompt.",
        "operationId": "rewrite_prompt_endpoint_api_v1_review_point_definitions_rewrite_prompt_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromptRewriteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptRewriteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-point-definitions/generate-rpd-content": {
      "post": {
        "tags": ["Review Point Definitions"],
        "summary": "Generate complete RPD content with AI",
        "description": "Uses AI to generate complete RPD content including key, title, descriptions, and tags based on user input and optional image.",
        "operationId": "generate_rpd_content_endpoint_api_v1_review_point_definitions_generate_rpd_content_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateRPDContentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateRPDContentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-point-definitions/generate-image-description": {
      "post": {
        "tags": ["Review Point Definitions"],
        "summary": "Generate detailed image description with AI",
        "description": "Uses AI to generate detailed image description including visual analysis, key elements, style analysis, and suggested keywords.",
        "operationId": "generate_image_description_endpoint_api_v1_review_point_definitions_generate_image_description_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateImageDescriptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateImageDescriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-point-definitions/autofill-title": {
      "post": {
        "tags": ["Review Point Definitions"],
        "summary": "Autofill Rpd Title",
        "description": "RPDタイトルの智能补全API\n\nユーザーの入力に基づいてGemini AIが生成した\nRPDタイトルの補完候補を3-5個返します",
        "operationId": "autofill_rpd_title_api_v1_review_point_definitions_autofill_title_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutofillRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutofillResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-point-definitions/test-rpd-with-image": {
      "post": {
        "tags": ["Review Point Definitions"],
        "summary": "Test RPD analysis with a single image",
        "description": "Directly analyze a single uploaded image with a specific RPD version data for testing purposes. This endpoint is designed for RPD creation and testing workflows, providing immediate feedback without creating permanent tasks or subtasks.",
        "operationId": "test_rpd_with_image_endpoint_api_v1_review_point_definitions_test_rpd_with_image_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_test_rpd_with_image_endpoint_api_v1_review_point_definitions_test_rpd_with_image_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageRPDTestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-point-definitions/upload-appellation-file/": {
      "post": {
        "tags": ["Review Point Definitions"],
        "summary": "Upload and parse appellation table file",
        "description": "Upload an Excel or JSON file containing character appellation mappings. Excel files will be converted to JSON format and stored in S3. The file should contain a matrix where rows represent speakers and columns represent targets.",
        "operationId": "upload_appellation_file_endpoint_api_v1_review_point_definitions_upload_appellation_file__post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_appellation_file_endpoint_api_v1_review_point_definitions_upload_appellation_file__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppellationUploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-point-definitions/test-rpd-with-text": {
      "post": {
        "tags": ["Review Point Definitions"],
        "summary": "Test text review RPD with dialogue text",
        "description": "Test a text review RPD by analyzing a single dialogue line. This endpoint checks character appellations and special rules against the provided dialogue text.",
        "operationId": "test_rpd_with_text_endpoint_api_v1_review_point_definitions_test_rpd_with_text_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextRPDTestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextRPDTestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-point-definitions/{rpd_id}/characters/{character_id}": {
      "post": {
        "tags": ["Review Point Definitions"],
        "summary": "Add character association to RPD",
        "description": "Add a character association to an RPD using direct many-to-many relationship.",
        "operationId": "add_character_to_rpd_api_v1_review_point_definitions__rpd_id__characters__character_id__post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "rpd_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rpd Id"
            }
          },
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Character Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Review Point Definitions"],
        "summary": "Remove character association from RPD",
        "description": "Remove a character association from an RPD.",
        "operationId": "remove_character_from_rpd_api_v1_review_point_definitions__rpd_id__characters__character_id__delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "rpd_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rpd Id"
            }
          },
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Character Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-point-definitions/{rpd_id}/characters": {
      "get": {
        "tags": ["Review Point Definitions"],
        "summary": "Get characters associated with RPD",
        "description": "Get all characters associated with an RPD.",
        "operationId": "get_rpd_characters_api_v1_review_point_definitions__rpd_id__characters_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "rpd_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rpd Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-reviews/subtasks/{subtask_id}/initiate": {
      "post": {
        "tags": ["AI Reviews"],
        "summary": "Initiate a new AI Review for a Subtask",
        "description": "Triggers the full AI review process for the specified subtask, including element detection and finding generation for all active review points. A new, versioned AIReview record will be created.",
        "operationId": "initiate_ai_review_endpoint_api_v1_ai_reviews_subtasks__subtask_id__initiate_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Subtask Id"
            }
          },
          {
            "name": "cr_check",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": false,
              "title": "Cr Check"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AiReviewMode",
              "description": "AI Review Mode: 'quality' for precision, 'speed' for faster results.",
              "default": "quality"
            },
            "description": "AI Review Mode: 'quality' for precision, 'speed' for faster results."
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIReviewInitiateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-reviews/{ai_review_id}": {
      "get": {
        "tags": ["AI Reviews"],
        "summary": "Get a specific AI Review by ID",
        "description": "Retrieves the full details of a specific AI Review, including all its findings and detected elements.",
        "operationId": "get_ai_review_by_id_endpoint_api_v1_ai_reviews__ai_review_id__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "ai_review_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Ai Review Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AiReview"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-reviews/subtasks/{subtask_id}/latest": {
      "get": {
        "tags": ["AI Reviews"],
        "summary": "Get the latest AI Review for a Subtask",
        "description": "Retrieves the most recent (latest version) AI Review for the specified subtask, including all findings and detected elements.",
        "operationId": "get_latest_ai_review_for_subtask_endpoint_api_v1_ai_reviews_subtasks__subtask_id__latest_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Subtask Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AiReview"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-reviews/subtasks/{subtask_id}/all": {
      "get": {
        "tags": ["AI Reviews"],
        "summary": "List all AI Review versions for a Subtask",
        "description": "Retrieves a list of all AI Review versions for the specified subtask, ordered from newest to oldest. Each review includes all findings and detected elements.",
        "operationId": "list_ai_reviews_for_subtask_endpoint_api_v1_ai_reviews_subtasks__subtask_id__all_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Subtask Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AiReview"
                  },
                  "title": "Response List Ai Reviews For Subtask Endpoint Api V1 Ai Reviews Subtasks  Subtask Id  All Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-reviews/batch/cr-check/initiate": {
      "post": {
        "tags": ["AI Reviews"],
        "summary": "Batch initiate CR Check AI Reviews for multiple tasks",
        "description": "Triggers the AI review process for all subtasks within the specified tasks, with CR Check enabled.",
        "operationId": "batch_initiate_cr_check_review_endpoint_api_v1_ai_reviews_batch_cr_check_initiate_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInitiateAiReviewRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-reviews/batch/initiate": {
      "post": {
        "tags": ["AI Reviews"],
        "summary": "Batch initiate AI Reviews for multiple tasks with custom RPDs",
        "description": "Triggers the AI review process for all subtasks within the specified tasks, with custom RPD selection.",
        "operationId": "batch_initiate_custom_ai_review_endpoint_api_v1_ai_reviews_batch_initiate_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInitiateCustomAiReviewRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-reviews/subtasks/{subtask_id}/interrupt": {
      "post": {
        "tags": ["AI Reviews"],
        "summary": "Interrupt AI Review processing for a Subtask",
        "description": "Interrupts the currently running AI review process for the specified subtask. The review status will be set to 'cancelled' and the background processing will be stopped.",
        "operationId": "interrupt_ai_review_endpoint_api_v1_ai_reviews_subtasks__subtask_id__interrupt_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Subtask Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-reviews/subtasks/{subtask_id}/processing-status": {
      "get": {
        "tags": ["AI Reviews"],
        "summary": "Check AI Review processing status for a Subtask",
        "description": "Returns the current processing status of AI review for the specified subtask. This endpoint can be used for polling to check if the background AI review process has completed.",
        "operationId": "get_ai_review_processing_status_endpoint_api_v1_ai_reviews_subtasks__subtask_id__processing_status_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Subtask Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/aimage_supervision__endpoints__ai_review__AiReviewProcessingStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-reviews/subtasks/{subtask_id}/predict-character": {
      "post": {
        "tags": ["AI Reviews"],
        "summary": "Predict character for a subtask",
        "description": "Uses AI to predict the most likely character present in the given subtask's content. Runs as a background task to avoid blocking the UI.",
        "operationId": "predict_character_for_subtask_endpoint_api_v1_ai_reviews_subtasks__subtask_id__predict_character_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Subtask Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-reviews/findings/{finding_id}/fixed-status": {
      "patch": {
        "tags": ["AI Reviews"],
        "summary": "Update finding fixed status",
        "description": "Update the is_fixed status of a specific AI review finding entry. This allows users to mark findings as fixed/resolved to keep them visible in future reviews.",
        "operationId": "update_finding_fixed_status_endpoint_api_v1_ai_reviews_findings__finding_id__fixed_status_patch",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "finding_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Finding Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindingFixedStatusUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-reviews/subtasks/{subtask_id}/findings-summary": {
      "get": {
        "tags": ["AI Reviews"],
        "summary": "Get optimized AI Review for subtask with relevant findings",
        "description": "Get an AI Review for a subtask with optimized findings data, including latest findings and fixed historical findings. This optimized endpoint avoids scanning all historical versions while maintaining the same response format as get_latest_ai_review_for_subtask.",
        "operationId": "get_findings_summary_endpoint_api_v1_ai_reviews_subtasks__subtask_id__findings_summary_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Subtask Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AiReview"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-reviews/findings/{finding_id}/content": {
      "patch": {
        "tags": ["AI Reviews"],
        "summary": "Update finding content",
        "description": "Update the content of a specific AI review finding entry (description, severity, suggestion). This allows users to modify the finding details while keeping the original AI finding for reference.",
        "operationId": "update_finding_content_endpoint_api_v1_ai_reviews_findings__finding_id__content_patch",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "finding_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Finding Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindingContentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-reviews/characters/{character_id}/rpd-recommendations": {
      "get": {
        "tags": ["AI Reviews"],
        "summary": "Get RPD recommendations for a character",
        "description": "Returns RPD recommendations based on the character's associations, sorted by weight/importance.",
        "operationId": "get_character_rpd_recommendations_endpoint_api_v1_ai_reviews_characters__character_id__rpd_recommendations_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Character Id"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Project ID to filter RPDs",
              "title": "Project Id"
            },
            "description": "Project ID to filter RPDs"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CharacterRPDRecommendationsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-reviews/findings/{finding_id}/bounding-box": {
      "patch": {
        "tags": ["AI Reviews"],
        "summary": "Update finding bounding box",
        "description": "Update the bounding box area of a specific AI review finding entry. This allows users to modify the position and size of the finding's bounding box.",
        "operationId": "update_finding_bounding_box_endpoint_api_v1_ai_reviews_findings__finding_id__bounding_box_patch",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "finding_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Finding Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindingBoundingBoxUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-reviews/subtasks/{subtask_id}/latest-executed-rpds": {
      "get": {
        "tags": ["AI Reviews"],
        "summary": "Get latest executed RPDs for a subtask",
        "description": "获取子任务最近一次AI审核执行的所有RPD信息",
        "operationId": "get_latest_executed_rpds_api_v1_ai_reviews_subtasks__subtask_id__latest_executed_rpds_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Subtask Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LatestExecutedRPDsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-reviews/{ai_review_id}/cancel": {
      "post": {
        "tags": ["AI Reviews"],
        "summary": "Cancel AI Review processing",
        "description": "Cancel an ongoing AI Review process. This will set the cancellation signal and the processing will stop at the next checkpoint.",
        "operationId": "cancel_ai_review_api_v1_ai_reviews__ai_review_id__cancel_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "ai_review_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Ai Review Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai-reviews/tasks/{task_id}/review-set-recommendations": {
      "get": {
        "tags": ["AI Reviews"],
        "summary": "Get Review Set recommendations for a task",
        "description": "Returns Review Set recommendations based on the task's characters and tags, with 60/40 scoring algorithm.",
        "operationId": "get_task_review_set_recommendations_endpoint_api_v1_ai_reviews_tasks__task_id__review_set_recommendations_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Project ID to filter Review Sets",
              "title": "Project Id"
            },
            "description": "Project ID to filter Review Sets"
          },
          {
            "name": "min_score",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 10,
              "minimum": 0,
              "description": "Minimum score to include",
              "default": 0,
              "title": "Min Score"
            },
            "description": "Minimum score to include"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskReviewSetRecommendationsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/characters/": {
      "get": {
        "tags": ["characters"],
        "summary": "List Characters",
        "description": "获取角色列表，可以按项目或IP筛选",
        "operationId": "list_characters_api_v1_characters__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "ip_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ip Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CharacterDetail"
                  },
                  "title": "Response List Characters Api V1 Characters  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["characters"],
        "summary": "Create Character",
        "description": "创建新角色",
        "operationId": "create_character_api_v1_characters__post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CharacterCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CharacterDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/characters/{character_id}": {
      "get": {
        "tags": ["characters"],
        "summary": "Get Character",
        "description": "获取角色详情",
        "operationId": "get_character_api_v1_characters__character_id__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Character Id"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CharacterDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["characters"],
        "summary": "Update Character",
        "description": "更新角色信息",
        "operationId": "update_character_api_v1_characters__character_id__put",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Character Id"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CharacterUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CharacterDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["characters"],
        "summary": "Delete Character",
        "description": "删除角色",
        "operationId": "delete_character_api_v1_characters__character_id__delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Character Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/characters/{character_id}/upload-image": {
      "post": {
        "tags": ["characters"],
        "summary": "Upload Character Image",
        "description": "上传角色图片到S3存储",
        "operationId": "upload_character_image_api_v1_characters__character_id__upload_image_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Character Id"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_character_image_api_v1_characters__character_id__upload_image_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CharacterDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/characters/{character_id}/image": {
      "get": {
        "tags": ["characters"],
        "summary": "Get Character Image",
        "description": "从S3直接获取角色图片并返回给前端",
        "operationId": "get_character_image_api_v1_characters__character_id__image_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Character Id"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/characters/{character_id}/gallery": {
      "get": {
        "tags": ["characters"],
        "summary": "Get Character Gallery",
        "description": "获取角色画廊图片列表",
        "operationId": "get_character_gallery_api_v1_characters__character_id__gallery_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Character Id"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Character Gallery Api V1 Characters  Character Id  Gallery Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["characters"],
        "summary": "Upload Character Gallery Image",
        "description": "上传角色画廊图片",
        "operationId": "upload_character_gallery_image_api_v1_characters__character_id__gallery_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Character Id"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_character_gallery_image_api_v1_characters__character_id__gallery_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CharacterDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/characters/{character_id}/concept-art": {
      "get": {
        "tags": ["characters"],
        "summary": "Get Character Concept Art",
        "description": "获取角色设定集图片列表",
        "operationId": "get_character_concept_art_api_v1_characters__character_id__concept_art_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Character Id"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Character Concept Art Api V1 Characters  Character Id  Concept Art Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["characters"],
        "summary": "Upload Character Concept Art Image",
        "description": "上传角色设定集图片",
        "operationId": "upload_character_concept_art_image_api_v1_characters__character_id__concept_art_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Character Id"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_character_concept_art_image_api_v1_characters__character_id__concept_art_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CharacterDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/characters/{character_id}/gallery/batch": {
      "post": {
        "tags": ["characters"],
        "summary": "Upload Character Gallery Images Batch",
        "description": "批量上传角色画廊图片",
        "operationId": "upload_character_gallery_images_batch_api_v1_characters__character_id__gallery_batch_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Character Id"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_character_gallery_images_batch_api_v1_characters__character_id__gallery_batch_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Upload Character Gallery Images Batch Api V1 Characters  Character Id  Gallery Batch Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/characters/{character_id}/gallery/{image_index}": {
      "delete": {
        "tags": ["characters"],
        "summary": "Delete Character Gallery Image",
        "description": "删除角色画廊中的指定图片",
        "operationId": "delete_character_gallery_image_api_v1_characters__character_id__gallery__image_index__delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Character Id"
            }
          },
          {
            "name": "image_index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Image Index"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Character Gallery Image Api V1 Characters  Character Id  Gallery  Image Index  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/characters/{character_id}/concept-art/batch": {
      "post": {
        "tags": ["characters"],
        "summary": "Upload Character Concept Art Images Batch",
        "description": "批量上传角色设定集图片",
        "operationId": "upload_character_concept_art_images_batch_api_v1_characters__character_id__concept_art_batch_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Character Id"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_character_concept_art_images_batch_api_v1_characters__character_id__concept_art_batch_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Upload Character Concept Art Images Batch Api V1 Characters  Character Id  Concept Art Batch Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/characters/{character_id}/concept-art/{image_index}": {
      "delete": {
        "tags": ["characters"],
        "summary": "Delete Character Concept Art Image",
        "description": "删除角色设定集中的指定图片",
        "operationId": "delete_character_concept_art_image_api_v1_characters__character_id__concept_art__image_index__delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Character Id"
            }
          },
          {
            "name": "image_index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Image Index"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Character Concept Art Image Api V1 Characters  Character Id  Concept Art  Image Index  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/characters/{character_id}/rpds/{rpd_id}": {
      "post": {
        "tags": ["characters"],
        "summary": "Add RPD association to character",
        "description": "Add an RPD association to a character using direct many-to-many relationship.",
        "operationId": "add_rpd_to_character_api_v1_characters__character_id__rpds__rpd_id__post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Character Id"
            }
          },
          {
            "name": "rpd_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rpd Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["characters"],
        "summary": "Remove RPD association from character",
        "description": "Remove an RPD association from a character.",
        "operationId": "remove_rpd_from_character_api_v1_characters__character_id__rpds__rpd_id__delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Character Id"
            }
          },
          {
            "name": "rpd_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rpd Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/characters/{character_id}/rpds": {
      "get": {
        "tags": ["characters"],
        "summary": "Get RPDs associated with character",
        "description": "Get all RPDs associated with a character.",
        "operationId": "get_character_rpds_api_v1_characters__character_id__rpds_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Character Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ips/": {
      "get": {
        "tags": ["ips"],
        "summary": "List Ips",
        "description": "获取IP列表，可以按项目筛选",
        "operationId": "list_ips_api_v1_ips__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IPOut"
                  },
                  "title": "Response List Ips Api V1 Ips  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["ips"],
        "summary": "Create Ip",
        "description": "创建新IP",
        "operationId": "create_ip_api_v1_ips__post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ips/{ip_id}": {
      "get": {
        "tags": ["ips"],
        "summary": "Get Ip",
        "description": "获取IP详情",
        "operationId": "get_ip_api_v1_ips__ip_id__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "ip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ip Id"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["ips"],
        "summary": "Update Ip",
        "description": "更新IP信息",
        "operationId": "update_ip_api_v1_ips__ip_id__put",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "ip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ip Id"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["ips"],
        "summary": "Delete Ip",
        "description": "删除IP",
        "operationId": "delete_ip_api_v1_ips__ip_id__delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "ip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ip Id"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/items/batch-upload": {
      "post": {
        "tags": ["Items"],
        "summary": "Batch Upload Items",
        "description": "批量上传图片到S3并创建Items记录 - 使用后台任务处理以避免超时\n\nArgs:\n    files: 上传的图片文件列表\n    project_id: 可选的项目ID\n    tags: 可选的标签列表(JSON字符串格式)\n    description: 可选的描述\n\nReturns:\n    JSONResponse: 包含批次ID和状态的响应，实际处理在后台进行",
        "operationId": "batch_upload_items_api_v1_items_batch_upload_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_batch_upload_items_api_v1_items_batch_upload_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/items/batch-upload/{batch_id}/status": {
      "get": {
        "tags": ["Items"],
        "summary": "Get Batch Upload Status",
        "description": "获取批量上传任务的状态\n\nArgs:\n    batch_id: 批次ID\n\nReturns:\n    dict: 批次状态信息",
        "operationId": "get_batch_upload_status_api_v1_items_batch_upload__batch_id__status_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "batch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Batch Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Batch Upload Status Api V1 Items Batch Upload  Batch Id  Status Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/items/projects/{project_id}": {
      "get": {
        "tags": ["Items"],
        "summary": "List Items",
        "description": "获取用户的Items列表\n\nArgs:\n    project_id: 可选的项目ID过滤\n    tags: 可选的标签过滤(逗号分隔)\n    page: 页码 (从1开始)\n    size: 每页数量 (1-1000)\n\nReturns:\n    Page[ItemResponse]: 分页的Items列表",
        "operationId": "list_items_api_v1_items_projects__project_id__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tags"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "The number of items to return per page",
              "default": 300,
              "title": "Size"
            },
            "description": "The number of items to return per page"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_ItemResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/items/projects/{project_id}/generate-embeddings": {
      "post": {
        "tags": ["Items"],
        "summary": "Generate Project Embeddings",
        "description": "为项目的items生成vector embeddings\n\nArgs:\n    project_id: 项目ID\n    item_ids: 可选的item ID列表，如果为None则处理所有items\n\nReturns:\n    dict: 处理结果统计",
        "operationId": "generate_project_embeddings_api_v1_items_projects__project_id__generate_embeddings_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Item Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Generate Project Embeddings Api V1 Items Projects  Project Id  Generate Embeddings Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/items/{item_id}": {
      "get": {
        "tags": ["Items"],
        "summary": "Get Item",
        "description": "获取特定Item的详细信息\n\nArgs:\n    item_id: Item ID\n\nReturns:\n    ItemResponse: Item详细信息",
        "operationId": "get_item_api_v1_items__item_id__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Item Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Items"],
        "summary": "Update Item",
        "description": "更新Item信息\n\nArgs:\n    item_id: Item ID\n    item_update: 更新数据\n\nReturns:\n    ItemResponse: 更新后的Item信息",
        "operationId": "update_item_api_v1_items__item_id__put",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Item Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Items"],
        "summary": "Delete Item",
        "description": "删除Item\n\nArgs:\n    item_id: Item ID\n\nReturns:\n    dict: 删除确认消息",
        "operationId": "delete_item_api_v1_items__item_id__delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Item Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Item Api V1 Items  Item Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/items/": {
      "get": {
        "tags": ["Items"],
        "summary": "List Project Items",
        "description": "获取特定项目的Items列表\n\nArgs:\n    project_id: 项目ID\n    tags: 可选的标签过滤(逗号分隔)\n    page: 页码 (从1开始)\n    size: 每页数量 (1-1000)\n\nReturns:\n    Page[ItemResponse]: 项目Items列表",
        "operationId": "list_project_items_api_v1_items__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tags"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "The number of items to return per page",
              "default": 300,
              "title": "Size"
            },
            "description": "The number of items to return per page"
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_ItemResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/items/projects/{project_id}/search-by-image": {
      "post": {
        "tags": ["Items"],
        "summary": "Search Items By Image",
        "description": "根据图片URL在项目中搜索相似的items\n\nArgs:\n    project_id: 项目ID\n    request: 包含图片URL和结果数量限制的请求体\n\nReturns:\n    dict: 搜索结果",
        "operationId": "search_items_by_image_api_v1_items_projects__project_id__search_by_image_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Search Items By Image Api V1 Items Projects  Project Id  Search By Image Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/items/projects/{project_id}/detect-objects": {
      "post": {
        "tags": ["Items"],
        "summary": "Detect Objects In Image",
        "description": "在图片中检测对象并返回边界框信息，并保存到subtask的ai_detection字段\n\n使用background task来执行，避免阻塞UI\n\nArgs:\n    project_id: 项目ID\n    request: 包含图片URL、subtask_id和限制数量的请求体\n\nReturns:\n    dict: 响应消息，表示任务已开始",
        "operationId": "detect_objects_in_image_api_v1_items_projects__project_id__detect_objects_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoundingBoxDetectionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reference-generation/projects/{project_id}/generate": {
      "post": {
        "tags": ["Reference Generation"],
        "summary": "Generate References",
        "description": "Generate character references - MVP endpoint",
        "operationId": "generate_references_api_v1_reference_generation_projects__project_id__generate_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneratedReferenceResponse"
                  },
                  "title": "Response Generate References Api V1 Reference Generation Projects  Project Id  Generate Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reference-generation/projects/{project_id}/references": {
      "get": {
        "tags": ["Reference Generation"],
        "summary": "List References",
        "description": "List generated references - simple version",
        "operationId": "list_references_api_v1_reference_generation_projects__project_id__references_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneratedReferenceResponse"
                  },
                  "title": "Response List References Api V1 Reference Generation Projects  Project Id  References Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/batch": {
      "get": {
        "tags": ["Batch Process Jobs"],
        "summary": "Get Batch Process Jobs",
        "description": "List all batch process jobs.",
        "operationId": "get_batch_process_jobs_api_v1_batch_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BatchProcessJobListItem"
                  },
                  "title": "Response Get Batch Process Jobs Api V1 Batch Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/batch/stats": {
      "get": {
        "tags": ["Batch Process Jobs"],
        "summary": "Get Batch Processing Stats",
        "description": "Get batch processing statistics.",
        "operationId": "get_batch_processing_stats_api_v1_batch_stats_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchProcessingStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/batch/{job_id}/detail": {
      "get": {
        "tags": ["Batch Process Jobs"],
        "summary": "Get Batch Processing Detail",
        "description": "Get detailed batch processing record by ID.",
        "operationId": "get_batch_processing_detail_api_v1_batch__job_id__detail_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Job Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchProcessingRecord"
                }
              }
            }
          },
          "404": {
            "description": "Batch process job not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/batch/{job_id}": {
      "get": {
        "tags": ["Batch Process Jobs"],
        "summary": "Get Batch Process Job",
        "description": "Get a single batch process job by ID.",
        "operationId": "get_batch_process_job_api_v1_batch__job_id__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Job Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchProcessJobOut"
                }
              }
            }
          },
          "404": {
            "description": "Job not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/task-tags/": {
      "post": {
        "tags": ["Task Tags"],
        "summary": "Create Task Tag",
        "operationId": "create_task_tag_api_v1_task_tags__post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskTagCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTagOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Task Tags"],
        "summary": "List Task Tags",
        "operationId": "list_task_tags_api_v1_task_tags__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskTagOut"
                  },
                  "title": "Response List Task Tags Api V1 Task Tags  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/task-tags/{tag_id}": {
      "get": {
        "tags": ["Task Tags"],
        "summary": "Get Task Tag",
        "operationId": "get_task_tag_api_v1_task_tags__tag_id__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTagOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Task Tags"],
        "summary": "Update Task Tag",
        "operationId": "update_task_tag_api_v1_task_tags__tag_id__put",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskTagUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTagOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Task Tags"],
        "summary": "Delete Task Tag",
        "operationId": "delete_task_tag_api_v1_task_tags__tag_id__delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-sets/": {
      "post": {
        "tags": ["Review Sets"],
        "summary": "Create Review Set",
        "operationId": "create_review_set_api_v1_review_sets__post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewSetCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewSetOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Review Sets"],
        "summary": "List Review Sets",
        "operationId": "list_review_sets_api_v1_review_sets__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewSetOut"
                  },
                  "title": "Response List Review Sets Api V1 Review Sets  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-sets/{review_set_id}": {
      "get": {
        "tags": ["Review Sets"],
        "summary": "Get Review Set",
        "operationId": "get_review_set_api_v1_review_sets__review_set_id__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "review_set_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Review Set Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewSetOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Review Sets"],
        "summary": "Update Review Set",
        "operationId": "update_review_set_api_v1_review_sets__review_set_id__put",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "review_set_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Review Set Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewSetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewSetOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Review Sets"],
        "summary": "Delete Review Set",
        "operationId": "delete_review_set_api_v1_review_sets__review_set_id__delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "review_set_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Review Set Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-set-character-associations/": {
      "post": {
        "tags": ["Review Set Character Associations"],
        "summary": "Create Review Set Character Association",
        "description": "创建ReviewSet和Character的关联",
        "operationId": "create_review_set_character_association_api_v1_review_set_character_associations__post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewSetCharacterAssociationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewSetCharacterAssociationOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-set-character-associations/review_set/{review_set_id}/character/{character_id}": {
      "get": {
        "tags": ["Review Set Character Associations"],
        "summary": "Get Review Set Character Association",
        "description": "获取特定的ReviewSet和Character关联详情",
        "operationId": "get_review_set_character_association_api_v1_review_set_character_associations_review_set__review_set_id__character__character_id__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "review_set_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Review Set Id"
            }
          },
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Character Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewSetCharacterAssociationWithDetails"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Review Set Character Associations"],
        "summary": "Delete Review Set Character Association",
        "description": "删除ReviewSet和Character的关联",
        "operationId": "delete_review_set_character_association_api_v1_review_set_character_associations_review_set__review_set_id__character__character_id__delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "review_set_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Review Set Id"
            }
          },
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Character Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-set-character-associations/review_set/{review_set_id}": {
      "get": {
        "tags": ["Review Set Character Associations"],
        "summary": "Get Review Set Character Associations By Review Set",
        "description": "获取特定ReviewSet的所有Character关联",
        "operationId": "get_review_set_character_associations_by_review_set_api_v1_review_set_character_associations_review_set__review_set_id__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "review_set_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Review Set Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewSetCharacterAssociationWithDetails"
                  },
                  "title": "Response Get Review Set Character Associations By Review Set Api V1 Review Set Character Associations Review Set  Review Set Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review-set-character-associations/character/{character_id}": {
      "get": {
        "tags": ["Review Set Character Associations"],
        "summary": "Get Review Set Character Associations By Character",
        "description": "获取特定Character的所有ReviewSet关联",
        "operationId": "get_review_set_character_associations_by_character_api_v1_review_set_character_associations_character__character_id__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Character Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewSetCharacterAssociationWithDetails"
                  },
                  "title": "Response Get Review Set Character Associations By Character Api V1 Review Set Character Associations Character  Character Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/video/scenes/analyze": {
      "post": {
        "tags": ["Video"],
        "summary": "Analyze Video Scenes",
        "description": "分析视频场景切换点\n\n- **file**: 视频文件 (支持 MP4, MOV, AVI 等格式)\n- **detector_type**: 检测器类型 (\"adaptive\" 或 \"content\")\n- **threshold**: 检测阈值 (可选，使用默认值)",
        "operationId": "analyze_video_scenes_api_v1_video_scenes_analyze_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_analyze_video_scenes_api_v1_video_scenes_analyze_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoScenesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/video/scenes/{scene_number}/frames": {
      "post": {
        "tags": ["Video"],
        "summary": "Get Scene Frames",
        "description": "获取指定场景的关键帧（第一帧、中间帧、最后帧）\n\n- **scene_number**: 场景编号 (从1开始)\n- **file**: 视频文件\n- **detector_type**: 检测器类型 (\"adaptive\" 或 \"content\")",
        "operationId": "get_scene_frames_api_v1_video_scenes__scene_number__frames_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "scene_number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Scene Number"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_get_scene_frames_api_v1_video_scenes__scene_number__frames_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SceneFrameResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/video/scenes/{scene_number}/frames-with-info": {
      "post": {
        "tags": ["Video"],
        "summary": "Get Scene Frames With Info",
        "description": "获取指定场景的关键帧和详细信息\n\n- **scene_number**: 场景编号 (从1开始)\n- **file**: 视频文件\n- **detector_type**: 检测器类型 (\"adaptive\" 或 \"content\")\n- **threshold**: 检测阈值 (可选)",
        "operationId": "get_scene_frames_with_info_api_v1_video_scenes__scene_number__frames_with_info_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "scene_number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Scene Number"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_get_scene_frames_with_info_api_v1_video_scenes__scene_number__frames_with_info_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SceneFramesWithInfoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/extract-preview": {
      "post": {
        "tags": ["PDF Processing"],
        "summary": "Extract Pdf Preview",
        "description": "从PDF提取图片并生成预览，存储到临时S3路径",
        "operationId": "extract_pdf_preview_api_v1_pdf_extract_preview_post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_extract_pdf_preview_api_v1_pdf_extract_preview_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PDFExtractionPreviewResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/confirm-extraction/{session_id}": {
      "post": {
        "tags": ["PDF Processing"],
        "summary": "Confirm Pdf Extraction",
        "description": "确认PDF图片提取，将选中的图片通过items流程保存",
        "operationId": "confirm_pdf_extraction_api_v1_pdf_confirm_extraction__session_id__post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmExtractionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmExtractionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/sessions/{session_id}": {
      "delete": {
        "tags": ["PDF Processing"],
        "summary": "Cleanup Pdf Session",
        "description": "清理PDF会话的临时文件",
        "operationId": "cleanup_pdf_session_api_v1_pdf_sessions__session_id__delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Cleanup Pdf Session Api V1 Pdf Sessions  Session Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/projects/{project_id}/pdfs": {
      "get": {
        "tags": ["PDF Processing"],
        "summary": "List Project Pdfs",
        "description": "获取项目中的所有PDF文件",
        "operationId": "list_project_pdfs_api_v1_pdf_projects__project_id__pdfs_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PDFResponse"
                  },
                  "title": "Response List Project Pdfs Api V1 Pdf Projects  Project Id  Pdfs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/pdfs/{pdf_id}": {
      "get": {
        "tags": ["PDF Processing"],
        "summary": "Get Pdf Details",
        "description": "获取PDF详细信息",
        "operationId": "get_pdf_details_api_v1_pdf_pdfs__pdf_id__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "pdf_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Pdf Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PDFResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/pdfs/{pdf_id}/items": {
      "get": {
        "tags": ["PDF Processing"],
        "summary": "Get Pdf Extracted Items",
        "description": "获取PDF提取的所有图片",
        "operationId": "get_pdf_extracted_items_api_v1_pdf_pdfs__pdf_id__items_get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "pdf_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Pdf Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Pdf Extracted Items Api V1 Pdf Pdfs  Pdf Id  Items Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/drawing/subtasks/{subtask_id}": {
      "get": {
        "tags": ["Drawing"],
        "summary": "Get Subtask Drawing",
        "description": "Get the drawing annotation for a subtask if it exists.",
        "operationId": "get_subtask_drawing_api_v1_drawing_subtasks__subtask_id__get",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Subtask Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DrawingResponse"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Subtask Drawing Api V1 Drawing Subtasks  Subtask Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Drawing"],
        "summary": "Save Subtask Drawing",
        "description": "Save or update drawing annotation for a subtask.",
        "operationId": "save_subtask_drawing_api_v1_drawing_subtasks__subtask_id__put",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Subtask Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DrawingData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DrawingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Drawing"],
        "summary": "Delete Subtask Drawing",
        "description": "Delete drawing annotation from a subtask.",
        "operationId": "delete_subtask_drawing_api_v1_drawing_subtasks__subtask_id__delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "subtask_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Subtask Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Subtask Drawing Api V1 Drawing Subtasks  Subtask Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AIClassificationStatus": {
        "type": "string",
        "enum": ["unclassified", "in_progress", "classified"],
        "title": "AIClassificationStatus"
      },
      "AIReviewInitiateRequest": {
        "properties": {
          "rpd_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rpd Ids",
            "description": "A list of Review Point Definition IDs to run. If not provided, no RPD-based review will run (unless cr_check=True)."
          }
        },
        "type": "object",
        "title": "AIReviewInitiateRequest"
      },
      "AiDetectedElement": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "confidence": {
            "type": "number",
            "title": "Confidence"
          },
          "label": {
            "type": "string",
            "enum": ["character", "object", "text"],
            "title": "Label"
          },
          "x": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "X"
          },
          "y": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Y"
          },
          "width": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Width"
          },
          "height": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Height"
          },
          "area": {
            "$ref": "#/components/schemas/FindingArea",
            "description": "Bounding box of the detected element."
          },
          "character_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Id",
            "description": "引用到已知角色的ID，如果检测到了已知角色"
          }
        },
        "type": "object",
        "required": ["name", "confidence", "label", "area"],
        "title": "AiDetectedElement"
      },
      "AiDetectedElements": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Overall textual description of the image content based on AI detection."
          },
          "elements": {
            "items": {
              "$ref": "#/components/schemas/AiDetectedElement"
            },
            "type": "array",
            "title": "Elements",
            "description": "List of individual elements detected in the image."
          }
        },
        "type": "object",
        "title": "AiDetectedElements",
        "description": "Container for all detected elements from an image, including an overall description."
      },
      "AiReview": {
        "properties": {
          "subtask_id": {
            "type": "string",
            "format": "uuid",
            "title": "Subtask Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "is_latest": {
            "type": "boolean",
            "title": "Is Latest"
          },
          "review_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Review Timestamp"
          },
          "initiated_by_user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Initiated By User Id"
          },
          "last_modified_by_user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Modified By User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "findings": {
            "items": {
              "$ref": "#/components/schemas/AiReviewFindingEntry"
            },
            "type": "array",
            "title": "Findings",
            "default": []
          },
          "processing_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Status"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "processing_started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Started At"
          },
          "processing_completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Completed At"
          },
          "should_cancel": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Should Cancel"
          },
          "detected_elements": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AiDetectedElement"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Detected Elements"
          },
          "detected_elements_summary": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AiDetectedElements"
              },
              {
                "type": "null"
              }
            ],
            "description": "Summary of detected elements in the image, including an overall description and list of elements."
          }
        },
        "type": "object",
        "required": ["subtask_id", "id", "version", "is_latest", "review_timestamp", "created_at", "updated_at"],
        "title": "AiReview"
      },
      "AiReviewFindingEntry": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "severity": {
            "type": "string",
            "enum": ["risk", "alert", "safe", "high", "medium", "low"],
            "title": "Severity"
          },
          "suggestion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suggestion"
          },
          "area": {
            "$ref": "#/components/schemas/FindingArea",
            "description": "Bounding box area of the finding."
          },
          "reference_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Images",
            "description": "Reference images for the finding.",
            "default": []
          },
          "reference_source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Source",
            "description": "Textual description of the reference source or document."
          },
          "tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag",
            "description": "Tag for categorizing the finding."
          },
          "is_ai_generated": {
            "type": "boolean",
            "title": "Is Ai Generated"
          },
          "is_fixed": {
            "type": "boolean",
            "title": "Is Fixed",
            "description": "Whether this finding is marked as fixed/resolved by user",
            "default": false
          },
          "status": {
            "type": "string",
            "enum": [
              "pending_ai_review",
              "pending_human_review",
              "ai_suggestion_accepted",
              "ai_suggestion_modified",
              "ai_suggestion_rejected",
              "human_added",
              "resolved",
              "ignored",
              "promoted_to_kb",
              "superseded"
            ],
            "title": "Status"
          },
          "content_type": {
            "$ref": "#/components/schemas/SubtaskType",
            "description": "Type of content being reviewed (picture, video, text, etc.)",
            "default": "picture"
          },
          "content_metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Metadata",
            "description": "Type-specific metadata (e.g., video timestamps, text positions)"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "ai_review_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ai Review Id"
          },
          "review_point_definition_version_id": {
            "type": "string",
            "format": "uuid",
            "title": "Review Point Definition Version Id"
          },
          "original_ai_finding_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Ai Finding Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "description",
          "severity",
          "area",
          "is_ai_generated",
          "status",
          "id",
          "ai_review_id",
          "review_point_definition_version_id",
          "created_at",
          "updated_at"
        ],
        "title": "AiReviewFindingEntry"
      },
      "AiReviewFindingEntry_65wckp_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "review_point_definition_version": {
            "$ref": "#/components/schemas/ReviewPointDefinitionVersion_2kcj3z_leaf",
            "title": "Review Point Definition Version"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "severity": {
            "type": "string",
            "maxLength": 50,
            "title": "Severity"
          },
          "suggestion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suggestion",
            "nullable": true
          },
          "area": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Area",
            "nullable": true
          },
          "reference_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Images",
            "description": "List of reference images for the finding.",
            "nullable": true
          },
          "reference_source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Source",
            "nullable": true
          },
          "tag": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag",
            "description": "Tag for categorizing the finding",
            "nullable": true
          },
          "is_ai_generated": {
            "type": "boolean",
            "title": "Is Ai Generated"
          },
          "is_fixed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Fixed",
            "description": "Whether this finding is marked as fixed/resolved by user",
            "default": false
          },
          "original_ai_finding": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AiReviewFindingEntry_i23odv_leaf"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Ai Finding",
            "nullable": true
          },
          "status": {
            "type": "string",
            "maxLength": 100,
            "title": "Status"
          },
          "content_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubtaskType",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type",
            "description": "Type of content being reviewed",
            "default": "picture"
          },
          "content_metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Metadata",
            "description": "Type-specific metadata (e.g., video timestamps, text positions)",
            "nullable": true
          },
          "modifications": {
            "items": {
              "$ref": "#/components/schemas/AiReviewFindingEntry_i23odv_leaf"
            },
            "type": "array",
            "title": "Modifications"
          },
          "promotion_details_forward": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromotedFinding_pkcm32_leaf"
              },
              {
                "type": "null"
              }
            ],
            "title": "Promotion Details Forward",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "review_point_definition_version",
          "description",
          "severity",
          "is_ai_generated",
          "original_ai_finding",
          "status",
          "modifications",
          "promotion_details_forward"
        ],
        "title": "AiReviewFindingEntry"
      },
      "AiReviewFindingEntry_i23odv_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "severity": {
            "type": "string",
            "maxLength": 50,
            "title": "Severity"
          },
          "suggestion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suggestion",
            "nullable": true
          },
          "area": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Area",
            "nullable": true
          },
          "reference_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Images",
            "description": "List of reference images for the finding.",
            "nullable": true
          },
          "reference_source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Source",
            "nullable": true
          },
          "tag": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag",
            "description": "Tag for categorizing the finding",
            "nullable": true
          },
          "is_ai_generated": {
            "type": "boolean",
            "title": "Is Ai Generated"
          },
          "is_fixed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Fixed",
            "description": "Whether this finding is marked as fixed/resolved by user",
            "default": false
          },
          "status": {
            "type": "string",
            "maxLength": 100,
            "title": "Status"
          },
          "content_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubtaskType",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type",
            "description": "Type of content being reviewed",
            "default": "picture"
          },
          "content_metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Metadata",
            "description": "Type-specific metadata (e.g., video timestamps, text positions)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "description", "severity", "is_ai_generated", "status"],
        "title": "AiReviewFindingEntry"
      },
      "AiReviewMode": {
        "type": "string",
        "enum": ["quality", "speed"],
        "title": "AiReviewMode"
      },
      "AiReview_d7n2fs_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "version": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Version"
          },
          "is_latest": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Latest",
            "default": true
          },
          "ai_review_output_json": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Review Output Json",
            "nullable": true
          },
          "review_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Review Timestamp",
            "readOnly": true
          },
          "processing_status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/aimage_supervision__enums__AiReviewProcessingStatus",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Status",
            "description": "PENDING: pending\u003Cbr/\u003EPROCESSING: processing\u003Cbr/\u003ECOMPLETED: completed\u003Cbr/\u003EFAILED: failed\u003Cbr/\u003ECANCELLED: cancelled",
            "default": "pending"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "nullable": true
          },
          "processing_started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Started At",
            "nullable": true
          },
          "processing_completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Completed At",
            "nullable": true
          },
          "should_cancel": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Should Cancel",
            "default": false
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "version", "review_timestamp"],
        "title": "AiReview"
      },
      "AiReview_zid4jh_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "version": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Version"
          },
          "is_latest": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Latest",
            "default": true
          },
          "ai_review_output_json": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Review Output Json",
            "nullable": true
          },
          "review_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Review Timestamp",
            "readOnly": true
          },
          "initiated_by_user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User_icoj3a_leaf"
              },
              {
                "type": "null"
              }
            ],
            "title": "Initiated By User",
            "nullable": true
          },
          "last_modified_by_user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User_icoj3a_leaf"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Modified By User",
            "nullable": true
          },
          "processing_status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/aimage_supervision__enums__AiReviewProcessingStatus",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Status",
            "description": "PENDING: pending\u003Cbr/\u003EPROCESSING: processing\u003Cbr/\u003ECOMPLETED: completed\u003Cbr/\u003EFAILED: failed\u003Cbr/\u003ECANCELLED: cancelled",
            "default": "pending"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "nullable": true
          },
          "processing_started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Started At",
            "nullable": true
          },
          "processing_completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Completed At",
            "nullable": true
          },
          "should_cancel": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Should Cancel",
            "default": false
          },
          "findings": {
            "items": {
              "$ref": "#/components/schemas/AiReviewFindingEntry_65wckp_leaf"
            },
            "type": "array",
            "title": "Findings"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "version",
          "review_timestamp",
          "initiated_by_user",
          "last_modified_by_user",
          "findings"
        ],
        "title": "AiReview"
      },
      "AppellationDataResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "additionalProperties": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "type": "object",
            "title": "Data",
            "default": {}
          },
          "characters": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Characters",
            "default": []
          },
          "character_count": {
            "type": "integer",
            "title": "Character Count",
            "default": 0
          }
        },
        "type": "object",
        "required": ["success", "message"],
        "title": "AppellationDataResponse",
        "description": "称呼表数据响应模型"
      },
      "AppellationUploadResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "s3_url": {
            "type": "string",
            "title": "S3 Url",
            "default": ""
          },
          "file_type": {
            "type": "string",
            "title": "File Type",
            "default": ""
          },
          "characters": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Characters",
            "default": []
          },
          "character_count": {
            "type": "integer",
            "title": "Character Count",
            "default": 0
          },
          "total_appellations": {
            "type": "integer",
            "title": "Total Appellations",
            "default": 0
          },
          "validation_warnings": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Validation Warnings",
            "default": []
          }
        },
        "type": "object",
        "required": ["success", "message"],
        "title": "AppellationUploadResponse",
        "description": "称呼表上传响应模型"
      },
      "AssetIn": {
        "properties": {
          "drive_file_id": {
            "type": "string",
            "maxLength": 255,
            "title": "Drive File Id"
          },
          "file_name": {
            "type": "string",
            "maxLength": 255,
            "title": "File Name"
          },
          "mime_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Mime Type",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["drive_file_id", "file_name"],
        "title": "AssetIn"
      },
      "AssetOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "drive_file_id": {
            "type": "string",
            "maxLength": 255,
            "title": "Drive File Id"
          },
          "file_name": {
            "type": "string",
            "maxLength": 255,
            "title": "File Name"
          },
          "s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "S3 Path"
          },
          "mime_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Mime Type",
            "nullable": true
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AssetStatus",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "UPLOADING: uploading\u003Cbr/\u003EPENDING: pending\u003Cbr/\u003EPROCESSING: processing\u003Cbr/\u003EDONE: done\u003Cbr/\u003EFAILED: failed",
            "default": "uploading"
          },
          "project": {
            "$ref": "#/components/schemas/Project_657ngw_leaf",
            "title": "Project"
          },
          "author_id": {
            "type": "string",
            "format": "uuid",
            "title": "Author Id"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "drive_file_id", "file_name", "s3_path", "project", "author_id"],
        "title": "AssetOut"
      },
      "AssetResponse": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": ["url"],
        "title": "AssetResponse"
      },
      "AssetStatus": {
        "type": "string",
        "enum": ["uploading", "pending", "processing", "done", "failed"],
        "title": "AssetStatus"
      },
      "Asset_bqbv2z_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "drive_file_id": {
            "type": "string",
            "maxLength": 255,
            "title": "Drive File Id"
          },
          "file_name": {
            "type": "string",
            "maxLength": 255,
            "title": "File Name"
          },
          "s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "S3 Path"
          },
          "mime_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Mime Type",
            "nullable": true
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AssetStatus",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "UPLOADING: uploading\u003Cbr/\u003EPENDING: pending\u003Cbr/\u003EPROCESSING: processing\u003Cbr/\u003EDONE: done\u003Cbr/\u003EFAILED: failed",
            "default": "uploading"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "drive_file_id", "file_name", "s3_path"],
        "title": "Asset"
      },
      "Asset_ygubkn_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "drive_file_id": {
            "type": "string",
            "maxLength": 255,
            "title": "Drive File Id"
          },
          "file_name": {
            "type": "string",
            "maxLength": 255,
            "title": "File Name"
          },
          "s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "S3 Path"
          },
          "mime_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Mime Type",
            "nullable": true
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AssetStatus",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "UPLOADING: uploading\u003Cbr/\u003EPENDING: pending\u003Cbr/\u003EPROCESSING: processing\u003Cbr/\u003EDONE: done\u003Cbr/\u003EFAILED: failed",
            "default": "uploading"
          },
          "author": {
            "$ref": "#/components/schemas/User_tb4km4_leaf",
            "title": "Author"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "drive_file_id", "file_name", "s3_path", "author"],
        "title": "Asset"
      },
      "AutofillRequest": {
        "properties": {
          "user_input": {
            "type": "string",
            "title": "User Input"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          },
          "rpd_type": {
            "type": "string",
            "title": "Rpd Type"
          },
          "max_suggestions": {
            "type": "integer",
            "title": "Max Suggestions",
            "default": 5
          }
        },
        "type": "object",
        "required": ["user_input", "rpd_type"],
        "title": "AutofillRequest",
        "description": "智能补全请求模型"
      },
      "AutofillResponse": {
        "properties": {
          "suggestions": {
            "items": {
              "$ref": "#/components/schemas/AutofillSuggestion"
            },
            "type": "array",
            "title": "Suggestions"
          },
          "original_input": {
            "type": "string",
            "title": "Original Input"
          },
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          }
        },
        "type": "object",
        "required": ["suggestions", "original_input", "success"],
        "title": "AutofillResponse",
        "description": "智能补全响应模型"
      },
      "AutofillSuggestion": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "confidence": {
            "type": "number",
            "title": "Confidence"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": ["text", "confidence"],
        "title": "AutofillSuggestion",
        "description": "单个补全建议"
      },
      "BatchInitiateAiReviewRequest": {
        "properties": {
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id",
            "description": "The ID of the project these tasks belong to."
          },
          "task_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Task Ids",
            "description": "A list of task IDs to initiate AI review for."
          }
        },
        "type": "object",
        "required": ["project_id", "task_ids"],
        "title": "BatchInitiateAiReviewRequest"
      },
      "BatchInitiateCustomAiReviewRequest": {
        "properties": {
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id",
            "description": "The ID of the project these tasks belong to."
          },
          "task_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Task Ids",
            "description": "A list of task IDs to initiate AI review for."
          },
          "rpd_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rpd Ids",
            "description": "A list of Review Point Definition IDs to run. If not provided, will use all active RPDs."
          },
          "review_set_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Set Ids",
            "description": "A list of Review Set IDs to expand into RPD IDs."
          },
          "mode": {
            "$ref": "#/components/schemas/AiReviewMode",
            "description": "AI Review Mode: 'quality' for precision, 'speed' for faster results.",
            "default": "quality"
          }
        },
        "type": "object",
        "required": ["project_id", "task_ids"],
        "title": "BatchInitiateCustomAiReviewRequest"
      },
      "BatchJobStatus": {
        "type": "string",
        "enum": ["pending", "running", "completed", "failed", "cancelled"],
        "title": "BatchJobStatus"
      },
      "BatchProcessJobListItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "batch_id": {
            "type": "string",
            "title": "Batch Id"
          },
          "job_type": {
            "type": "string",
            "title": "Job Type"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "total_items": {
            "type": "integer",
            "title": "Total Items"
          },
          "successful_items": {
            "type": "integer",
            "title": "Successful Items"
          },
          "failed_items": {
            "type": "integer",
            "title": "Failed Items"
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds"
          },
          "initiated_by_user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Initiated By User Name"
          },
          "initiated_by_user_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Initiated By User Email"
          }
        },
        "type": "object",
        "required": [
          "id",
          "batch_id",
          "job_type",
          "status",
          "created_at",
          "total_items",
          "successful_items",
          "failed_items"
        ],
        "title": "BatchProcessJobListItem",
        "description": "批处理任务列表项响应模型 - 简化版，只包含列表显示需要的字段"
      },
      "BatchProcessJobOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "batch_id": {
            "type": "string",
            "maxLength": 255,
            "title": "Batch Id",
            "description": "批次标识符，用于关联相关的处理任务"
          },
          "job_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Job Name",
            "description": "任务名称"
          },
          "job_type": {
            "type": "string",
            "maxLength": 100,
            "title": "Job Type",
            "description": "任务类型，如ai_review_cr_check"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BatchJobStatus",
                "maxLength": 9
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "批处理任务状态",
            "default": "pending"
          },
          "total_items": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Items",
            "description": "总任务数量",
            "default": 0
          },
          "processed_items": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed Items",
            "description": "已处理任务数量",
            "default": 0
          },
          "successful_items": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Successful Items",
            "description": "成功处理的任务数量",
            "default": 0
          },
          "failed_items": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Failed Items",
            "description": "失败的任务数量",
            "default": 0
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At",
            "description": "任务开始时间",
            "nullable": true
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "任务完成时间",
            "nullable": true
          },
          "max_concurrent": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Concurrent",
            "description": "最大并发数",
            "default": 4
          },
          "results": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "description": "任务结果，以JSON格式存储",
            "nullable": true
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "错误信息",
            "nullable": true
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id",
            "description": "创建该批处理任务的用户",
            "nullable": true
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id",
            "description": "关联的项目",
            "nullable": true
          },
          "progress_percentage": {
            "type": "number",
            "title": "Progress Percentage",
            "description": "计算任务进度百分比",
            "readOnly": true
          },
          "success_rate": {
            "type": "number",
            "title": "Success Rate",
            "description": "计算成功率",
            "readOnly": true
          },
          "is_completed": {
            "type": "boolean",
            "title": "Is Completed",
            "description": "检查任务是否已完成",
            "readOnly": true
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds",
            "description": "计算任务持续时间（秒）",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "batch_id",
          "job_name",
          "job_type",
          "progress_percentage",
          "success_rate",
          "is_completed",
          "duration_seconds"
        ],
        "title": "BatchProcessJobOut",
        "description": "批处理任务模型，用于记录和跟踪批量处理任务的状态"
      },
      "BatchProcessJob_bx6yub_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "batch_id": {
            "type": "string",
            "maxLength": 255,
            "title": "Batch Id",
            "description": "批次标识符，用于关联相关的处理任务"
          },
          "job_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Job Name",
            "description": "任务名称"
          },
          "job_type": {
            "type": "string",
            "maxLength": 100,
            "title": "Job Type",
            "description": "任务类型，如ai_review_cr_check"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BatchJobStatus",
                "maxLength": 9
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "批处理任务状态",
            "default": "pending"
          },
          "created_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User_rlfvwj_leaf"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By",
            "description": "创建该批处理任务的用户",
            "nullable": true
          },
          "total_items": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Items",
            "description": "总任务数量",
            "default": 0
          },
          "processed_items": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed Items",
            "description": "已处理任务数量",
            "default": 0
          },
          "successful_items": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Successful Items",
            "description": "成功处理的任务数量",
            "default": 0
          },
          "failed_items": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Failed Items",
            "description": "失败的任务数量",
            "default": 0
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At",
            "description": "任务开始时间",
            "nullable": true
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "任务完成时间",
            "nullable": true
          },
          "max_concurrent": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Concurrent",
            "description": "最大并发数",
            "default": 4
          },
          "parameters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters",
            "description": "任务参数，以JSON格式存储",
            "nullable": true
          },
          "results": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "description": "任务结果，以JSON格式存储",
            "nullable": true
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "错误信息",
            "nullable": true
          },
          "progress_percentage": {
            "type": "number",
            "title": "Progress Percentage",
            "description": "计算任务进度百分比",
            "readOnly": true
          },
          "success_rate": {
            "type": "number",
            "title": "Success Rate",
            "description": "计算成功率",
            "readOnly": true
          },
          "is_completed": {
            "type": "boolean",
            "title": "Is Completed",
            "description": "检查任务是否已完成",
            "readOnly": true
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds",
            "description": "计算任务持续时间（秒）",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "batch_id",
          "job_name",
          "job_type",
          "created_by",
          "progress_percentage",
          "success_rate",
          "is_completed",
          "duration_seconds"
        ],
        "title": "BatchProcessJob",
        "description": "批处理任务模型，用于记录和跟踪批量处理任务的状态"
      },
      "BatchProcessJob_tvdggc_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "batch_id": {
            "type": "string",
            "maxLength": 255,
            "title": "Batch Id",
            "description": "批次标识符，用于关联相关的处理任务"
          },
          "job_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Job Name",
            "description": "任务名称"
          },
          "job_type": {
            "type": "string",
            "maxLength": 100,
            "title": "Job Type",
            "description": "任务类型，如ai_review_cr_check"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BatchJobStatus",
                "maxLength": 9
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "批处理任务状态",
            "default": "pending"
          },
          "total_items": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Items",
            "description": "总任务数量",
            "default": 0
          },
          "processed_items": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed Items",
            "description": "已处理任务数量",
            "default": 0
          },
          "successful_items": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Successful Items",
            "description": "成功处理的任务数量",
            "default": 0
          },
          "failed_items": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Failed Items",
            "description": "失败的任务数量",
            "default": 0
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At",
            "description": "任务开始时间",
            "nullable": true
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "任务完成时间",
            "nullable": true
          },
          "max_concurrent": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Concurrent",
            "description": "最大并发数",
            "default": 4
          },
          "parameters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters",
            "description": "任务参数，以JSON格式存储",
            "nullable": true
          },
          "results": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "description": "任务结果，以JSON格式存储",
            "nullable": true
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "错误信息",
            "nullable": true
          },
          "progress_percentage": {
            "type": "number",
            "title": "Progress Percentage",
            "description": "计算任务进度百分比",
            "readOnly": true
          },
          "success_rate": {
            "type": "number",
            "title": "Success Rate",
            "description": "计算成功率",
            "readOnly": true
          },
          "is_completed": {
            "type": "boolean",
            "title": "Is Completed",
            "description": "检查任务是否已完成",
            "readOnly": true
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds",
            "description": "计算任务持续时间（秒）",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "batch_id",
          "job_name",
          "job_type",
          "progress_percentage",
          "success_rate",
          "is_completed",
          "duration_seconds"
        ],
        "title": "BatchProcessJob",
        "description": "批处理任务模型，用于记录和跟踪批量处理任务的状态"
      },
      "BatchProcessJob_vaw7qt_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "batch_id": {
            "type": "string",
            "maxLength": 255,
            "title": "Batch Id",
            "description": "批次标识符，用于关联相关的处理任务"
          },
          "job_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Job Name",
            "description": "任务名称"
          },
          "job_type": {
            "type": "string",
            "maxLength": 100,
            "title": "Job Type",
            "description": "任务类型，如ai_review_cr_check"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BatchJobStatus",
                "maxLength": 9
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "批处理任务状态",
            "default": "pending"
          },
          "created_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User_pitg6z_leaf"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By",
            "description": "创建该批处理任务的用户",
            "nullable": true
          },
          "total_items": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Items",
            "description": "总任务数量",
            "default": 0
          },
          "processed_items": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed Items",
            "description": "已处理任务数量",
            "default": 0
          },
          "successful_items": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Successful Items",
            "description": "成功处理的任务数量",
            "default": 0
          },
          "failed_items": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Failed Items",
            "description": "失败的任务数量",
            "default": 0
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At",
            "description": "任务开始时间",
            "nullable": true
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "任务完成时间",
            "nullable": true
          },
          "max_concurrent": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Concurrent",
            "description": "最大并发数",
            "default": 4
          },
          "parameters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters",
            "description": "任务参数，以JSON格式存储",
            "nullable": true
          },
          "results": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "description": "任务结果，以JSON格式存储",
            "nullable": true
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "错误信息",
            "nullable": true
          },
          "progress_percentage": {
            "type": "number",
            "title": "Progress Percentage",
            "description": "计算任务进度百分比",
            "readOnly": true
          },
          "success_rate": {
            "type": "number",
            "title": "Success Rate",
            "description": "计算成功率",
            "readOnly": true
          },
          "is_completed": {
            "type": "boolean",
            "title": "Is Completed",
            "description": "检查任务是否已完成",
            "readOnly": true
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds",
            "description": "计算任务持续时间（秒）",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "batch_id",
          "job_name",
          "job_type",
          "created_by",
          "progress_percentage",
          "success_rate",
          "is_completed",
          "duration_seconds"
        ],
        "title": "BatchProcessJob",
        "description": "批处理任务模型，用于记录和跟踪批量处理任务的状态"
      },
      "BatchProcessingRecord": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "batch_id": {
            "type": "string",
            "title": "Batch Id"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "processing_type": {
            "type": "string",
            "title": "Processing Type"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "initiated_by_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Initiated By User Id"
          },
          "initiated_by_user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Initiated By User Name"
          },
          "initiated_by_user_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Initiated By User Email"
          },
          "total_tasks": {
            "type": "integer",
            "title": "Total Tasks"
          },
          "successful_tasks": {
            "type": "integer",
            "title": "Successful Tasks"
          },
          "failed_tasks": {
            "type": "integer",
            "title": "Failed Tasks"
          },
          "skipped_tasks": {
            "type": "integer",
            "title": "Skipped Tasks"
          },
          "max_concurrent_tasks": {
            "type": "integer",
            "title": "Max Concurrent Tasks",
            "default": 4
          },
          "total_processing_time_seconds": {
            "type": "number",
            "title": "Total Processing Time Seconds"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "task_results": {
            "items": {
              "$ref": "#/components/schemas/BatchTaskResult"
            },
            "type": "array",
            "title": "Task Results",
            "default": []
          },
          "error_summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Summary"
          }
        },
        "type": "object",
        "required": [
          "id",
          "batch_id",
          "processing_type",
          "status",
          "total_tasks",
          "successful_tasks",
          "failed_tasks",
          "skipped_tasks",
          "total_processing_time_seconds",
          "created_at",
          "updated_at"
        ],
        "title": "BatchProcessingRecord",
        "description": "批处理记录详情响应模型"
      },
      "BatchProcessingStats": {
        "properties": {
          "total_batches": {
            "type": "integer",
            "title": "Total Batches"
          },
          "success_rate_percentage": {
            "type": "number",
            "title": "Success Rate Percentage"
          },
          "failed_batches": {
            "type": "integer",
            "title": "Failed Batches"
          },
          "average_processing_time_seconds": {
            "type": "number",
            "title": "Average Processing Time Seconds"
          },
          "total_tasks_processed": {
            "type": "integer",
            "title": "Total Tasks Processed"
          },
          "successful_batches": {
            "type": "integer",
            "title": "Successful Batches"
          }
        },
        "type": "object",
        "required": [
          "total_batches",
          "success_rate_percentage",
          "failed_batches",
          "average_processing_time_seconds",
          "total_tasks_processed",
          "successful_batches"
        ],
        "title": "BatchProcessingStats",
        "description": "批处理统计信息响应模型"
      },
      "BatchTaskResult": {
        "properties": {
          "task_id": {
            "type": "string",
            "title": "Task Id"
          },
          "task_name": {
            "type": "string",
            "title": "Task Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "findings_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Findings Count"
          },
          "severity": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Severity"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          },
          "subtask_id": {
            "type": "string",
            "title": "Subtask Id"
          },
          "parent_task_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Task Id"
          }
        },
        "type": "object",
        "required": ["task_id", "task_name", "status", "created_at", "updated_at", "subtask_id"],
        "title": "BatchTaskResult",
        "description": "批处理任务结果详情"
      },
      "Body_analyze_video_scenes_api_v1_video_scenes_analyze_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "detector_type": {
            "type": "string",
            "title": "Detector Type",
            "default": "adaptive"
          },
          "threshold": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Threshold"
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_analyze_video_scenes_api_v1_video_scenes_analyze_post"
      },
      "Body_batch_upload_items_api_v1_items_batch_upload_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "tags": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["files"],
        "title": "Body_batch_upload_items_api_v1_items_batch_upload_post"
      },
      "Body_create_subtask_api_v1_tasks__task_id__subtasks_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "task_type_str": {
            "type": "string",
            "title": "Task Type Str",
            "default": "picture"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "Body_create_subtask_api_v1_tasks__task_id__subtasks_post"
      },
      "Body_create_task_from_uploaded_image_api_v1_projects__project_id__tasks_create_from_image_post": {
        "properties": {
          "image_file": {
            "type": "string",
            "format": "binary",
            "title": "Image File",
            "description": "アップロードする画像ファイル"
          },
          "tag_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag Ids"
          }
        },
        "type": "object",
        "required": ["image_file"],
        "title": "Body_create_task_from_uploaded_image_api_v1_projects__project_id__tasks_create_from_image_post"
      },
      "Body_create_task_from_uploaded_video_api_v1_projects__project_id__tasks_create_from_video_post": {
        "properties": {
          "video_file": {
            "type": "string",
            "format": "binary",
            "title": "Video File",
            "description": "アップロードする動画ファイル"
          },
          "tag_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag Ids"
          }
        },
        "type": "object",
        "required": ["video_file"],
        "title": "Body_create_task_from_uploaded_video_api_v1_projects__project_id__tasks_create_from_video_post"
      },
      "Body_extract_pdf_preview_api_v1_pdf_extract_preview_post": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "thumbnail_size": {
            "type": "integer",
            "title": "Thumbnail Size",
            "default": 300
          },
          "min_size": {
            "type": "integer",
            "title": "Min Size",
            "default": 1000
          },
          "skip_duplicates": {
            "type": "boolean",
            "title": "Skip Duplicates",
            "default": true
          }
        },
        "type": "object",
        "required": ["session_id", "file"],
        "title": "Body_extract_pdf_preview_api_v1_pdf_extract_preview_post"
      },
      "Body_get_scene_frames_api_v1_video_scenes__scene_number__frames_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "detector_type": {
            "type": "string",
            "title": "Detector Type",
            "default": "adaptive"
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_get_scene_frames_api_v1_video_scenes__scene_number__frames_post"
      },
      "Body_get_scene_frames_with_info_api_v1_video_scenes__scene_number__frames_with_info_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "detector_type": {
            "type": "string",
            "title": "Detector Type",
            "default": "adaptive"
          },
          "threshold": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Threshold"
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_get_scene_frames_with_info_api_v1_video_scenes__scene_number__frames_with_info_post"
      },
      "Body_test_rpd_with_image_endpoint_api_v1_review_point_definitions_test_rpd_with_image_post": {
        "properties": {
          "image_file": {
            "type": "string",
            "format": "binary",
            "title": "Image File",
            "description": "要分析的图片文件"
          },
          "rpd_title": {
            "type": "string",
            "title": "Rpd Title",
            "description": "RPD标题"
          },
          "rpd_parent_key": {
            "type": "string",
            "title": "Rpd Parent Key",
            "description": "RPD类型: general_ng_review, copyright_review, visual_review"
          },
          "rpd_description_for_ai": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rpd Description For Ai",
            "description": "AI描述（copyright_review和visual_review用）"
          },
          "rpd_tag_list": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rpd Tag List",
            "description": "标签列表，用逗号分隔（general_ng_review用）"
          },
          "rpd_reference_images": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rpd Reference Images",
            "description": "参考图片S3路径，用逗号分隔（visual_review用）"
          },
          "cr_check": {
            "type": "boolean",
            "title": "Cr Check",
            "description": "是否启用CR检查",
            "default": false
          },
          "mode": {
            "type": "string",
            "title": "Mode",
            "description": "分析模式: quality 或 speed",
            "default": "quality"
          }
        },
        "type": "object",
        "required": ["image_file", "rpd_title", "rpd_parent_key"],
        "title": "Body_test_rpd_with_image_endpoint_api_v1_review_point_definitions_test_rpd_with_image_post"
      },
      "Body_upload_appellation_file_endpoint_api_v1_review_point_definitions_upload_appellation_file__post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "称呼表文件 (Excel .xlsx/.xls 或 JSON)"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "项目ID"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id",
            "description": "会话ID（可选，用于临时文件）"
          }
        },
        "type": "object",
        "required": ["file", "project_id"],
        "title": "Body_upload_appellation_file_endpoint_api_v1_review_point_definitions_upload_appellation_file__post"
      },
      "Body_upload_character_concept_art_image_api_v1_characters__character_id__concept_art_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_upload_character_concept_art_image_api_v1_characters__character_id__concept_art_post"
      },
      "Body_upload_character_concept_art_images_batch_api_v1_characters__character_id__concept_art_batch_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": ["files"],
        "title": "Body_upload_character_concept_art_images_batch_api_v1_characters__character_id__concept_art_batch_post"
      },
      "Body_upload_character_gallery_image_api_v1_characters__character_id__gallery_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_upload_character_gallery_image_api_v1_characters__character_id__gallery_post"
      },
      "Body_upload_character_gallery_images_batch_api_v1_characters__character_id__gallery_batch_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": ["files"],
        "title": "Body_upload_character_gallery_images_batch_api_v1_characters__character_id__gallery_batch_post"
      },
      "Body_upload_character_image_api_v1_characters__character_id__upload_image_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_upload_character_image_api_v1_characters__character_id__upload_image_post"
      },
      "Body_upload_document_api_v1_tasks_upload_document_post": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": ["project_id", "files"],
        "title": "Body_upload_document_api_v1_tasks_upload_document_post"
      },
      "Body_upload_image_api_v1_assets_images_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_upload_image_api_v1_assets_images_post"
      },
      "Body_upload_pptx_api_v1_tasks_upload_pptx_post": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": ["project_id", "files"],
        "title": "Body_upload_pptx_api_v1_tasks_upload_pptx_post"
      },
      "Body_upload_project_documents_api_v1_projects__project_id__documents_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "document file"
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_upload_project_documents_api_v1_projects__project_id__documents_post"
      },
      "Body_upload_rpd_reference_image_api_v1_projects__project_id__rpd_reference_images_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "RPD reference image file"
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_upload_rpd_reference_image_api_v1_projects__project_id__rpd_reference_images_post"
      },
      "Body_upload_rpd_reference_images_batch_api_v1_projects__project_id__rpd_reference_images_batch_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files",
            "description": "RPD reference image files"
          }
        },
        "type": "object",
        "required": ["files"],
        "title": "Body_upload_rpd_reference_images_batch_api_v1_projects__project_id__rpd_reference_images_batch_post"
      },
      "Body_upload_temp_image_api_v1_assets_temp_images_post": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": ["session_id", "file"],
        "title": "Body_upload_temp_image_api_v1_assets_temp_images_post"
      },
      "BoundingBoxDetectionRequest": {
        "properties": {
          "image_url": {
            "type": "string",
            "title": "Image Url"
          },
          "subtask_id": {
            "type": "string",
            "title": "Subtask Id"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "default": 10
          }
        },
        "type": "object",
        "required": ["image_url", "subtask_id"],
        "title": "BoundingBoxDetectionRequest"
      },
      "CharacterCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "features": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features"
          },
          "image_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Path"
          },
          "reference_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Images"
          },
          "ip_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Id"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          }
        },
        "type": "object",
        "required": ["name", "project_id"],
        "title": "CharacterCreate",
        "description": "用于创建角色的输入模型"
      },
      "CharacterDetail": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias",
            "nullable": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "features": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features",
            "nullable": true
          },
          "image_path": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1024
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Path",
            "nullable": true
          },
          "reference_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Images",
            "description": "List of S3 paths for character reference images",
            "nullable": true
          },
          "concept_art_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Concept Art Images",
            "description": "List of S3 paths for character concept art and design collection images",
            "nullable": true
          },
          "ip": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IP_vvhzw6_leaf"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "associated_rpds": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinition_r45ff3_leaf"
            },
            "type": "array",
            "title": "Associated Rpds"
          },
          "review_sets": {
            "items": {
              "$ref": "#/components/schemas/ReviewSet_6gyanx_leaf"
            },
            "type": "array",
            "title": "Review Sets"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "获取角色图片的URL。依赖于 _image_url 是否被 fetch_image_url 填充。",
            "readOnly": true
          },
          "gallery_image_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Gallery Image Urls",
            "description": "获取角色画廊图片的URL列表。依赖于 _gallery_image_urls 是否被 fetch_gallery_image_urls 填充。",
            "readOnly": true
          },
          "concept_art_image_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Concept Art Image Urls",
            "description": "获取角色设定集图片的URL列表。依赖于 _concept_art_image_urls 是否被 fetch_concept_art_image_urls 填充。",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "ip",
          "project_id",
          "associated_rpds",
          "review_sets",
          "image_url",
          "gallery_image_urls",
          "concept_art_image_urls"
        ],
        "title": "CharacterDetail",
        "description": "角色模型，用于存储角色信息"
      },
      "CharacterForReviewSet": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "thumbnail_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnail Url"
          }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "CharacterForReviewSet"
      },
      "CharacterRPDRecommendationsResponse": {
        "properties": {
          "character_id": {
            "type": "string",
            "format": "uuid",
            "title": "Character Id",
            "description": "The ID of the character"
          },
          "character_name": {
            "type": "string",
            "title": "Character Name",
            "description": "The name of the character"
          },
          "recommendations": {
            "items": {
              "$ref": "#/components/schemas/RPDRecommendation"
            },
            "type": "array",
            "title": "Recommendations",
            "description": "List of recommended RPDs"
          },
          "total_recommendations": {
            "type": "integer",
            "title": "Total Recommendations",
            "description": "Total number of recommendations"
          }
        },
        "type": "object",
        "required": ["character_id", "character_name", "recommendations", "total_recommendations"],
        "title": "CharacterRPDRecommendationsResponse",
        "description": "Response body for character-based RPD recommendations"
      },
      "CharacterUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "features": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features"
          },
          "image_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Path"
          },
          "reference_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Images"
          },
          "ip_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Id"
          }
        },
        "type": "object",
        "title": "CharacterUpdate",
        "description": "用于更新角色的输入模型"
      },
      "Character_5uffyo_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias",
            "nullable": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "features": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features",
            "nullable": true
          },
          "image_path": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1024
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Path",
            "nullable": true
          },
          "reference_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Images",
            "description": "List of S3 paths for character reference images",
            "nullable": true
          },
          "concept_art_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Concept Art Images",
            "description": "List of S3 paths for character concept art and design collection images",
            "nullable": true
          },
          "ip": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IP_s4cbsg_leaf"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip",
            "nullable": true
          },
          "associated_rpds": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinition_4ds2k6_leaf"
            },
            "type": "array",
            "title": "Associated Rpds"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "获取角色图片的URL。依赖于 _image_url 是否被 fetch_image_url 填充。",
            "readOnly": true
          },
          "gallery_image_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Gallery Image Urls",
            "description": "获取角色画廊图片的URL列表。依赖于 _gallery_image_urls 是否被 fetch_gallery_image_urls 填充。",
            "readOnly": true
          },
          "concept_art_image_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Concept Art Image Urls",
            "description": "获取角色设定集图片的URL列表。依赖于 _concept_art_image_urls 是否被 fetch_concept_art_image_urls 填充。",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "ip",
          "associated_rpds",
          "image_url",
          "gallery_image_urls",
          "concept_art_image_urls"
        ],
        "title": "Character",
        "description": "角色模型，用于存储角色信息"
      },
      "Character_7ove2y_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias",
            "nullable": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "features": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features",
            "nullable": true
          },
          "image_path": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1024
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Path",
            "nullable": true
          },
          "reference_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Images",
            "description": "List of S3 paths for character reference images",
            "nullable": true
          },
          "concept_art_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Concept Art Images",
            "description": "List of S3 paths for character concept art and design collection images",
            "nullable": true
          },
          "ip": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IP_s4cbsg_leaf"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip",
            "nullable": true
          },
          "associated_rpds": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinition_4ds2k6_leaf"
            },
            "type": "array",
            "title": "Associated Rpds"
          },
          "review_sets": {
            "items": {
              "$ref": "#/components/schemas/ReviewSet_l6cvvj_leaf"
            },
            "type": "array",
            "title": "Review Sets"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "获取角色图片的URL。依赖于 _image_url 是否被 fetch_image_url 填充。",
            "readOnly": true
          },
          "gallery_image_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Gallery Image Urls",
            "description": "获取角色画廊图片的URL列表。依赖于 _gallery_image_urls 是否被 fetch_gallery_image_urls 填充。",
            "readOnly": true
          },
          "concept_art_image_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Concept Art Image Urls",
            "description": "获取角色设定集图片的URL列表。依赖于 _concept_art_image_urls 是否被 fetch_concept_art_image_urls 填充。",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "ip",
          "associated_rpds",
          "review_sets",
          "image_url",
          "gallery_image_urls",
          "concept_art_image_urls"
        ],
        "title": "Character",
        "description": "角色模型，用于存储角色信息"
      },
      "Character_hkomuq_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias",
            "nullable": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "features": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features",
            "nullable": true
          },
          "image_path": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1024
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Path",
            "nullable": true
          },
          "reference_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Images",
            "description": "List of S3 paths for character reference images",
            "nullable": true
          },
          "concept_art_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Concept Art Images",
            "description": "List of S3 paths for character concept art and design collection images",
            "nullable": true
          },
          "ip": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IP_s4cbsg_leaf"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip",
            "nullable": true
          },
          "review_sets": {
            "items": {
              "$ref": "#/components/schemas/ReviewSet_l6cvvj_leaf"
            },
            "type": "array",
            "title": "Review Sets"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "获取角色图片的URL。依赖于 _image_url 是否被 fetch_image_url 填充。",
            "readOnly": true
          },
          "gallery_image_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Gallery Image Urls",
            "description": "获取角色画廊图片的URL列表。依赖于 _gallery_image_urls 是否被 fetch_gallery_image_urls 填充。",
            "readOnly": true
          },
          "concept_art_image_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Concept Art Image Urls",
            "description": "获取角色设定集图片的URL列表。依赖于 _concept_art_image_urls 是否被 fetch_concept_art_image_urls 填充。",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "ip",
          "review_sets",
          "image_url",
          "gallery_image_urls",
          "concept_art_image_urls"
        ],
        "title": "Character",
        "description": "角色模型，用于存储角色信息"
      },
      "Character_nnzkbm_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias",
            "nullable": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "features": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features",
            "nullable": true
          },
          "image_path": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1024
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Path",
            "nullable": true
          },
          "reference_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Images",
            "description": "List of S3 paths for character reference images",
            "nullable": true
          },
          "concept_art_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Concept Art Images",
            "description": "List of S3 paths for character concept art and design collection images",
            "nullable": true
          },
          "ip": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IP_s4cbsg_leaf"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip",
            "nullable": true
          },
          "associated_rpds": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinition_42finq_leaf"
            },
            "type": "array",
            "title": "Associated Rpds"
          },
          "review_sets": {
            "items": {
              "$ref": "#/components/schemas/ReviewSet_kocyqy_leaf"
            },
            "type": "array",
            "title": "Review Sets"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "获取角色图片的URL。依赖于 _image_url 是否被 fetch_image_url 填充。",
            "readOnly": true
          },
          "gallery_image_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Gallery Image Urls",
            "description": "获取角色画廊图片的URL列表。依赖于 _gallery_image_urls 是否被 fetch_gallery_image_urls 填充。",
            "readOnly": true
          },
          "concept_art_image_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Concept Art Image Urls",
            "description": "获取角色设定集图片的URL列表。依赖于 _concept_art_image_urls 是否被 fetch_concept_art_image_urls 填充。",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "ip",
          "associated_rpds",
          "review_sets",
          "image_url",
          "gallery_image_urls",
          "concept_art_image_urls"
        ],
        "title": "Character",
        "description": "角色模型，用于存储角色信息"
      },
      "Character_o5toum_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias",
            "nullable": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "features": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features",
            "nullable": true
          },
          "image_path": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1024
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Path",
            "nullable": true
          },
          "reference_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Images",
            "description": "List of S3 paths for character reference images",
            "nullable": true
          },
          "concept_art_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Concept Art Images",
            "description": "List of S3 paths for character concept art and design collection images",
            "nullable": true
          },
          "associated_rpds": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinition_4ds2k6_leaf"
            },
            "type": "array",
            "title": "Associated Rpds"
          },
          "review_sets": {
            "items": {
              "$ref": "#/components/schemas/ReviewSet_l6cvvj_leaf"
            },
            "type": "array",
            "title": "Review Sets"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "获取角色图片的URL。依赖于 _image_url 是否被 fetch_image_url 填充。",
            "readOnly": true
          },
          "gallery_image_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Gallery Image Urls",
            "description": "获取角色画廊图片的URL列表。依赖于 _gallery_image_urls 是否被 fetch_gallery_image_urls 填充。",
            "readOnly": true
          },
          "concept_art_image_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Concept Art Image Urls",
            "description": "获取角色设定集图片的URL列表。依赖于 _concept_art_image_urls 是否被 fetch_concept_art_image_urls 填充。",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "associated_rpds",
          "review_sets",
          "image_url",
          "gallery_image_urls",
          "concept_art_image_urls"
        ],
        "title": "Character",
        "description": "角色模型，用于存储角色信息"
      },
      "Character_rstgbl_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias",
            "nullable": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "features": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features",
            "nullable": true
          },
          "image_path": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1024
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Path",
            "nullable": true
          },
          "reference_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Images",
            "description": "List of S3 paths for character reference images",
            "nullable": true
          },
          "concept_art_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Concept Art Images",
            "description": "List of S3 paths for character concept art and design collection images",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "获取角色图片的URL。依赖于 _image_url 是否被 fetch_image_url 填充。",
            "readOnly": true
          },
          "gallery_image_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Gallery Image Urls",
            "description": "获取角色画廊图片的URL列表。依赖于 _gallery_image_urls 是否被 fetch_gallery_image_urls 填充。",
            "readOnly": true
          },
          "concept_art_image_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Concept Art Image Urls",
            "description": "获取角色设定集图片的URL列表。依赖于 _concept_art_image_urls 是否被 fetch_concept_art_image_urls 填充。",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "image_url",
          "gallery_image_urls",
          "concept_art_image_urls"
        ],
        "title": "Character",
        "description": "角色模型，用于存储角色信息"
      },
      "CleanupSessionResponse": {
        "properties": {
          "deleted_count": {
            "type": "integer",
            "title": "Deleted Count"
          },
          "deleted_files": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Deleted Files"
          }
        },
        "type": "object",
        "required": ["deleted_count", "deleted_files"],
        "title": "CleanupSessionResponse"
      },
      "ConfirmExtractionRequest": {
        "properties": {
          "selected_images": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Selected Images"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          }
        },
        "type": "object",
        "required": ["selected_images"],
        "title": "ConfirmExtractionRequest"
      },
      "ConfirmExtractionResponse": {
        "properties": {
          "moved_files": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Moved Files"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors"
          },
          "pdf_id": {
            "type": "string",
            "title": "Pdf Id"
          },
          "extracted_items_count": {
            "type": "integer",
            "title": "Extracted Items Count"
          }
        },
        "type": "object",
        "required": ["moved_files", "errors", "pdf_id", "extracted_items_count"],
        "title": "ConfirmExtractionResponse"
      },
      "CropInfo": {
        "properties": {
          "x": {
            "type": "number",
            "title": "X"
          },
          "y": {
            "type": "number",
            "title": "Y"
          },
          "width": {
            "type": "number",
            "title": "Width"
          },
          "height": {
            "type": "number",
            "title": "Height"
          }
        },
        "type": "object",
        "required": ["x", "y", "width", "height"],
        "title": "CropInfo"
      },
      "Document_doemlv_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "file_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "File Path"
          },
          "file_name": {
            "type": "string",
            "maxLength": 255,
            "title": "File Name"
          },
          "file_size": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "File Size"
          },
          "file_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "File Type",
            "nullable": true
          },
          "file_url": {
            "type": "string",
            "title": "File Url",
            "description": "",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "file_path", "file_name", "file_size", "file_url"],
        "title": "Document"
      },
      "DrawingData": {
        "properties": {
          "drawing_data": {
            "type": "string",
            "title": "Drawing Data"
          }
        },
        "type": "object",
        "required": ["drawing_data"],
        "title": "DrawingData",
        "description": "Drawing data from fabric.js canvas"
      },
      "DrawingResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "subtask_id": {
            "type": "string",
            "title": "Subtask Id"
          },
          "drawing_data": {
            "type": "string",
            "title": "Drawing Data"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": ["id", "subtask_id", "drawing_data", "created_at"],
        "title": "DrawingResponse",
        "description": "Response after saving drawing"
      },
      "FileProcessingStatus": {
        "properties": {
          "batch_id": {
            "type": "string",
            "title": "Batch Id"
          },
          "total_files": {
            "type": "integer",
            "title": "Total Files"
          },
          "processed_files": {
            "type": "integer",
            "title": "Processed Files"
          },
          "successful_files": {
            "type": "integer",
            "title": "Successful Files"
          },
          "failed_files": {
            "type": "integer",
            "title": "Failed Files"
          },
          "files_status": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object",
            "title": "Files Status"
          }
        },
        "type": "object",
        "required": ["batch_id", "total_files", "processed_files", "successful_files", "failed_files", "files_status"],
        "title": "FileProcessingStatus",
        "description": "文件处理状态模型"
      },
      "FindingArea": {
        "properties": {
          "x": {
            "type": "integer",
            "title": "X"
          },
          "y": {
            "type": "integer",
            "title": "Y"
          },
          "width": {
            "type": "integer",
            "title": "Width"
          },
          "height": {
            "type": "integer",
            "title": "Height"
          }
        },
        "type": "object",
        "required": ["x", "y", "width", "height"],
        "title": "FindingArea",
        "description": "Represents a bounding box area for a detected element or finding."
      },
      "FindingBoundingBoxUpdate": {
        "properties": {
          "area": {
            "$ref": "#/components/schemas/FindingArea"
          }
        },
        "type": "object",
        "required": ["area"],
        "title": "FindingBoundingBoxUpdate"
      },
      "FindingContentUpdate": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "severity": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["risk", "alert", "safe", "high", "medium", "low"]
              },
              {
                "type": "null"
              }
            ],
            "title": "Severity"
          },
          "suggestion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suggestion"
          }
        },
        "type": "object",
        "title": "FindingContentUpdate"
      },
      "FindingFixedStatusUpdate": {
        "properties": {
          "is_fixed": {
            "type": "boolean",
            "title": "Is Fixed"
          }
        },
        "type": "object",
        "required": ["is_fixed"],
        "title": "FindingFixedStatusUpdate"
      },
      "GenerateDescriptionRequest": {
        "properties": {
          "tag": {
            "type": "string",
            "title": "Tag"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url"
          }
        },
        "type": "object",
        "required": ["tag", "image_url"],
        "title": "GenerateDescriptionRequest"
      },
      "GenerateDescriptionResponse": {
        "properties": {
          "eng_visual_characteristics": {
            "type": "string",
            "title": "Eng Visual Characteristics"
          },
          "eng_key_considerations": {
            "type": "string",
            "title": "Eng Key Considerations"
          },
          "jpn_visual_characteristics": {
            "type": "string",
            "title": "Jpn Visual Characteristics"
          },
          "jpn_key_considerations": {
            "type": "string",
            "title": "Jpn Key Considerations"
          }
        },
        "type": "object",
        "required": [
          "eng_visual_characteristics",
          "eng_key_considerations",
          "jpn_visual_characteristics",
          "jpn_key_considerations"
        ],
        "title": "GenerateDescriptionResponse"
      },
      "GenerateImageDescriptionRequest": {
        "properties": {
          "image_url": {
            "type": "string",
            "title": "Image Url"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          },
          "rpd_type": {
            "type": "string",
            "title": "Rpd Type",
            "default": "general_ng_review"
          },
          "rpd_title": {
            "type": "string",
            "title": "Rpd Title",
            "default": ""
          }
        },
        "type": "object",
        "required": ["image_url"],
        "title": "GenerateImageDescriptionRequest",
        "description": "生成图片详细描述的请求模型"
      },
      "GenerateImageDescriptionResponse": {
        "properties": {
          "detailed_description": {
            "type": "string",
            "title": "Detailed Description"
          },
          "key_elements": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Key Elements"
          },
          "style_analysis": {
            "type": "string",
            "title": "Style Analysis"
          },
          "suggested_keywords": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Suggested Keywords"
          },
          "confidence": {
            "type": "number",
            "title": "Confidence"
          }
        },
        "type": "object",
        "required": ["detailed_description", "key_elements", "style_analysis", "suggested_keywords", "confidence"],
        "title": "GenerateImageDescriptionResponse",
        "description": "生成图片详细描述的响应模型"
      },
      "GenerateRPDContentRequest": {
        "properties": {
          "user_input": {
            "type": "string",
            "title": "User Input"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          }
        },
        "type": "object",
        "required": ["user_input"],
        "title": "GenerateRPDContentRequest",
        "description": "生成完整RPD内容的请求模型"
      },
      "GenerateRPDContentResponse": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description_for_ai": {
            "type": "string",
            "title": "Description For Ai"
          },
          "description_for_ai_jpn": {
            "type": "string",
            "title": "Description For Ai Jpn"
          },
          "suggested_tag": {
            "type": "string",
            "title": "Suggested Tag"
          }
        },
        "type": "object",
        "required": ["title", "description_for_ai", "description_for_ai_jpn", "suggested_tag"],
        "title": "GenerateRPDContentResponse",
        "description": "生成完整RPD内容的响应模型"
      },
      "GenerateRequest": {
        "properties": {
          "base_prompt": {
            "type": "string",
            "maxLength": 500,
            "minLength": 1,
            "title": "Base Prompt"
          },
          "tags": {
            "$ref": "#/components/schemas/GenerationTags"
          },
          "count": {
            "type": "integer",
            "maximum": 4,
            "minimum": 1,
            "title": "Count",
            "default": 1
          },
          "aspect_ratio": {
            "type": "string",
            "pattern": "^(1:1|16:9|9:16|4:3|3:4)$",
            "title": "Aspect Ratio",
            "description": "Image aspect ratio",
            "default": "1:1"
          },
          "negative_prompt": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Negative Prompt",
            "description": "Things to avoid in generation"
          }
        },
        "type": "object",
        "required": ["base_prompt", "tags"],
        "title": "GenerateRequest"
      },
      "GeneratedReferenceResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "base_prompt": {
            "type": "string",
            "title": "Base Prompt"
          },
          "enhanced_prompt": {
            "type": "string",
            "title": "Enhanced Prompt"
          },
          "tags": {
            "type": "object",
            "title": "Tags"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url"
          },
          "image_path": {
            "type": "string",
            "title": "Image Path"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": ["id", "base_prompt", "enhanced_prompt", "tags", "image_url", "image_path", "created_at"],
        "title": "GeneratedReferenceResponse"
      },
      "GeneratedReference_qfq5xe_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "base_prompt": {
            "type": "string",
            "title": "Base Prompt"
          },
          "enhanced_prompt": {
            "type": "string",
            "title": "Enhanced Prompt"
          },
          "image_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "Image Path"
          },
          "tags": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "created_by": {
            "$ref": "#/components/schemas/User_dzz5ed_leaf",
            "title": "Created By"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "base_prompt",
          "enhanced_prompt",
          "image_path",
          "tags",
          "created_by",
          "image_url"
        ],
        "title": "GeneratedReference",
        "description": "AI-generated reference images - MVP version"
      },
      "GeneratedReference_z45sk2_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "base_prompt": {
            "type": "string",
            "title": "Base Prompt"
          },
          "enhanced_prompt": {
            "type": "string",
            "title": "Enhanced Prompt"
          },
          "image_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "Image Path"
          },
          "tags": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "created_by": {
            "$ref": "#/components/schemas/User_rlfvwj_leaf",
            "title": "Created By"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "base_prompt",
          "enhanced_prompt",
          "image_path",
          "tags",
          "created_by",
          "image_url"
        ],
        "title": "GeneratedReference",
        "description": "AI-generated reference images - MVP version"
      },
      "GeneratedReference_z4fyu6_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "base_prompt": {
            "type": "string",
            "title": "Base Prompt"
          },
          "enhanced_prompt": {
            "type": "string",
            "title": "Enhanced Prompt"
          },
          "image_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "Image Path"
          },
          "tags": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "base_prompt",
          "enhanced_prompt",
          "image_path",
          "tags",
          "image_url"
        ],
        "title": "GeneratedReference",
        "description": "AI-generated reference images - MVP version"
      },
      "GenerationTags": {
        "properties": {
          "style": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Style"
          },
          "pose": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pose"
          },
          "camera": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Camera"
          },
          "lighting": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lighting"
          }
        },
        "type": "object",
        "title": "GenerationTags",
        "description": "4 basic tag categories only"
      },
      "GoogleLoginRequest": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": ["token"],
        "title": "GoogleLoginRequest"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IPCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "project_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Ids"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "IPCreate",
        "description": "用于创建IP的输入模型"
      },
      "IPOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name"],
        "title": "IPOut",
        "description": "知识产権模型，如动漫、游戏等"
      },
      "IPUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "project_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Ids"
          }
        },
        "type": "object",
        "title": "IPUpdate",
        "description": "用于更新IP的输入模型"
      },
      "IP_s4cbsg_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name"],
        "title": "IP",
        "description": "知识产権模型，如动漫、游戏等"
      },
      "IP_uld44s_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "characters": {
            "items": {
              "$ref": "#/components/schemas/Character_o5toum_leaf"
            },
            "type": "array",
            "title": "Characters"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "characters"],
        "title": "IP",
        "description": "知识产権模型，如动漫、游戏等"
      },
      "IP_vvhzw6_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "projects": {
            "items": {
              "$ref": "#/components/schemas/Project_kgv3ck_leaf"
            },
            "type": "array",
            "title": "Projects"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "projects"],
        "title": "IP",
        "description": "知识产権模型，如动漫、游戏等"
      },
      "IP_wxaswg_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "characters": {
            "items": {
              "$ref": "#/components/schemas/Character_rstgbl_leaf"
            },
            "type": "array",
            "title": "Characters"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "characters"],
        "title": "IP",
        "description": "知识产権模型，如动漫、游戏等"
      },
      "IllustrationDocContent_k3cltr_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tags for the illustration",
            "nullable": true
          },
          "image_s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "Image S3 Path",
            "description": "S3 path for the generated image"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "prompt", "image_s3_path"],
        "title": "IllustrationDocContent"
      },
      "IllustrationDoc_fc6mi4_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "contents": {
            "items": {
              "$ref": "#/components/schemas/IllustrationDocContent_k3cltr_leaf"
            },
            "type": "array",
            "title": "Contents"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "contents"],
        "title": "IllustrationDoc"
      },
      "IllustrationDoc_mv32nl_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at"],
        "title": "IllustrationDoc"
      },
      "ImageRPDTestResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "findings_count": {
            "type": "integer",
            "title": "Findings Count"
          },
          "findings": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Findings",
            "default": []
          },
          "processing_time_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Time Seconds"
          },
          "rpd_title": {
            "type": "string",
            "title": "Rpd Title",
            "default": ""
          },
          "rpd_type": {
            "type": "string",
            "title": "Rpd Type",
            "default": ""
          }
        },
        "type": "object",
        "required": ["success", "message", "findings_count"],
        "title": "ImageRPDTestResponse",
        "description": "单张图片RPD测试的响应模型"
      },
      "ImageSearchRequest": {
        "properties": {
          "image_url": {
            "type": "string",
            "title": "Image Url"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "default": 20
          },
          "crop": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CropInfo"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["image_url"],
        "title": "ImageSearchRequest"
      },
      "ItemResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "s3_path": {
            "type": "string",
            "title": "S3 Path"
          },
          "s3_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Url"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url"
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type"
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "uploaded_by": {
            "type": "string",
            "format": "uuid",
            "title": "Uploaded By"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "source_type": {
            "type": "string",
            "title": "Source Type",
            "default": "direct_upload"
          },
          "source_pdf_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Pdf Id"
          },
          "pdf_page_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf Page Number"
          },
          "pdf_image_index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf Image Index"
          }
        },
        "type": "object",
        "required": ["id", "filename", "s3_path", "image_url", "uploaded_by", "created_at", "updated_at"],
        "title": "ItemResponse",
        "description": "Item response model"
      },
      "ItemUpdate": {
        "properties": {
          "filename": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filename"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          }
        },
        "type": "object",
        "title": "ItemUpdate",
        "description": "用于更新Item的输入模型"
      },
      "Item_dzsgnk_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "filename": {
            "type": "string",
            "maxLength": 255,
            "title": "Filename",
            "description": "Original filename of the uploaded image"
          },
          "s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "S3 Path",
            "description": "S3 path where the image is stored"
          },
          "s3_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2048
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Url",
            "description": "Pre-signed S3 URL for accessing the image",
            "nullable": true
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type",
            "description": "MIME type of the uploaded file",
            "nullable": true
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size",
            "description": "File size in bytes",
            "nullable": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tags associated with the item",
            "nullable": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the item",
            "nullable": true
          },
          "uploaded_by": {
            "$ref": "#/components/schemas/User_rlfvwj_leaf",
            "title": "Uploaded By",
            "description": "User who uploaded this item"
          },
          "source_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type",
            "description": "Source type: direct_upload | pdf_extracted",
            "default": "direct_upload"
          },
          "source_pdf": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PDF_bjp5ln_leaf"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Pdf",
            "description": "Source PDF if this item was extracted from a PDF",
            "nullable": true
          },
          "pdf_page_number": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf Page Number",
            "description": "PDF page number (1-based) if extracted from PDF",
            "nullable": true
          },
          "pdf_image_index": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf Image Index",
            "description": "Image index within the PDF page (0-based) if extracted from PDF",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "Get the image URL. Depends on _image_url being filled by fetch_image_url",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "filename", "s3_path", "uploaded_by", "source_pdf", "image_url"],
        "title": "Item",
        "description": "Item model for storing uploaded images and their metadata"
      },
      "Item_gluoye_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "filename": {
            "type": "string",
            "maxLength": 255,
            "title": "Filename",
            "description": "Original filename of the uploaded image"
          },
          "s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "S3 Path",
            "description": "S3 path where the image is stored"
          },
          "s3_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2048
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Url",
            "description": "Pre-signed S3 URL for accessing the image",
            "nullable": true
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type",
            "description": "MIME type of the uploaded file",
            "nullable": true
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size",
            "description": "File size in bytes",
            "nullable": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tags associated with the item",
            "nullable": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the item",
            "nullable": true
          },
          "project": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Project_ff7gsz_leaf"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project",
            "description": "Project this item belongs to",
            "nullable": true
          },
          "source_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type",
            "description": "Source type: direct_upload | pdf_extracted",
            "default": "direct_upload"
          },
          "pdf_page_number": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf Page Number",
            "description": "PDF page number (1-based) if extracted from PDF",
            "nullable": true
          },
          "pdf_image_index": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf Image Index",
            "description": "Image index within the PDF page (0-based) if extracted from PDF",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "Get the image URL. Depends on _image_url being filled by fetch_image_url",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "filename", "s3_path", "project", "image_url"],
        "title": "Item",
        "description": "Item model for storing uploaded images and their metadata"
      },
      "Item_gqpbj2_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "filename": {
            "type": "string",
            "maxLength": 255,
            "title": "Filename",
            "description": "Original filename of the uploaded image"
          },
          "s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "S3 Path",
            "description": "S3 path where the image is stored"
          },
          "s3_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2048
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Url",
            "description": "Pre-signed S3 URL for accessing the image",
            "nullable": true
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type",
            "description": "MIME type of the uploaded file",
            "nullable": true
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size",
            "description": "File size in bytes",
            "nullable": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tags associated with the item",
            "nullable": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the item",
            "nullable": true
          },
          "uploaded_by": {
            "$ref": "#/components/schemas/User_ogi2t2_leaf",
            "title": "Uploaded By",
            "description": "User who uploaded this item"
          },
          "source_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type",
            "description": "Source type: direct_upload | pdf_extracted",
            "default": "direct_upload"
          },
          "source_pdf": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PDF_7zl6yd_leaf"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Pdf",
            "description": "Source PDF if this item was extracted from a PDF",
            "nullable": true
          },
          "pdf_page_number": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf Page Number",
            "description": "PDF page number (1-based) if extracted from PDF",
            "nullable": true
          },
          "pdf_image_index": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf Image Index",
            "description": "Image index within the PDF page (0-based) if extracted from PDF",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "Get the image URL. Depends on _image_url being filled by fetch_image_url",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "filename", "s3_path", "uploaded_by", "source_pdf", "image_url"],
        "title": "Item",
        "description": "Item model for storing uploaded images and their metadata"
      },
      "Item_ksfl6y_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "filename": {
            "type": "string",
            "maxLength": 255,
            "title": "Filename",
            "description": "Original filename of the uploaded image"
          },
          "s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "S3 Path",
            "description": "S3 path where the image is stored"
          },
          "s3_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2048
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Url",
            "description": "Pre-signed S3 URL for accessing the image",
            "nullable": true
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type",
            "description": "MIME type of the uploaded file",
            "nullable": true
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size",
            "description": "File size in bytes",
            "nullable": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tags associated with the item",
            "nullable": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the item",
            "nullable": true
          },
          "uploaded_by": {
            "$ref": "#/components/schemas/User_rlfvwj_leaf",
            "title": "Uploaded By",
            "description": "User who uploaded this item"
          },
          "source_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type",
            "description": "Source type: direct_upload | pdf_extracted",
            "default": "direct_upload"
          },
          "pdf_page_number": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf Page Number",
            "description": "PDF page number (1-based) if extracted from PDF",
            "nullable": true
          },
          "pdf_image_index": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf Image Index",
            "description": "Image index within the PDF page (0-based) if extracted from PDF",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "Get the image URL. Depends on _image_url being filled by fetch_image_url",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "filename", "s3_path", "uploaded_by", "image_url"],
        "title": "Item",
        "description": "Item model for storing uploaded images and their metadata"
      },
      "Item_ops744_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "filename": {
            "type": "string",
            "maxLength": 255,
            "title": "Filename",
            "description": "Original filename of the uploaded image"
          },
          "s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "S3 Path",
            "description": "S3 path where the image is stored"
          },
          "s3_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2048
              },
              {
                "type": "null"
              }
            ],
            "title": "S3 Url",
            "description": "Pre-signed S3 URL for accessing the image",
            "nullable": true
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type",
            "description": "MIME type of the uploaded file",
            "nullable": true
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size",
            "description": "File size in bytes",
            "nullable": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tags associated with the item",
            "nullable": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the item",
            "nullable": true
          },
          "source_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type",
            "description": "Source type: direct_upload | pdf_extracted",
            "default": "direct_upload"
          },
          "pdf_page_number": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf Page Number",
            "description": "PDF page number (1-based) if extracted from PDF",
            "nullable": true
          },
          "pdf_image_index": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf Image Index",
            "description": "Image index within the PDF page (0-based) if extracted from PDF",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "Get the image URL. Depends on _image_url being filled by fetch_image_url",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "filename", "s3_path", "image_url"],
        "title": "Item",
        "description": "Item model for storing uploaded images and their metadata"
      },
      "LatestExecutedRPD": {
        "properties": {
          "rpd_key": {
            "type": "string",
            "title": "Rpd Key",
            "description": "RPD标识符"
          },
          "rpd_title": {
            "type": "string",
            "title": "Rpd Title",
            "description": "RPD标题"
          },
          "version_number": {
            "type": "integer",
            "title": "Version Number",
            "description": "RPD版本号"
          },
          "executed_at": {
            "type": "string",
            "format": "date-time",
            "title": "Executed At",
            "description": "执行时间"
          },
          "ai_review_version": {
            "type": "integer",
            "title": "Ai Review Version",
            "description": "AI审核版本号"
          },
          "finding_count": {
            "type": "integer",
            "title": "Finding Count",
            "description": "发现的问题数量"
          }
        },
        "type": "object",
        "required": ["rpd_key", "rpd_title", "version_number", "executed_at", "ai_review_version", "finding_count"],
        "title": "LatestExecutedRPD",
        "description": "最近执行的RPD信息"
      },
      "LatestExecutedRPDsResponse": {
        "properties": {
          "ai_review_version": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Review Version",
            "description": "AI审核版本号"
          },
          "executed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Executed At",
            "description": "执行时间"
          },
          "executed_rpds": {
            "items": {
              "$ref": "#/components/schemas/LatestExecutedRPD"
            },
            "type": "array",
            "title": "Executed Rpds",
            "description": "执行的RPD列表"
          },
          "total_findings": {
            "type": "integer",
            "title": "Total Findings",
            "description": "总发现问题数",
            "default": 0
          }
        },
        "type": "object",
        "title": "LatestExecutedRPDsResponse",
        "description": "最近执行的RPD列表响应"
      },
      "LikedImageRemoveRequest": {
        "properties": {
          "image_path": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 1,
            "title": "Image Path",
            "description": "S3 path/key for the image"
          },
          "source_type": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Source Type",
            "description": "Type of source object"
          },
          "source_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Id",
            "description": "UUID of the source object"
          }
        },
        "type": "object",
        "required": ["image_path", "source_type", "source_id"],
        "title": "LikedImageRemoveRequest",
        "description": "Request schema for removing liked images"
      },
      "LikedImageRequest": {
        "properties": {
          "image_path": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 1,
            "title": "Image Path",
            "description": "S3 path/key for the image"
          },
          "source_type": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Source Type",
            "description": "Type of source object"
          },
          "source_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Id",
            "description": "UUID of the source object"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name",
            "description": "Optional display name"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Optional tags",
            "default": []
          }
        },
        "type": "object",
        "required": ["image_path", "source_type", "source_id"],
        "title": "LikedImageRequest",
        "description": "Request schema for adding liked images with source tracking"
      },
      "LikedImageResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "image_path": {
            "type": "string",
            "title": "Image Path"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url"
          },
          "source_type": {
            "type": "string",
            "title": "Source Type"
          },
          "source_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Id"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": ["id", "image_path", "image_url", "source_type", "source_id", "created_at"],
        "title": "LikedImageResponse",
        "description": "Response schema for liked images with fresh URLs"
      },
      "LikedImage_xn5xrn_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "image_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "Image Path",
            "description": "S3 path/key for the liked image"
          },
          "source_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Source Type",
            "description": "Type of source object (character, item, generated_reference, etc.)"
          },
          "source_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Id",
            "description": "UUID of the source object that contains this image"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name",
            "description": "Optional display name for the liked image",
            "nullable": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Optional tags for categorizing liked images",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "title": "Image Url",
            "description": "Get the image URL. Depends on _image_url being filled by fetch_image_url",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "image_path", "source_type", "source_id", "image_url"],
        "title": "LikedImage",
        "description": "Liked images with proper S3 path storage and polymorphic source tracking"
      },
      "LoginResponse": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          }
        },
        "type": "object",
        "required": ["user_id"],
        "title": "LoginResponse"
      },
      "Organization_kywcwu_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "name"],
        "title": "Organization"
      },
      "Organization_loe2jr_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "domain": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Domain",
            "nullable": true
          },
          "members": {
            "items": {
              "$ref": "#/components/schemas/User_rlfvwj_leaf"
            },
            "type": "array",
            "title": "Members"
          },
          "admins": {
            "items": {
              "$ref": "#/components/schemas/User_rlfvwj_leaf"
            },
            "type": "array",
            "title": "Admins"
          },
          "priority_candidates": {
            "items": {
              "$ref": "#/components/schemas/TaskPriority_qapfh7_leaf"
            },
            "type": "array",
            "title": "Priority Candidates"
          },
          "status_candidates": {
            "items": {
              "$ref": "#/components/schemas/TaskStatus_kfi3op_leaf"
            },
            "type": "array",
            "title": "Status Candidates"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "description",
          "members",
          "admins",
          "priority_candidates",
          "status_candidates"
        ],
        "title": "Organization"
      },
      "Organization_xbred3_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "domain": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Domain",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "description"],
        "title": "Organization"
      },
      "PDFExtractionPreviewResponse": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "total_images_found": {
            "type": "integer",
            "title": "Total Images Found"
          },
          "images_extracted": {
            "type": "integer",
            "title": "Images Extracted"
          },
          "duplicates_skipped": {
            "type": "integer",
            "title": "Duplicates Skipped"
          },
          "small_images_skipped": {
            "type": "integer",
            "title": "Small Images Skipped"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors"
          },
          "extracted_images": {
            "items": {
              "$ref": "#/components/schemas/PDFImageInfo"
            },
            "type": "array",
            "title": "Extracted Images"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "total_pages",
          "total_images_found",
          "images_extracted",
          "duplicates_skipped",
          "small_images_skipped",
          "errors",
          "extracted_images"
        ],
        "title": "PDFExtractionPreviewResponse"
      },
      "PDFImageInfo": {
        "properties": {
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "original_filename": {
            "type": "string",
            "title": "Original Filename"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "index": {
            "type": "integer",
            "title": "Index"
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes"
          },
          "format": {
            "type": "string",
            "title": "Format"
          },
          "hash": {
            "type": "string",
            "title": "Hash"
          },
          "dimensions": {
            "type": "string",
            "title": "Dimensions"
          },
          "position": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Position"
          },
          "thumbnail_url": {
            "type": "string",
            "title": "Thumbnail Url"
          },
          "candidates_tried": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Candidates Tried"
          },
          "thumbnail_size_bytes": {
            "type": "integer",
            "title": "Thumbnail Size Bytes"
          }
        },
        "type": "object",
        "required": [
          "filename",
          "original_filename",
          "page",
          "index",
          "size_bytes",
          "format",
          "hash",
          "dimensions",
          "thumbnail_url",
          "candidates_tried",
          "thumbnail_size_bytes"
        ],
        "title": "PDFImageInfo"
      },
      "PDFResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "s3_path": {
            "type": "string",
            "title": "S3 Path"
          },
          "file_size": {
            "type": "integer",
            "title": "File Size"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "extraction_session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Session Id"
          },
          "extracted_at": {
            "type": "string",
            "format": "date-time",
            "title": "Extracted At"
          },
          "extraction_method": {
            "type": "string",
            "title": "Extraction Method"
          },
          "extraction_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Stats"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "uploaded_by": {
            "type": "string",
            "format": "uuid",
            "title": "Uploaded By"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "filename",
          "s3_path",
          "file_size",
          "total_pages",
          "extracted_at",
          "extraction_method",
          "project_id",
          "uploaded_by",
          "created_at",
          "updated_at"
        ],
        "title": "PDFResponse",
        "description": "PDF response model"
      },
      "PDF_7zl6yd_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "filename": {
            "type": "string",
            "maxLength": 255,
            "title": "Filename",
            "description": "Original PDF filename"
          },
          "s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "S3 Path",
            "description": "S3 path where the PDF is stored"
          },
          "file_size": {
            "type": "integer",
            "maximum": 9.223372036854776e18,
            "minimum": -9.223372036854776e18,
            "title": "File Size",
            "description": "PDF file size in bytes"
          },
          "total_pages": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Total Pages",
            "description": "Total number of pages in PDF"
          },
          "extraction_session_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Session Id",
            "description": "Session ID used during extraction",
            "nullable": true
          },
          "extracted_at": {
            "type": "string",
            "format": "date-time",
            "title": "Extracted At",
            "description": "When the PDF was processed for extraction"
          },
          "extraction_method": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Method",
            "description": "Method used for extraction",
            "default": "pymupdf"
          },
          "extraction_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Stats",
            "description": "Statistics from the extraction process",
            "nullable": true
          },
          "uploaded_by": {
            "$ref": "#/components/schemas/User_rlfvwj_leaf",
            "title": "Uploaded By",
            "description": "User who uploaded this PDF"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "filename",
          "s3_path",
          "file_size",
          "total_pages",
          "extracted_at",
          "uploaded_by"
        ],
        "title": "PDF",
        "description": "PDF model for storing uploaded PDF files and their extraction metadata"
      },
      "PDF_bjp5ln_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "filename": {
            "type": "string",
            "maxLength": 255,
            "title": "Filename",
            "description": "Original PDF filename"
          },
          "s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "S3 Path",
            "description": "S3 path where the PDF is stored"
          },
          "file_size": {
            "type": "integer",
            "maximum": 9.223372036854776e18,
            "minimum": -9.223372036854776e18,
            "title": "File Size",
            "description": "PDF file size in bytes"
          },
          "total_pages": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Total Pages",
            "description": "Total number of pages in PDF"
          },
          "extraction_session_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Session Id",
            "description": "Session ID used during extraction",
            "nullable": true
          },
          "extracted_at": {
            "type": "string",
            "format": "date-time",
            "title": "Extracted At",
            "description": "When the PDF was processed for extraction"
          },
          "extraction_method": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Method",
            "description": "Method used for extraction",
            "default": "pymupdf"
          },
          "extraction_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Stats",
            "description": "Statistics from the extraction process",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "filename",
          "s3_path",
          "file_size",
          "total_pages",
          "extracted_at"
        ],
        "title": "PDF",
        "description": "PDF model for storing uploaded PDF files and their extraction metadata"
      },
      "PDF_d3hw5m_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "filename": {
            "type": "string",
            "maxLength": 255,
            "title": "Filename",
            "description": "Original PDF filename"
          },
          "s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "S3 Path",
            "description": "S3 path where the PDF is stored"
          },
          "file_size": {
            "type": "integer",
            "maximum": 9.223372036854776e18,
            "minimum": -9.223372036854776e18,
            "title": "File Size",
            "description": "PDF file size in bytes"
          },
          "total_pages": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Total Pages",
            "description": "Total number of pages in PDF"
          },
          "extraction_session_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Session Id",
            "description": "Session ID used during extraction",
            "nullable": true
          },
          "extracted_at": {
            "type": "string",
            "format": "date-time",
            "title": "Extracted At",
            "description": "When the PDF was processed for extraction"
          },
          "extraction_method": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Method",
            "description": "Method used for extraction",
            "default": "pymupdf"
          },
          "extraction_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Stats",
            "description": "Statistics from the extraction process",
            "nullable": true
          },
          "project": {
            "$ref": "#/components/schemas/Project_s5dnc2_leaf",
            "description": "Project this PDF belongs to"
          },
          "extracted_items": {
            "items": {
              "$ref": "#/components/schemas/Item_gluoye_leaf"
            },
            "type": "array",
            "title": "Extracted Items",
            "description": "Source PDF if this item was extracted from a PDF"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "filename",
          "s3_path",
          "file_size",
          "total_pages",
          "extracted_at",
          "project",
          "extracted_items"
        ],
        "title": "PDF",
        "description": "PDF model for storing uploaded PDF files and their extraction metadata"
      },
      "PDF_i63z5k_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "filename": {
            "type": "string",
            "maxLength": 255,
            "title": "Filename",
            "description": "Original PDF filename"
          },
          "s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "S3 Path",
            "description": "S3 path where the PDF is stored"
          },
          "file_size": {
            "type": "integer",
            "maximum": 9.223372036854776e18,
            "minimum": -9.223372036854776e18,
            "title": "File Size",
            "description": "PDF file size in bytes"
          },
          "total_pages": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Total Pages",
            "description": "Total number of pages in PDF"
          },
          "extraction_session_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Session Id",
            "description": "Session ID used during extraction",
            "nullable": true
          },
          "extracted_at": {
            "type": "string",
            "format": "date-time",
            "title": "Extracted At",
            "description": "When the PDF was processed for extraction"
          },
          "extraction_method": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Method",
            "description": "Method used for extraction",
            "default": "pymupdf"
          },
          "extraction_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Stats",
            "description": "Statistics from the extraction process",
            "nullable": true
          },
          "uploaded_by": {
            "$ref": "#/components/schemas/User_rlfvwj_leaf",
            "title": "Uploaded By",
            "description": "User who uploaded this PDF"
          },
          "extracted_items": {
            "items": {
              "$ref": "#/components/schemas/Item_ops744_leaf"
            },
            "type": "array",
            "title": "Extracted Items",
            "description": "Source PDF if this item was extracted from a PDF"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "filename",
          "s3_path",
          "file_size",
          "total_pages",
          "extracted_at",
          "uploaded_by",
          "extracted_items"
        ],
        "title": "PDF",
        "description": "PDF model for storing uploaded PDF files and their extraction metadata"
      },
      "PDF_kyoraq_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "filename": {
            "type": "string",
            "maxLength": 255,
            "title": "Filename",
            "description": "Original PDF filename"
          },
          "s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "S3 Path",
            "description": "S3 path where the PDF is stored"
          },
          "file_size": {
            "type": "integer",
            "maximum": 9.223372036854776e18,
            "minimum": -9.223372036854776e18,
            "title": "File Size",
            "description": "PDF file size in bytes"
          },
          "total_pages": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Total Pages",
            "description": "Total number of pages in PDF"
          },
          "extraction_session_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Session Id",
            "description": "Session ID used during extraction",
            "nullable": true
          },
          "extracted_at": {
            "type": "string",
            "format": "date-time",
            "title": "Extracted At",
            "description": "When the PDF was processed for extraction"
          },
          "extraction_method": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Method",
            "description": "Method used for extraction",
            "default": "pymupdf"
          },
          "extraction_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Stats",
            "description": "Statistics from the extraction process",
            "nullable": true
          },
          "uploaded_by": {
            "$ref": "#/components/schemas/User_wk7sxb_leaf",
            "title": "Uploaded By",
            "description": "User who uploaded this PDF"
          },
          "extracted_items": {
            "items": {
              "$ref": "#/components/schemas/Item_ksfl6y_leaf"
            },
            "type": "array",
            "title": "Extracted Items",
            "description": "Source PDF if this item was extracted from a PDF"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "filename",
          "s3_path",
          "file_size",
          "total_pages",
          "extracted_at",
          "uploaded_by",
          "extracted_items"
        ],
        "title": "PDF",
        "description": "PDF model for storing uploaded PDF files and their extraction metadata"
      },
      "PDF_pmtqyp_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "filename": {
            "type": "string",
            "maxLength": 255,
            "title": "Filename",
            "description": "Original PDF filename"
          },
          "s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "S3 Path",
            "description": "S3 path where the PDF is stored"
          },
          "file_size": {
            "type": "integer",
            "maximum": 9.223372036854776e18,
            "minimum": -9.223372036854776e18,
            "title": "File Size",
            "description": "PDF file size in bytes"
          },
          "total_pages": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Total Pages",
            "description": "Total number of pages in PDF"
          },
          "extraction_session_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Session Id",
            "description": "Session ID used during extraction",
            "nullable": true
          },
          "extracted_at": {
            "type": "string",
            "format": "date-time",
            "title": "Extracted At",
            "description": "When the PDF was processed for extraction"
          },
          "extraction_method": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Method",
            "description": "Method used for extraction",
            "default": "pymupdf"
          },
          "extraction_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extraction Stats",
            "description": "Statistics from the extraction process",
            "nullable": true
          },
          "project": {
            "$ref": "#/components/schemas/Project_ff7gsz_leaf",
            "description": "Project this PDF belongs to"
          },
          "extracted_items": {
            "items": {
              "$ref": "#/components/schemas/Item_ops744_leaf"
            },
            "type": "array",
            "title": "Extracted Items",
            "description": "Source PDF if this item was extracted from a PDF"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "filename",
          "s3_path",
          "file_size",
          "total_pages",
          "extracted_at",
          "project",
          "extracted_items"
        ],
        "title": "PDF",
        "description": "PDF model for storing uploaded PDF files and their extraction metadata"
      },
      "Page_AssetOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AssetOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": ["items", "page", "size"],
        "title": "Page[AssetOut]"
      },
      "Page_ItemResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ItemResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": ["items", "page", "size"],
        "title": "Page[ItemResponse]"
      },
      "Page_ProjectOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ProjectOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": ["items", "page", "size"],
        "title": "Page[ProjectOut]"
      },
      "Page_ProjectSimpleOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ProjectSimpleOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": ["items", "page", "size"],
        "title": "Page[ProjectSimpleOut]"
      },
      "Page_SubtaskAnnotation_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/SubtaskAnnotation"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": ["items", "page", "size"],
        "title": "Page[SubtaskAnnotation]"
      },
      "Page_SubtaskOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/SubtaskOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": ["items", "page", "size"],
        "title": "Page[SubtaskOut]"
      },
      "Page_TaskKanbanOrderOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/TaskKanbanOrderOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": ["items", "page", "size"],
        "title": "Page[TaskKanbanOrderOut]"
      },
      "Page_TaskPriorityOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/TaskPriorityOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": ["items", "page", "size"],
        "title": "Page[TaskPriorityOut]"
      },
      "Page_TaskStatusOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/TaskStatusOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": ["items", "page", "size"],
        "title": "Page[TaskStatusOut]"
      },
      "Page_UserAdminListOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/UserAdminListOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": ["items", "page", "size"],
        "title": "Page[UserAdminListOut]"
      },
      "ProcessPPTXResponse": {
        "properties": {
          "asset_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "Asset Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": ["asset_id", "status"],
        "title": "ProcessPPTXResponse"
      },
      "ProjectIn": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "owner_org_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Org Id"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["name", "description", "owner_org_id"],
        "title": "ProjectIn"
      },
      "ProjectOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "owner_org": {
            "$ref": "#/components/schemas/Organization_xbred3_leaf",
            "title": "Owner Org"
          },
          "assets": {
            "items": {
              "$ref": "#/components/schemas/Asset_ygubkn_leaf"
            },
            "type": "array",
            "title": "Assets"
          },
          "batch_jobs": {
            "items": {
              "$ref": "#/components/schemas/BatchProcessJob_vaw7qt_leaf"
            },
            "type": "array",
            "title": "Batch Jobs",
            "description": "关联的项目"
          },
          "characters": {
            "items": {
              "$ref": "#/components/schemas/Character_nnzkbm_leaf"
            },
            "type": "array",
            "title": "Characters"
          },
          "documents": {
            "items": {
              "$ref": "#/components/schemas/Document_doemlv_leaf"
            },
            "type": "array",
            "title": "Documents"
          },
          "generated_references": {
            "items": {
              "$ref": "#/components/schemas/GeneratedReference_qfq5xe_leaf"
            },
            "type": "array",
            "title": "Generated References"
          },
          "related_ips": {
            "items": {
              "$ref": "#/components/schemas/IP_uld44s_leaf"
            },
            "type": "array",
            "title": "Related Ips"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/Item_gqpbj2_leaf"
            },
            "type": "array",
            "title": "Items",
            "description": "Project this item belongs to"
          },
          "pdfs": {
            "items": {
              "$ref": "#/components/schemas/PDF_kyoraq_leaf"
            },
            "type": "array",
            "title": "Pdfs",
            "description": "Project this PDF belongs to"
          },
          "prompts": {
            "items": {
              "$ref": "#/components/schemas/Prompt_qkmlty_leaf"
            },
            "type": "array",
            "title": "Prompts"
          },
          "review_point_definitions": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinition_gfcsr4_leaf"
            },
            "type": "array",
            "title": "Review Point Definitions"
          },
          "review_sets": {
            "items": {
              "$ref": "#/components/schemas/ReviewSet_xlj7hq_leaf"
            },
            "type": "array",
            "title": "Review Sets"
          },
          "task_tags": {
            "items": {
              "$ref": "#/components/schemas/TaskTag_rpbcgt_leaf"
            },
            "type": "array",
            "title": "Task Tags"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "description",
          "owner_org",
          "assets",
          "batch_jobs",
          "characters",
          "documents",
          "generated_references",
          "related_ips",
          "items",
          "pdfs",
          "prompts",
          "review_point_definitions",
          "review_sets",
          "task_tags"
        ],
        "title": "ProjectOut"
      },
      "ProjectSimpleOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "name"],
        "title": "ProjectSimpleOut"
      },
      "Project_657ngw_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "owner_org": {
            "$ref": "#/components/schemas/Organization_loe2jr_leaf",
            "title": "Owner Org"
          },
          "coop_orgs": {
            "items": {
              "$ref": "#/components/schemas/Organization_loe2jr_leaf"
            },
            "type": "array",
            "title": "Coop Orgs"
          },
          "coop_members": {
            "items": {
              "$ref": "#/components/schemas/User_tb4km4_leaf"
            },
            "type": "array",
            "title": "Coop Members"
          },
          "status_candidates": {
            "items": {
              "$ref": "#/components/schemas/TaskStatus_bsm5s6_leaf"
            },
            "type": "array",
            "title": "Status Candidates"
          },
          "priority_candidates": {
            "items": {
              "$ref": "#/components/schemas/TaskPriority_iu25nj_leaf"
            },
            "type": "array",
            "title": "Priority Candidates"
          },
          "batch_jobs": {
            "items": {
              "$ref": "#/components/schemas/BatchProcessJob_bx6yub_leaf"
            },
            "type": "array",
            "title": "Batch Jobs",
            "description": "关联的项目"
          },
          "characters": {
            "items": {
              "$ref": "#/components/schemas/Character_7ove2y_leaf"
            },
            "type": "array",
            "title": "Characters"
          },
          "documents": {
            "items": {
              "$ref": "#/components/schemas/Document_doemlv_leaf"
            },
            "type": "array",
            "title": "Documents"
          },
          "generated_references": {
            "items": {
              "$ref": "#/components/schemas/GeneratedReference_z45sk2_leaf"
            },
            "type": "array",
            "title": "Generated References"
          },
          "related_ips": {
            "items": {
              "$ref": "#/components/schemas/IP_wxaswg_leaf"
            },
            "type": "array",
            "title": "Related Ips"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/Item_dzsgnk_leaf"
            },
            "type": "array",
            "title": "Items",
            "description": "Project this item belongs to"
          },
          "pdfs": {
            "items": {
              "$ref": "#/components/schemas/PDF_i63z5k_leaf"
            },
            "type": "array",
            "title": "Pdfs",
            "description": "Project this PDF belongs to"
          },
          "prompts": {
            "items": {
              "$ref": "#/components/schemas/Prompt_qkmlty_leaf"
            },
            "type": "array",
            "title": "Prompts"
          },
          "review_point_definitions": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinition_ohzkjs_leaf"
            },
            "type": "array",
            "title": "Review Point Definitions"
          },
          "review_sets": {
            "items": {
              "$ref": "#/components/schemas/ReviewSet_4n4zx5_leaf"
            },
            "type": "array",
            "title": "Review Sets"
          },
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/Task_xgjixn_leaf"
            },
            "type": "array",
            "title": "Tasks"
          },
          "kanban_order": {
            "items": {
              "$ref": "#/components/schemas/TaskKanbanOrder_6rc2r6_leaf"
            },
            "type": "array",
            "title": "Kanban Order"
          },
          "task_tags": {
            "items": {
              "$ref": "#/components/schemas/TaskTag_prgcp2_leaf"
            },
            "type": "array",
            "title": "Task Tags"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "description",
          "owner_org",
          "coop_orgs",
          "coop_members",
          "status_candidates",
          "priority_candidates",
          "batch_jobs",
          "characters",
          "documents",
          "generated_references",
          "related_ips",
          "items",
          "pdfs",
          "prompts",
          "review_point_definitions",
          "review_sets",
          "tasks",
          "kanban_order",
          "task_tags"
        ],
        "title": "Project"
      },
      "Project_feg3u3_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "owner_org": {
            "$ref": "#/components/schemas/Organization_xbred3_leaf",
            "title": "Owner Org"
          },
          "coop_orgs": {
            "items": {
              "$ref": "#/components/schemas/Organization_xbred3_leaf"
            },
            "type": "array",
            "title": "Coop Orgs"
          },
          "coop_members": {
            "items": {
              "$ref": "#/components/schemas/User_rlfvwj_leaf"
            },
            "type": "array",
            "title": "Coop Members"
          },
          "status_candidates": {
            "items": {
              "$ref": "#/components/schemas/TaskStatus_kfi3op_leaf"
            },
            "type": "array",
            "title": "Status Candidates"
          },
          "priority_candidates": {
            "items": {
              "$ref": "#/components/schemas/TaskPriority_qapfh7_leaf"
            },
            "type": "array",
            "title": "Priority Candidates"
          },
          "assets": {
            "items": {
              "$ref": "#/components/schemas/Asset_bqbv2z_leaf"
            },
            "type": "array",
            "title": "Assets"
          },
          "batch_jobs": {
            "items": {
              "$ref": "#/components/schemas/BatchProcessJob_tvdggc_leaf"
            },
            "type": "array",
            "title": "Batch Jobs",
            "description": "关联的项目"
          },
          "characters": {
            "items": {
              "$ref": "#/components/schemas/Character_rstgbl_leaf"
            },
            "type": "array",
            "title": "Characters"
          },
          "documents": {
            "items": {
              "$ref": "#/components/schemas/Document_doemlv_leaf"
            },
            "type": "array",
            "title": "Documents"
          },
          "generated_references": {
            "items": {
              "$ref": "#/components/schemas/GeneratedReference_z4fyu6_leaf"
            },
            "type": "array",
            "title": "Generated References"
          },
          "related_ips": {
            "items": {
              "$ref": "#/components/schemas/IP_s4cbsg_leaf"
            },
            "type": "array",
            "title": "Related Ips"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/Item_ops744_leaf"
            },
            "type": "array",
            "title": "Items",
            "description": "Project this item belongs to"
          },
          "pdfs": {
            "items": {
              "$ref": "#/components/schemas/PDF_bjp5ln_leaf"
            },
            "type": "array",
            "title": "Pdfs",
            "description": "Project this PDF belongs to"
          },
          "prompts": {
            "items": {
              "$ref": "#/components/schemas/Prompt_qkmlty_leaf"
            },
            "type": "array",
            "title": "Prompts"
          },
          "review_point_definitions": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinition_4ds2k6_leaf"
            },
            "type": "array",
            "title": "Review Point Definitions"
          },
          "review_sets": {
            "items": {
              "$ref": "#/components/schemas/ReviewSet_l6cvvj_leaf"
            },
            "type": "array",
            "title": "Review Sets"
          },
          "kanban_order": {
            "items": {
              "$ref": "#/components/schemas/TaskKanbanOrder_y2r4ew_leaf"
            },
            "type": "array",
            "title": "Kanban Order"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "description",
          "owner_org",
          "coop_orgs",
          "coop_members",
          "status_candidates",
          "priority_candidates",
          "assets",
          "batch_jobs",
          "characters",
          "documents",
          "generated_references",
          "related_ips",
          "items",
          "pdfs",
          "prompts",
          "review_point_definitions",
          "review_sets",
          "kanban_order"
        ],
        "title": "Project"
      },
      "Project_ff7gsz_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "description"],
        "title": "Project"
      },
      "Project_kgv3ck_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "owner_org": {
            "$ref": "#/components/schemas/Organization_xbred3_leaf",
            "title": "Owner Org"
          },
          "coop_orgs": {
            "items": {
              "$ref": "#/components/schemas/Organization_xbred3_leaf"
            },
            "type": "array",
            "title": "Coop Orgs"
          },
          "coop_members": {
            "items": {
              "$ref": "#/components/schemas/User_rlfvwj_leaf"
            },
            "type": "array",
            "title": "Coop Members"
          },
          "status_candidates": {
            "items": {
              "$ref": "#/components/schemas/TaskStatus_kfi3op_leaf"
            },
            "type": "array",
            "title": "Status Candidates"
          },
          "priority_candidates": {
            "items": {
              "$ref": "#/components/schemas/TaskPriority_qapfh7_leaf"
            },
            "type": "array",
            "title": "Priority Candidates"
          },
          "assets": {
            "items": {
              "$ref": "#/components/schemas/Asset_bqbv2z_leaf"
            },
            "type": "array",
            "title": "Assets"
          },
          "batch_jobs": {
            "items": {
              "$ref": "#/components/schemas/BatchProcessJob_tvdggc_leaf"
            },
            "type": "array",
            "title": "Batch Jobs",
            "description": "关联的项目"
          },
          "documents": {
            "items": {
              "$ref": "#/components/schemas/Document_doemlv_leaf"
            },
            "type": "array",
            "title": "Documents"
          },
          "generated_references": {
            "items": {
              "$ref": "#/components/schemas/GeneratedReference_z4fyu6_leaf"
            },
            "type": "array",
            "title": "Generated References"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/Item_ops744_leaf"
            },
            "type": "array",
            "title": "Items",
            "description": "Project this item belongs to"
          },
          "pdfs": {
            "items": {
              "$ref": "#/components/schemas/PDF_bjp5ln_leaf"
            },
            "type": "array",
            "title": "Pdfs",
            "description": "Project this PDF belongs to"
          },
          "prompts": {
            "items": {
              "$ref": "#/components/schemas/Prompt_qkmlty_leaf"
            },
            "type": "array",
            "title": "Prompts"
          },
          "review_point_definitions": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinition_4ds2k6_leaf"
            },
            "type": "array",
            "title": "Review Point Definitions"
          },
          "review_sets": {
            "items": {
              "$ref": "#/components/schemas/ReviewSet_l6cvvj_leaf"
            },
            "type": "array",
            "title": "Review Sets"
          },
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/Task_6ea7cv_leaf"
            },
            "type": "array",
            "title": "Tasks"
          },
          "kanban_order": {
            "items": {
              "$ref": "#/components/schemas/TaskKanbanOrder_y2r4ew_leaf"
            },
            "type": "array",
            "title": "Kanban Order"
          },
          "task_tags": {
            "items": {
              "$ref": "#/components/schemas/TaskTag_cutkof_leaf"
            },
            "type": "array",
            "title": "Task Tags"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "description",
          "owner_org",
          "coop_orgs",
          "coop_members",
          "status_candidates",
          "priority_candidates",
          "assets",
          "batch_jobs",
          "documents",
          "generated_references",
          "items",
          "pdfs",
          "prompts",
          "review_point_definitions",
          "review_sets",
          "tasks",
          "kanban_order",
          "task_tags"
        ],
        "title": "Project"
      },
      "Project_n6f5tk_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "owner_org": {
            "$ref": "#/components/schemas/Organization_xbred3_leaf",
            "title": "Owner Org"
          },
          "coop_orgs": {
            "items": {
              "$ref": "#/components/schemas/Organization_xbred3_leaf"
            },
            "type": "array",
            "title": "Coop Orgs"
          },
          "coop_members": {
            "items": {
              "$ref": "#/components/schemas/User_rlfvwj_leaf"
            },
            "type": "array",
            "title": "Coop Members"
          },
          "status_candidates": {
            "items": {
              "$ref": "#/components/schemas/TaskStatus_kfi3op_leaf"
            },
            "type": "array",
            "title": "Status Candidates"
          },
          "priority_candidates": {
            "items": {
              "$ref": "#/components/schemas/TaskPriority_qapfh7_leaf"
            },
            "type": "array",
            "title": "Priority Candidates"
          },
          "assets": {
            "items": {
              "$ref": "#/components/schemas/Asset_bqbv2z_leaf"
            },
            "type": "array",
            "title": "Assets"
          },
          "batch_jobs": {
            "items": {
              "$ref": "#/components/schemas/BatchProcessJob_tvdggc_leaf"
            },
            "type": "array",
            "title": "Batch Jobs",
            "description": "关联的项目"
          },
          "documents": {
            "items": {
              "$ref": "#/components/schemas/Document_doemlv_leaf"
            },
            "type": "array",
            "title": "Documents"
          },
          "generated_references": {
            "items": {
              "$ref": "#/components/schemas/GeneratedReference_z4fyu6_leaf"
            },
            "type": "array",
            "title": "Generated References"
          },
          "related_ips": {
            "items": {
              "$ref": "#/components/schemas/IP_s4cbsg_leaf"
            },
            "type": "array",
            "title": "Related Ips"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/Item_ops744_leaf"
            },
            "type": "array",
            "title": "Items",
            "description": "Project this item belongs to"
          },
          "pdfs": {
            "items": {
              "$ref": "#/components/schemas/PDF_bjp5ln_leaf"
            },
            "type": "array",
            "title": "Pdfs",
            "description": "Project this PDF belongs to"
          },
          "prompts": {
            "items": {
              "$ref": "#/components/schemas/Prompt_qkmlty_leaf"
            },
            "type": "array",
            "title": "Prompts"
          },
          "review_point_definitions": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinition_4ds2k6_leaf"
            },
            "type": "array",
            "title": "Review Point Definitions"
          },
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/Task_6ea7cv_leaf"
            },
            "type": "array",
            "title": "Tasks"
          },
          "kanban_order": {
            "items": {
              "$ref": "#/components/schemas/TaskKanbanOrder_y2r4ew_leaf"
            },
            "type": "array",
            "title": "Kanban Order"
          },
          "task_tags": {
            "items": {
              "$ref": "#/components/schemas/TaskTag_cutkof_leaf"
            },
            "type": "array",
            "title": "Task Tags"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "description",
          "owner_org",
          "coop_orgs",
          "coop_members",
          "status_candidates",
          "priority_candidates",
          "assets",
          "batch_jobs",
          "documents",
          "generated_references",
          "related_ips",
          "items",
          "pdfs",
          "prompts",
          "review_point_definitions",
          "tasks",
          "kanban_order",
          "task_tags"
        ],
        "title": "Project"
      },
      "Project_qf4dgk_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "owner_org": {
            "$ref": "#/components/schemas/Organization_xbred3_leaf",
            "title": "Owner Org"
          },
          "coop_orgs": {
            "items": {
              "$ref": "#/components/schemas/Organization_xbred3_leaf"
            },
            "type": "array",
            "title": "Coop Orgs"
          },
          "coop_members": {
            "items": {
              "$ref": "#/components/schemas/User_rlfvwj_leaf"
            },
            "type": "array",
            "title": "Coop Members"
          },
          "status_candidates": {
            "items": {
              "$ref": "#/components/schemas/TaskStatus_kfi3op_leaf"
            },
            "type": "array",
            "title": "Status Candidates"
          },
          "priority_candidates": {
            "items": {
              "$ref": "#/components/schemas/TaskPriority_qapfh7_leaf"
            },
            "type": "array",
            "title": "Priority Candidates"
          },
          "assets": {
            "items": {
              "$ref": "#/components/schemas/Asset_bqbv2z_leaf"
            },
            "type": "array",
            "title": "Assets"
          },
          "batch_jobs": {
            "items": {
              "$ref": "#/components/schemas/BatchProcessJob_tvdggc_leaf"
            },
            "type": "array",
            "title": "Batch Jobs",
            "description": "关联的项目"
          },
          "documents": {
            "items": {
              "$ref": "#/components/schemas/Document_doemlv_leaf"
            },
            "type": "array",
            "title": "Documents"
          },
          "generated_references": {
            "items": {
              "$ref": "#/components/schemas/GeneratedReference_z4fyu6_leaf"
            },
            "type": "array",
            "title": "Generated References"
          },
          "related_ips": {
            "items": {
              "$ref": "#/components/schemas/IP_s4cbsg_leaf"
            },
            "type": "array",
            "title": "Related Ips"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/Item_ops744_leaf"
            },
            "type": "array",
            "title": "Items",
            "description": "Project this item belongs to"
          },
          "pdfs": {
            "items": {
              "$ref": "#/components/schemas/PDF_bjp5ln_leaf"
            },
            "type": "array",
            "title": "Pdfs",
            "description": "Project this PDF belongs to"
          },
          "prompts": {
            "items": {
              "$ref": "#/components/schemas/Prompt_qkmlty_leaf"
            },
            "type": "array",
            "title": "Prompts"
          },
          "review_sets": {
            "items": {
              "$ref": "#/components/schemas/ReviewSet_l6cvvj_leaf"
            },
            "type": "array",
            "title": "Review Sets"
          },
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/Task_6ea7cv_leaf"
            },
            "type": "array",
            "title": "Tasks"
          },
          "kanban_order": {
            "items": {
              "$ref": "#/components/schemas/TaskKanbanOrder_y2r4ew_leaf"
            },
            "type": "array",
            "title": "Kanban Order"
          },
          "task_tags": {
            "items": {
              "$ref": "#/components/schemas/TaskTag_cutkof_leaf"
            },
            "type": "array",
            "title": "Task Tags"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "description",
          "owner_org",
          "coop_orgs",
          "coop_members",
          "status_candidates",
          "priority_candidates",
          "assets",
          "batch_jobs",
          "documents",
          "generated_references",
          "related_ips",
          "items",
          "pdfs",
          "prompts",
          "review_sets",
          "tasks",
          "kanban_order",
          "task_tags"
        ],
        "title": "Project"
      },
      "Project_s5dnc2_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "owner_org": {
            "$ref": "#/components/schemas/Organization_xbred3_leaf",
            "title": "Owner Org"
          },
          "coop_orgs": {
            "items": {
              "$ref": "#/components/schemas/Organization_xbred3_leaf"
            },
            "type": "array",
            "title": "Coop Orgs"
          },
          "status_candidates": {
            "items": {
              "$ref": "#/components/schemas/TaskStatus_kfi3op_leaf"
            },
            "type": "array",
            "title": "Status Candidates"
          },
          "priority_candidates": {
            "items": {
              "$ref": "#/components/schemas/TaskPriority_qapfh7_leaf"
            },
            "type": "array",
            "title": "Priority Candidates"
          },
          "assets": {
            "items": {
              "$ref": "#/components/schemas/Asset_bqbv2z_leaf"
            },
            "type": "array",
            "title": "Assets"
          },
          "batch_jobs": {
            "items": {
              "$ref": "#/components/schemas/BatchProcessJob_tvdggc_leaf"
            },
            "type": "array",
            "title": "Batch Jobs",
            "description": "关联的项目"
          },
          "characters": {
            "items": {
              "$ref": "#/components/schemas/Character_rstgbl_leaf"
            },
            "type": "array",
            "title": "Characters"
          },
          "documents": {
            "items": {
              "$ref": "#/components/schemas/Document_doemlv_leaf"
            },
            "type": "array",
            "title": "Documents"
          },
          "generated_references": {
            "items": {
              "$ref": "#/components/schemas/GeneratedReference_z4fyu6_leaf"
            },
            "type": "array",
            "title": "Generated References"
          },
          "related_ips": {
            "items": {
              "$ref": "#/components/schemas/IP_s4cbsg_leaf"
            },
            "type": "array",
            "title": "Related Ips"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/Item_ops744_leaf"
            },
            "type": "array",
            "title": "Items",
            "description": "Project this item belongs to"
          },
          "prompts": {
            "items": {
              "$ref": "#/components/schemas/Prompt_qkmlty_leaf"
            },
            "type": "array",
            "title": "Prompts"
          },
          "review_point_definitions": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinition_4ds2k6_leaf"
            },
            "type": "array",
            "title": "Review Point Definitions"
          },
          "review_sets": {
            "items": {
              "$ref": "#/components/schemas/ReviewSet_l6cvvj_leaf"
            },
            "type": "array",
            "title": "Review Sets"
          },
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/Task_6ea7cv_leaf"
            },
            "type": "array",
            "title": "Tasks"
          },
          "kanban_order": {
            "items": {
              "$ref": "#/components/schemas/TaskKanbanOrder_y2r4ew_leaf"
            },
            "type": "array",
            "title": "Kanban Order"
          },
          "task_tags": {
            "items": {
              "$ref": "#/components/schemas/TaskTag_cutkof_leaf"
            },
            "type": "array",
            "title": "Task Tags"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "description",
          "owner_org",
          "coop_orgs",
          "status_candidates",
          "priority_candidates",
          "assets",
          "batch_jobs",
          "characters",
          "documents",
          "generated_references",
          "related_ips",
          "items",
          "prompts",
          "review_point_definitions",
          "review_sets",
          "tasks",
          "kanban_order",
          "task_tags"
        ],
        "title": "Project"
      },
      "PromoteTempImagesRequest": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id"
          }
        },
        "type": "object",
        "required": ["project_id"],
        "title": "PromoteTempImagesRequest"
      },
      "PromoteTempImagesResponse": {
        "properties": {
          "moved_files": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Moved Files"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors"
          }
        },
        "type": "object",
        "required": ["moved_files", "errors"],
        "title": "PromoteTempImagesResponse"
      },
      "PromotedFinding_pkcm32_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "subtask_id_context": {
            "type": "string",
            "format": "uuid",
            "title": "Subtask Id Context",
            "description": "Stores the UUID of the Subtask for context, not a direct FK to allow Subtask deletion without affecting KB."
          },
          "promotion_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Promotion Timestamp",
            "readOnly": true
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "nullable": true
          },
          "tags": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "nullable": true
          },
          "sharing_scope": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharing Scope",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "subtask_id_context", "promotion_timestamp"],
        "title": "PromotedFinding"
      },
      "PromptRewriteRequest": {
        "properties": {
          "original_prompt": {
            "type": "string",
            "title": "Original Prompt",
            "description": "用户输入的原始prompt"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context",
            "description": "可选的上下文信息，例如项目描述、任务类型等"
          },
          "rpd_type": {
            "type": "string",
            "title": "Rpd Type",
            "description": "RPD类型"
          },
          "target_language": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["japanese", "english", "chinese"]
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Language",
            "description": "目标语言",
            "default": "english"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "description": "图片URL（可选）"
          }
        },
        "type": "object",
        "required": ["original_prompt", "rpd_type"],
        "title": "PromptRewriteRequest",
        "description": "用于prompt转写请求的输入模型"
      },
      "PromptRewriteResponse": {
        "properties": {
          "original_prompt": {
            "type": "string",
            "title": "Original Prompt",
            "description": "用户输入的原始prompt"
          },
          "rewritten_prompt": {
            "type": "string",
            "title": "Rewritten Prompt",
            "description": "AI转写后的完整prompt"
          },
          "rewritten_prompt_jpn": {
            "type": "string",
            "title": "Rewritten Prompt Jpn",
            "description": "AI转写后的完整prompt（日文）"
          },
          "confidence": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Confidence",
            "description": "转写质量的置信度评分"
          }
        },
        "type": "object",
        "required": ["original_prompt", "rewritten_prompt", "rewritten_prompt_jpn", "confidence"],
        "title": "PromptRewriteResponse",
        "description": "Prompt转写响应模型"
      },
      "Prompt_qkmlty_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "description", "content"],
        "title": "Prompt"
      },
      "RPDForReviewSet": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "current_version_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Version Title"
          }
        },
        "type": "object",
        "required": ["id", "key"],
        "title": "RPDForReviewSet"
      },
      "RPDRecommendation": {
        "properties": {
          "rpd_id": {
            "type": "string",
            "format": "uuid",
            "title": "Rpd Id",
            "description": "The ID of the recommended RPD"
          },
          "rpd_title": {
            "type": "string",
            "title": "Rpd Title",
            "description": "The title of the recommended RPD"
          },
          "rpd_key": {
            "type": "string",
            "title": "Rpd Key",
            "description": "The key of the recommended RPD"
          },
          "reason": {
            "type": "string",
            "title": "Reason",
            "description": "Reason for recommendation"
          }
        },
        "type": "object",
        "required": ["rpd_id", "rpd_title", "rpd_key", "reason"],
        "title": "RPDRecommendation",
        "description": "RPD recommendation based on character"
      },
      "RPDStatusUpdate": {
        "properties": {
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          }
        },
        "type": "object",
        "required": ["is_active"],
        "title": "RPDStatusUpdate"
      },
      "Rect": {
        "properties": {
          "width": {
            "type": "number",
            "title": "Width"
          },
          "height": {
            "type": "number",
            "title": "Height"
          },
          "x": {
            "type": "number",
            "title": "X"
          },
          "y": {
            "type": "number",
            "title": "Y"
          }
        },
        "type": "object",
        "required": ["width", "height", "x", "y"],
        "title": "Rect"
      },
      "ReviewPointDefinition": {
        "properties": {
          "key": {
            "type": "string",
            "enum": [
              "general_ng_review",
              "visual_review",
              "settings_review",
              "design_review",
              "text_review",
              "copyright_review"
            ],
            "title": "Key"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinitionVersionInDB"
            },
            "type": "array",
            "title": "Versions"
          },
          "current_version": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReviewPointDefinitionVersionInDB"
              },
              {
                "type": "null"
              }
            ]
          },
          "current_version_num": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Version Num"
          }
        },
        "type": "object",
        "required": ["key", "id", "created_at", "updated_at"],
        "title": "ReviewPointDefinition"
      },
      "ReviewPointDefinitionCreate": {
        "properties": {
          "key": {
            "type": "string",
            "enum": [
              "general_ng_review",
              "visual_review",
              "settings_review",
              "design_review",
              "text_review",
              "copyright_review"
            ],
            "title": "Key"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "user_instruction": {
            "type": "string",
            "title": "User Instruction",
            "description": "User instruction for AI review"
          },
          "description_for_ai": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description For Ai",
            "description": "Optional, will be generated from user_instruction if not provided"
          },
          "ai_description_groups": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Description Groups",
            "description": "Groups of AI descriptions for general_ng_review"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "reference_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Images",
            "description": "List of S3 paths for reference images for the initial version",
            "default": []
          },
          "tag_list": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag List",
            "description": "List of tags for NG review filtering",
            "default": []
          },
          "reference_files": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Files",
            "description": "List of S3 URLs for reference files (e.g., appellation table for text_review)",
            "default": []
          },
          "special_rules": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Rules",
            "description": "Special rules in JSON format: [{'speaker': '角色A', 'target': '角色B', 'alias': '特殊称呼', 'conditions': ['条件1', '条件2']}]",
            "default": []
          },
          "ng_subcategory": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["concrete_shape", "abstract_type"]
              },
              {
                "type": "null"
              }
            ],
            "title": "Ng Subcategory",
            "description": "Subcategory for general_ng_review: 'concrete_shape' (具体形状) or 'abstract_type' (抽象类型)"
          }
        },
        "type": "object",
        "required": ["key", "title", "user_instruction", "project_id"],
        "title": "ReviewPointDefinitionCreate"
      },
      "ReviewPointDefinitionVersionBase": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "user_instruction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Instruction",
            "description": "User instruction for AI review"
          },
          "description_for_ai": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description For Ai",
            "description": "generated prompt for AI review"
          },
          "is_active_version": {
            "type": "boolean",
            "title": "Is Active Version",
            "default": true
          },
          "reference_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Images",
            "description": "List of S3 paths for reference images that provide visual context and guidance for AI reviews",
            "default": []
          },
          "tag_list": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag List",
            "description": "List of tags for NG review filtering",
            "default": []
          },
          "reference_files": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Files",
            "description": "List of S3 URLs for reference files (e.g., appellation table for text_review)",
            "default": []
          },
          "special_rules": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Rules",
            "description": "Special rules in JSON format: [{'speaker': '角色A', 'target': '角色B', 'alias': '特殊称呼', 'conditions': ['条件1', '条件2']}]",
            "default": []
          },
          "ng_subcategory": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["concrete_shape", "abstract_type"]
              },
              {
                "type": "null"
              }
            ],
            "title": "Ng Subcategory",
            "description": "Subcategory for general_ng_review: 'concrete_shape' (具体形状) or 'abstract_type' (抽象类型)"
          },
          "rpd_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rpd Type",
            "description": "RPD classification type (e.g., 'right/wrong tasks', 'classification tasks', etc.)"
          },
          "guidelines": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Guidelines",
            "description": "AI-generated guidelines for the review"
          },
          "constraints": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Constraints",
            "description": "AI-generated constraints for the review"
          },
          "detector": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Detector",
            "description": "AI-generated detector prompt for the review"
          },
          "assessor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assessor",
            "description": "AI-generated assessor prompt for the review"
          },
          "is_ready_for_ai_review": {
            "type": "boolean",
            "title": "Is Ready For Ai Review",
            "description": "Whether this RPD version has been preprocessed and is ready for AI review",
            "default": false
          }
        },
        "type": "object",
        "required": ["title"],
        "title": "ReviewPointDefinitionVersionBase"
      },
      "ReviewPointDefinitionVersionInDB": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "user_instruction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Instruction",
            "description": "User instruction for AI review"
          },
          "description_for_ai": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description For Ai",
            "description": "generated prompt for AI review"
          },
          "is_active_version": {
            "type": "boolean",
            "title": "Is Active Version",
            "default": true
          },
          "reference_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Images",
            "description": "List of S3 paths for reference images that provide visual context and guidance for AI reviews",
            "default": []
          },
          "tag_list": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag List",
            "description": "List of tags for NG review filtering",
            "default": []
          },
          "reference_files": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Files",
            "description": "List of S3 URLs for reference files (e.g., appellation table for text_review)",
            "default": []
          },
          "special_rules": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Rules",
            "description": "Special rules in JSON format: [{'speaker': '角色A', 'target': '角色B', 'alias': '特殊称呼', 'conditions': ['条件1', '条件2']}]",
            "default": []
          },
          "ng_subcategory": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["concrete_shape", "abstract_type"]
              },
              {
                "type": "null"
              }
            ],
            "title": "Ng Subcategory",
            "description": "Subcategory for general_ng_review: 'concrete_shape' (具体形状) or 'abstract_type' (抽象类型)"
          },
          "rpd_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rpd Type",
            "description": "RPD classification type (e.g., 'right/wrong tasks', 'classification tasks', etc.)"
          },
          "guidelines": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Guidelines",
            "description": "AI-generated guidelines for the review"
          },
          "constraints": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Constraints",
            "description": "AI-generated constraints for the review"
          },
          "detector": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Detector",
            "description": "AI-generated detector prompt for the review"
          },
          "assessor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assessor",
            "description": "AI-generated assessor prompt for the review"
          },
          "is_ready_for_ai_review": {
            "type": "boolean",
            "title": "Is Ready For Ai Review",
            "description": "Whether this RPD version has been preprocessed and is ready for AI review",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "review_point_definition_id": {
            "type": "string",
            "format": "uuid",
            "title": "Review Point Definition Id"
          },
          "parent_key": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "general_ng_review",
                  "visual_review",
                  "settings_review",
                  "design_review",
                  "text_review",
                  "copyright_review"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Key"
          },
          "version_number": {
            "type": "integer",
            "title": "Version Number"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          }
        },
        "type": "object",
        "required": ["title", "id", "review_point_definition_id", "version_number", "created_at"],
        "title": "ReviewPointDefinitionVersionInDB"
      },
      "ReviewPointDefinitionVersion_2kcj3z_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "version_number": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Version Number"
          },
          "title": {
            "type": "string",
            "maxLength": 255,
            "title": "Title"
          },
          "user_instruction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Instruction",
            "description": "User instruction for AI review",
            "nullable": true
          },
          "description_for_ai": {
            "type": "string",
            "title": "Description For Ai",
            "description": "generated prompt for AI review"
          },
          "is_active_version": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active Version",
            "default": true
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By",
            "nullable": true
          },
          "reference_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Images",
            "description": "List of S3 paths for reference images that provide visual context and guidance for AI reviews",
            "nullable": true
          },
          "tag_list": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag List",
            "description": "List of tags for NG review filtering",
            "nullable": true
          },
          "reference_files": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Files",
            "description": "List of S3 URLs for reference files (e.g., appellation table for text_review)",
            "nullable": true
          },
          "special_rules": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Rules",
            "description": "Special rules in JSON format: [{'speaker': '角色A', 'target': '角色B', 'alias': '特殊称呼', 'conditions': ['条件1', '条件2']}]",
            "nullable": true
          },
          "ng_subcategory": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Ng Subcategory",
            "description": "Subcategory for general_ng_review: 'concrete_shape' or 'abstract_type'",
            "nullable": true
          },
          "rpd_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Rpd Type",
            "description": "RPD classification type (e.g., 'right/wrong tasks', 'classification tasks', etc.)",
            "nullable": true
          },
          "guidelines": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Guidelines",
            "description": "AI-generated guidelines for the review",
            "nullable": true
          },
          "constraints": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Constraints",
            "description": "AI-generated constraints for the review",
            "nullable": true
          },
          "detector": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Detector",
            "description": "AI-generated detector prompt for the review",
            "nullable": true
          },
          "assessor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assessor",
            "description": "AI-generated assessor prompt for the review",
            "nullable": true
          },
          "is_ready_for_ai_review": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Ready For Ai Review",
            "description": "Whether this RPD version has been preprocessed and is ready for AI review",
            "default": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "version_number", "title", "description_for_ai"],
        "title": "ReviewPointDefinitionVersion"
      },
      "ReviewPointDefinitionVersion_ilg6mo_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "version_number": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Version Number"
          },
          "title": {
            "type": "string",
            "maxLength": 255,
            "title": "Title"
          },
          "user_instruction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Instruction",
            "description": "User instruction for AI review",
            "nullable": true
          },
          "description_for_ai": {
            "type": "string",
            "title": "Description For Ai",
            "description": "generated prompt for AI review"
          },
          "is_active_version": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active Version",
            "default": true
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By",
            "nullable": true
          },
          "reference_images": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Images",
            "description": "List of S3 paths for reference images that provide visual context and guidance for AI reviews",
            "nullable": true
          },
          "tag_list": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag List",
            "description": "List of tags for NG review filtering",
            "nullable": true
          },
          "reference_files": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Files",
            "description": "List of S3 URLs for reference files (e.g., appellation table for text_review)",
            "nullable": true
          },
          "special_rules": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Rules",
            "description": "Special rules in JSON format: [{'speaker': '角色A', 'target': '角色B', 'alias': '特殊称呼', 'conditions': ['条件1', '条件2']}]",
            "nullable": true
          },
          "ng_subcategory": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Ng Subcategory",
            "description": "Subcategory for general_ng_review: 'concrete_shape' or 'abstract_type'",
            "nullable": true
          },
          "rpd_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Rpd Type",
            "description": "RPD classification type (e.g., 'right/wrong tasks', 'classification tasks', etc.)",
            "nullable": true
          },
          "guidelines": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Guidelines",
            "description": "AI-generated guidelines for the review",
            "nullable": true
          },
          "constraints": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Constraints",
            "description": "AI-generated constraints for the review",
            "nullable": true
          },
          "detector": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Detector",
            "description": "AI-generated detector prompt for the review",
            "nullable": true
          },
          "assessor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assessor",
            "description": "AI-generated assessor prompt for the review",
            "nullable": true
          },
          "is_ready_for_ai_review": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Ready For Ai Review",
            "description": "Whether this RPD version has been preprocessed and is ready for AI review",
            "default": true
          },
          "findings_via_version": {
            "items": {
              "$ref": "#/components/schemas/AiReviewFindingEntry_i23odv_leaf"
            },
            "type": "array",
            "title": "Findings Via Version"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "version_number",
          "title",
          "description_for_ai",
          "findings_via_version"
        ],
        "title": "ReviewPointDefinitionVersion"
      },
      "ReviewPointDefinition_2nuqwr_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "key": {
            "type": "string",
            "maxLength": 255,
            "title": "Key",
            "description": "e.g., \"general_ng_review\", \"visual_review\""
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "is_deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Deleted",
            "description": "Flag for soft-deleting the RPD",
            "default": false
          },
          "characters": {
            "items": {
              "$ref": "#/components/schemas/Character_rstgbl_leaf"
            },
            "type": "array",
            "title": "Characters"
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinitionVersion_2kcj3z_leaf"
            },
            "type": "array",
            "title": "Versions"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "key", "characters", "versions"],
        "title": "ReviewPointDefinition"
      },
      "ReviewPointDefinition_42finq_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "key": {
            "type": "string",
            "maxLength": 255,
            "title": "Key",
            "description": "e.g., \"general_ng_review\", \"visual_review\""
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "is_deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Deleted",
            "description": "Flag for soft-deleting the RPD",
            "default": false
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinitionVersion_2kcj3z_leaf"
            },
            "type": "array",
            "title": "Versions"
          },
          "review_sets": {
            "items": {
              "$ref": "#/components/schemas/ReviewSet_l6cvvj_leaf"
            },
            "type": "array",
            "title": "Review Sets"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "key", "versions", "review_sets"],
        "title": "ReviewPointDefinition"
      },
      "ReviewPointDefinition_4ds2k6_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "key": {
            "type": "string",
            "maxLength": 255,
            "title": "Key",
            "description": "e.g., \"general_ng_review\", \"visual_review\""
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "is_deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Deleted",
            "description": "Flag for soft-deleting the RPD",
            "default": false
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "key"],
        "title": "ReviewPointDefinition"
      },
      "ReviewPointDefinition_gfcsr4_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "key": {
            "type": "string",
            "maxLength": 255,
            "title": "Key",
            "description": "e.g., \"general_ng_review\", \"visual_review\""
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "is_deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Deleted",
            "description": "Flag for soft-deleting the RPD",
            "default": false
          },
          "characters": {
            "items": {
              "$ref": "#/components/schemas/Character_hkomuq_leaf"
            },
            "type": "array",
            "title": "Characters"
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinitionVersion_ilg6mo_leaf"
            },
            "type": "array",
            "title": "Versions"
          },
          "review_sets": {
            "items": {
              "$ref": "#/components/schemas/ReviewSet_to7lvp_leaf"
            },
            "type": "array",
            "title": "Review Sets"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "key", "characters", "versions", "review_sets"],
        "title": "ReviewPointDefinition"
      },
      "ReviewPointDefinition_ia7rbq_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "key": {
            "type": "string",
            "maxLength": 255,
            "title": "Key",
            "description": "e.g., \"general_ng_review\", \"visual_review\""
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "is_deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Deleted",
            "description": "Flag for soft-deleting the RPD",
            "default": false
          },
          "project": {
            "$ref": "#/components/schemas/Project_ff7gsz_leaf"
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinitionVersion_2kcj3z_leaf"
            },
            "type": "array",
            "title": "Versions"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "key", "project", "versions"],
        "title": "ReviewPointDefinition"
      },
      "ReviewPointDefinition_ohzkjs_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "key": {
            "type": "string",
            "maxLength": 255,
            "title": "Key",
            "description": "e.g., \"general_ng_review\", \"visual_review\""
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "is_deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Deleted",
            "description": "Flag for soft-deleting the RPD",
            "default": false
          },
          "characters": {
            "items": {
              "$ref": "#/components/schemas/Character_rstgbl_leaf"
            },
            "type": "array",
            "title": "Characters"
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinitionVersion_2kcj3z_leaf"
            },
            "type": "array",
            "title": "Versions"
          },
          "review_sets": {
            "items": {
              "$ref": "#/components/schemas/ReviewSet_l6cvvj_leaf"
            },
            "type": "array",
            "title": "Review Sets"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "key", "characters", "versions", "review_sets"],
        "title": "ReviewPointDefinition"
      },
      "ReviewPointDefinition_r45ff3_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "key": {
            "type": "string",
            "maxLength": 255,
            "title": "Key",
            "description": "e.g., \"general_ng_review\", \"visual_review\""
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "is_deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Deleted",
            "description": "Flag for soft-deleting the RPD",
            "default": false
          },
          "project": {
            "$ref": "#/components/schemas/Project_qf4dgk_leaf"
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinitionVersion_ilg6mo_leaf"
            },
            "type": "array",
            "title": "Versions"
          },
          "review_sets": {
            "items": {
              "$ref": "#/components/schemas/ReviewSet_gdbwqw_leaf"
            },
            "type": "array",
            "title": "Review Sets"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "key", "project", "versions", "review_sets"],
        "title": "ReviewPointDefinition"
      },
      "ReviewSetCharacterAssociationCreate": {
        "properties": {
          "review_set_id": {
            "type": "string",
            "format": "uuid",
            "title": "Review Set Id"
          },
          "character_id": {
            "type": "string",
            "format": "uuid",
            "title": "Character Id"
          }
        },
        "type": "object",
        "required": ["review_set_id", "character_id"],
        "title": "ReviewSetCharacterAssociationCreate"
      },
      "ReviewSetCharacterAssociationOut": {
        "properties": {
          "review_set_id": {
            "type": "string",
            "format": "uuid",
            "title": "Review Set Id"
          },
          "character_id": {
            "type": "string",
            "format": "uuid",
            "title": "Character Id"
          }
        },
        "type": "object",
        "required": ["review_set_id", "character_id"],
        "title": "ReviewSetCharacterAssociationOut"
      },
      "ReviewSetCharacterAssociationWithDetails": {
        "properties": {
          "review_set_id": {
            "type": "string",
            "format": "uuid",
            "title": "Review Set Id"
          },
          "character_id": {
            "type": "string",
            "format": "uuid",
            "title": "Character Id"
          },
          "review_set": {
            "$ref": "#/components/schemas/ReviewSetInDB"
          },
          "character": {
            "$ref": "#/components/schemas/CharacterForReviewSet"
          }
        },
        "type": "object",
        "required": ["review_set_id", "character_id", "review_set", "character"],
        "title": "ReviewSetCharacterAssociationWithDetails"
      },
      "ReviewSetCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "rpd_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Rpd Ids"
          },
          "character_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Character Ids"
          },
          "task_tag_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Task Tag Ids"
          }
        },
        "type": "object",
        "required": ["name", "project_id"],
        "title": "ReviewSetCreate"
      },
      "ReviewSetInDB": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": ["name", "id", "project_id", "created_at", "updated_at"],
        "title": "ReviewSetInDB"
      },
      "ReviewSetOut": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "rpds": {
            "items": {
              "$ref": "#/components/schemas/RPDForReviewSet"
            },
            "type": "array",
            "title": "Rpds"
          },
          "characters": {
            "items": {
              "$ref": "#/components/schemas/CharacterForReviewSet"
            },
            "type": "array",
            "title": "Characters"
          },
          "task_tags": {
            "items": {
              "$ref": "#/components/schemas/TaskTagOut"
            },
            "type": "array",
            "title": "Task Tags"
          }
        },
        "type": "object",
        "required": ["name", "id", "project_id", "created_at", "updated_at"],
        "title": "ReviewSetOut"
      },
      "ReviewSetRecommendation": {
        "properties": {
          "review_set_id": {
            "type": "string",
            "format": "uuid",
            "title": "Review Set Id",
            "description": "The ID of the recommended Review Set"
          },
          "review_set_name": {
            "type": "string",
            "title": "Review Set Name",
            "description": "The name of the recommended Review Set"
          },
          "score": {
            "type": "number",
            "maximum": 10,
            "minimum": 0,
            "title": "Score",
            "description": "Recommendation score"
          },
          "tag_matches": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tag Matches",
            "description": "Matched tag names",
            "default": []
          },
          "character_matches": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Character Matches",
            "description": "Matched character names",
            "default": []
          },
          "tag_score": {
            "type": "number",
            "maximum": 6,
            "minimum": 0,
            "title": "Tag Score",
            "description": "Score from tag matching"
          },
          "character_score": {
            "type": "number",
            "maximum": 4,
            "minimum": 0,
            "title": "Character Score",
            "description": "Score from character matching"
          }
        },
        "type": "object",
        "required": ["review_set_id", "review_set_name", "score", "tag_score", "character_score"],
        "title": "ReviewSetRecommendation",
        "description": "Review Set recommendation based on character and tags"
      },
      "ReviewSetUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "rpd_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rpd Ids"
          },
          "character_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Ids"
          },
          "task_tag_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Task Tag Ids"
          }
        },
        "type": "object",
        "title": "ReviewSetUpdate"
      },
      "ReviewSet_4n4zx5_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "rpds": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinition_4ds2k6_leaf"
            },
            "type": "array",
            "title": "Rpds"
          },
          "characters": {
            "items": {
              "$ref": "#/components/schemas/Character_rstgbl_leaf"
            },
            "type": "array",
            "title": "Characters"
          },
          "task_tags": {
            "items": {
              "$ref": "#/components/schemas/TaskTag_cutkof_leaf"
            },
            "type": "array",
            "title": "Task Tags"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "rpds", "characters", "task_tags"],
        "title": "ReviewSet"
      },
      "ReviewSet_6gyanx_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "project": {
            "$ref": "#/components/schemas/Project_n6f5tk_leaf"
          },
          "rpds": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinition_ia7rbq_leaf"
            },
            "type": "array",
            "title": "Rpds"
          },
          "task_tags": {
            "items": {
              "$ref": "#/components/schemas/TaskTag_vwyd6b_leaf"
            },
            "type": "array",
            "title": "Task Tags"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "project", "rpds", "task_tags"],
        "title": "ReviewSet"
      },
      "ReviewSet_ag6udm_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "rpds": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinition_4ds2k6_leaf"
            },
            "type": "array",
            "title": "Rpds"
          },
          "characters": {
            "items": {
              "$ref": "#/components/schemas/Character_rstgbl_leaf"
            },
            "type": "array",
            "title": "Characters"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "rpds", "characters"],
        "title": "ReviewSet"
      },
      "ReviewSet_gdbwqw_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "project": {
            "$ref": "#/components/schemas/Project_ff7gsz_leaf"
          },
          "task_tags": {
            "items": {
              "$ref": "#/components/schemas/TaskTag_cutkof_leaf"
            },
            "type": "array",
            "title": "Task Tags"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "project", "task_tags"],
        "title": "ReviewSet"
      },
      "ReviewSet_kocyqy_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "rpds": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinition_4ds2k6_leaf"
            },
            "type": "array",
            "title": "Rpds"
          },
          "task_tags": {
            "items": {
              "$ref": "#/components/schemas/TaskTag_cutkof_leaf"
            },
            "type": "array",
            "title": "Task Tags"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "rpds", "task_tags"],
        "title": "ReviewSet"
      },
      "ReviewSet_l6cvvj_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name"],
        "title": "ReviewSet"
      },
      "ReviewSet_to7lvp_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "characters": {
            "items": {
              "$ref": "#/components/schemas/Character_rstgbl_leaf"
            },
            "type": "array",
            "title": "Characters"
          },
          "task_tags": {
            "items": {
              "$ref": "#/components/schemas/TaskTag_cutkof_leaf"
            },
            "type": "array",
            "title": "Task Tags"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "characters", "task_tags"],
        "title": "ReviewSet"
      },
      "ReviewSet_uavksy_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "project": {
            "$ref": "#/components/schemas/Project_ff7gsz_leaf"
          },
          "rpds": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinition_4ds2k6_leaf"
            },
            "type": "array",
            "title": "Rpds"
          },
          "characters": {
            "items": {
              "$ref": "#/components/schemas/Character_rstgbl_leaf"
            },
            "type": "array",
            "title": "Characters"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "project", "rpds", "characters"],
        "title": "ReviewSet"
      },
      "ReviewSet_xlj7hq_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "rpds": {
            "items": {
              "$ref": "#/components/schemas/ReviewPointDefinition_2nuqwr_leaf"
            },
            "type": "array",
            "title": "Rpds"
          },
          "characters": {
            "items": {
              "$ref": "#/components/schemas/Character_5uffyo_leaf"
            },
            "type": "array",
            "title": "Characters"
          },
          "task_tags": {
            "items": {
              "$ref": "#/components/schemas/TaskTag_4oktvr_leaf"
            },
            "type": "array",
            "title": "Task Tags"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "rpds", "characters", "task_tags"],
        "title": "ReviewSet"
      },
      "SceneFrameResponse": {
        "properties": {
          "first_frame": {
            "type": "string",
            "title": "First Frame",
            "description": "第一帧的Base64编码图片数据"
          },
          "middle_frame": {
            "type": "string",
            "title": "Middle Frame",
            "description": "中间帧的Base64编码图片数据"
          },
          "last_frame": {
            "type": "string",
            "title": "Last Frame",
            "description": "最后帧的Base64编码图片数据"
          },
          "scene_number": {
            "type": "integer",
            "title": "Scene Number",
            "description": "场景编号"
          }
        },
        "type": "object",
        "required": ["first_frame", "middle_frame", "last_frame", "scene_number"],
        "title": "SceneFrameResponse",
        "description": "场景关键帧响应模型"
      },
      "SceneFramesWithInfoResponse": {
        "properties": {
          "frames": {
            "$ref": "#/components/schemas/SceneFrameResponse"
          },
          "scene_info": {
            "$ref": "#/components/schemas/SceneInfo"
          }
        },
        "type": "object",
        "required": ["frames", "scene_info"],
        "title": "SceneFramesWithInfoResponse",
        "description": "带场景信息的帧响应模型"
      },
      "SceneInfo": {
        "properties": {
          "scene_number": {
            "type": "integer",
            "title": "Scene Number"
          },
          "start_time": {
            "type": "number",
            "title": "Start Time"
          },
          "end_time": {
            "type": "number",
            "title": "End Time"
          },
          "duration": {
            "type": "number",
            "title": "Duration"
          },
          "start_frame": {
            "type": "integer",
            "title": "Start Frame"
          },
          "end_frame": {
            "type": "integer",
            "title": "End Frame"
          },
          "frame_count": {
            "type": "integer",
            "title": "Frame Count"
          }
        },
        "type": "object",
        "required": ["scene_number", "start_time", "end_time", "duration", "start_frame", "end_frame", "frame_count"],
        "title": "SceneInfo",
        "description": "场景信息模型"
      },
      "StatusHistoryEntry": {
        "properties": {
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          },
          "updated_by": {
            "$ref": "#/components/schemas/SubtaskStatusUser"
          },
          "status_from": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubtaskStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "status_to": {
            "$ref": "#/components/schemas/SubtaskStatus"
          }
        },
        "type": "object",
        "required": ["updated_at", "updated_by", "status_to"],
        "title": "StatusHistoryEntry"
      },
      "SubtaskAnnotation": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "type": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["annotation", "comment", "ai-annotation", "ai-comment"]
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "version": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "timestamp": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp"
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author"
          },
          "to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "To"
          },
          "solved": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Solved"
          },
          "attachment_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachment Image Url"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "rect": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Rect"
              },
              {
                "type": "null"
              }
            ]
          },
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color"
          },
          "tool": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["cursor", "rect", "circle", "arrow", "text", "pen"]
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool"
          },
          "start_at": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start At"
          },
          "end_at": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "End At"
          },
          "drawing_data": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Drawing Data"
          }
        },
        "type": "object",
        "required": ["id", "text"],
        "title": "SubtaskAnnotation"
      },
      "SubtaskAnnotationUpdate": {
        "properties": {
          "text": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5000,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Text",
            "description": "注释内容"
          },
          "rect": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Rect"
              },
              {
                "type": "null"
              }
            ],
            "description": "注释位置和大小"
          }
        },
        "type": "object",
        "title": "SubtaskAnnotationUpdate",
        "description": "用于更新注释的输入模型",
        "example": {
          "rect": {
            "height": 150,
            "width": 200,
            "x": 100,
            "y": 50
          },
          "text": "修正后的评论内容"
        }
      },
      "SubtaskCharactersUpdate": {
        "properties": {
          "character_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Character Ids",
            "description": "Character UUIDs to associate with this subtask"
          }
        },
        "type": "object",
        "required": ["character_ids"],
        "title": "SubtaskCharactersUpdate",
        "description": "用于更新子任务角色关联的输入模型",
        "example": {
          "character_ids": ["12345678-1234-1234-1234-123456789abc", "87654321-4321-4321-4321-cba987654321"]
        }
      },
      "SubtaskContent": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "s3_path": {
            "type": "string",
            "title": "S3 Path"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "task_type": {
            "$ref": "#/components/schemas/SubtaskType"
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "slide_page_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slide Page Number"
          },
          "compressed_s3_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Compressed S3 Path"
          }
        },
        "type": "object",
        "required": ["title", "s3_path", "description", "task_type"],
        "title": "SubtaskContent"
      },
      "SubtaskCopyPayload": {
        "properties": {
          "target_task_id": {
            "type": "string",
            "title": "Target Task Id"
          }
        },
        "type": "object",
        "required": ["target_task_id"],
        "title": "SubtaskCopyPayload"
      },
      "SubtaskDetail": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "oid": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Oid"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "task_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubtaskType",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Task Type",
            "description": "PICTURE: picture\u003Cbr/\u003EVIDEO: video\u003Cbr/\u003ETEXT: text\u003Cbr/\u003EAUDIO: audio\u003Cbr/\u003EWORD: word\u003Cbr/\u003EEXCEL: excel",
            "default": "picture"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "slide_page_number": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Slide Page Number",
            "nullable": true
          },
          "content": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubtaskContent"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content",
            "nullable": true
          },
          "history": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SubtaskContent"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "History",
            "nullable": true
          },
          "annotations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SubtaskAnnotation"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annotations",
            "nullable": true
          },
          "status_history": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/StatusHistoryEntry"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status History",
            "nullable": true
          },
          "character_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Ids",
            "description": "A list of character UUIDs associated with this subtask.",
            "nullable": true
          },
          "user_selected_character_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Selected Character Ids",
            "description": "A list of character UUIDs manually selected by user. Takes priority over AI predictions.",
            "nullable": true
          },
          "task": {
            "$ref": "#/components/schemas/Task_3vsong_leaf"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubtaskStatus",
                "maxLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "PENDING: pending\u003Cbr/\u003EDENIED: denied\u003Cbr/\u003EACCEPTED: accepted",
            "default": "pending"
          },
          "ai_detection": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Detection",
            "description": "AI detection result",
            "nullable": true
          },
          "ai_classification_status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIClassificationStatus",
                "maxLength": 12
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Classification Status",
            "description": "Status of AI classification for the subtask",
            "default": "unclassified"
          },
          "ai_reviews": {
            "items": {
              "$ref": "#/components/schemas/AiReview_zid4jh_leaf"
            },
            "type": "array",
            "title": "Ai Reviews"
          },
          "version": {
            "type": "integer",
            "title": "Version",
            "description": "",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "oid", "name", "task", "ai_reviews", "version"],
        "title": "SubtaskDetail"
      },
      "SubtaskOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "oid": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Oid"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "task_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubtaskType",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Task Type",
            "description": "PICTURE: picture\u003Cbr/\u003EVIDEO: video\u003Cbr/\u003ETEXT: text\u003Cbr/\u003EAUDIO: audio\u003Cbr/\u003EWORD: word\u003Cbr/\u003EEXCEL: excel",
            "default": "picture"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "slide_page_number": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Slide Page Number",
            "nullable": true
          },
          "content": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubtaskContent"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content",
            "nullable": true
          },
          "annotations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SubtaskAnnotation"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annotations",
            "nullable": true
          },
          "status_history": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/StatusHistoryEntry"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status History",
            "nullable": true
          },
          "character_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Ids",
            "description": "A list of character UUIDs associated with this subtask.",
            "nullable": true
          },
          "user_selected_character_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Selected Character Ids",
            "description": "A list of character UUIDs manually selected by user. Takes priority over AI predictions.",
            "nullable": true
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubtaskStatus",
                "maxLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "PENDING: pending\u003Cbr/\u003EDENIED: denied\u003Cbr/\u003EACCEPTED: accepted",
            "default": "pending"
          },
          "ai_detection": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Detection",
            "description": "AI detection result",
            "nullable": true
          },
          "ai_classification_status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIClassificationStatus",
                "maxLength": 12
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Classification Status",
            "description": "Status of AI classification for the subtask",
            "default": "unclassified"
          },
          "task_id": {
            "type": "string",
            "format": "uuid",
            "title": "Task Id"
          },
          "version": {
            "type": "integer",
            "title": "Version",
            "description": "",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "oid", "name", "task_id", "version"],
        "title": "SubtaskOut"
      },
      "SubtaskStatus": {
        "type": "string",
        "enum": ["pending", "denied", "accepted"],
        "title": "SubtaskStatus"
      },
      "SubtaskStatusUser": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "user_name": {
            "type": "string",
            "title": "User Name"
          }
        },
        "type": "object",
        "required": ["user_id", "user_name"],
        "title": "SubtaskStatusUser"
      },
      "SubtaskType": {
        "type": "string",
        "enum": ["picture", "video", "text", "audio", "word", "excel"],
        "title": "SubtaskType"
      },
      "SubtaskUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "SubtaskUpdate",
        "description": "用于更新子任务基本信息的输入模型"
      },
      "Subtask_azpicb_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "oid": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Oid"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "task_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubtaskType",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Task Type",
            "description": "PICTURE: picture\u003Cbr/\u003EVIDEO: video\u003Cbr/\u003ETEXT: text\u003Cbr/\u003EAUDIO: audio\u003Cbr/\u003EWORD: word\u003Cbr/\u003EEXCEL: excel",
            "default": "picture"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "nullable": true
          },
          "slide_page_number": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Slide Page Number",
            "nullable": true
          },
          "content": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubtaskContent"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content",
            "nullable": true
          },
          "history": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SubtaskContent"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "History",
            "nullable": true
          },
          "annotations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SubtaskAnnotation"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annotations",
            "nullable": true
          },
          "status_history": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/StatusHistoryEntry"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status History",
            "nullable": true
          },
          "character_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Ids",
            "description": "A list of character UUIDs associated with this subtask.",
            "nullable": true
          },
          "user_selected_character_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Selected Character Ids",
            "description": "A list of character UUIDs manually selected by user. Takes priority over AI predictions.",
            "nullable": true
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubtaskStatus",
                "maxLength": 8
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "PENDING: pending\u003Cbr/\u003EDENIED: denied\u003Cbr/\u003EACCEPTED: accepted",
            "default": "pending"
          },
          "ai_detection": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Detection",
            "description": "AI detection result",
            "nullable": true
          },
          "ai_classification_status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AIClassificationStatus",
                "maxLength": 12
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Classification Status",
            "description": "Status of AI classification for the subtask",
            "default": "unclassified"
          },
          "version": {
            "type": "integer",
            "title": "Version",
            "description": "",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "oid", "name", "version"],
        "title": "Subtask"
      },
      "TaskIn": {
        "properties": {
          "tid": {
            "type": "string",
            "maxLength": 255,
            "title": "Tid"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "assignee_id": {
            "type": "string",
            "format": "uuid",
            "title": "Assignee Id"
          },
          "priority_id": {
            "type": "string",
            "format": "uuid",
            "title": "Priority Id"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "status_id": {
            "type": "string",
            "format": "uuid",
            "title": "Status Id"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["tid", "name", "description", "assignee_id", "priority_id", "project_id", "status_id"],
        "title": "TaskIn"
      },
      "TaskKanbanOrderIn": {
        "properties": {
          "task_order": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Task Order",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "TaskKanbanOrderIn"
      },
      "TaskKanbanOrderOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "task_order": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Task Order",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "status_id": {
            "type": "string",
            "format": "uuid",
            "title": "Status Id"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "project_id", "status_id"],
        "title": "TaskKanbanOrderOut"
      },
      "TaskKanbanOrder_6rc2r6_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus_kfi3op_leaf",
            "title": "Status"
          },
          "task_order": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Task Order",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "status"],
        "title": "TaskKanbanOrder"
      },
      "TaskKanbanOrder_y2r4ew_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "task_order": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Task Order",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at"],
        "title": "TaskKanbanOrder"
      },
      "TaskNavigationItem": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "tid": {
            "type": "string",
            "title": "Tid"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["id", "name", "tid", "description"],
        "title": "TaskNavigationItem",
        "description": "任务导航专用的轻量级数据模型项目"
      },
      "TaskNavigationResponse": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/TaskNavigationItem"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": ["total", "items"],
        "title": "TaskNavigationResponse",
        "description": "任务导航专用的轻量级数据模型"
      },
      "TaskOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "tid": {
            "type": "string",
            "maxLength": 255,
            "title": "Tid"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "S3 Path"
          },
          "is_deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Deleted",
            "description": "Flag for soft-deleting the task",
            "default": false
          },
          "assignee": {
            "$ref": "#/components/schemas/User_g3y7nb_leaf",
            "title": "Assignee"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date",
            "description": "Task due date",
            "nullable": true
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TaskTag_bsew2f_leaf"
            },
            "type": "array",
            "title": "Tags"
          },
          "illustration_doc": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IllustrationDoc_fc6mi4_leaf"
              },
              {
                "type": "null"
              }
            ],
            "title": "Illustration Doc",
            "nullable": true
          },
          "priority_id": {
            "type": "string",
            "format": "uuid",
            "title": "Priority Id"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "status_id": {
            "type": "string",
            "format": "uuid",
            "title": "Status Id"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "tid",
          "name",
          "description",
          "s3_path",
          "assignee",
          "tags",
          "illustration_doc",
          "priority_id",
          "project_id",
          "status_id"
        ],
        "title": "TaskOut"
      },
      "TaskPriorityOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "oid": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Oid"
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "owner_org_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Org Id"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "oid", "name", "owner_org_id"],
        "title": "TaskPriorityOut"
      },
      "TaskPriority_iu25nj_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "oid": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Oid"
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "owner_org": {
            "$ref": "#/components/schemas/Organization_xbred3_leaf",
            "title": "Owner Org"
          },
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/Task_6ea7cv_leaf"
            },
            "type": "array",
            "title": "Tasks"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "oid", "name", "owner_org", "tasks"],
        "title": "TaskPriority"
      },
      "TaskPriority_qapfh7_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "oid": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Oid"
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "oid", "name"],
        "title": "TaskPriority"
      },
      "TaskReviewSetRecommendationsResponse": {
        "properties": {
          "task_id": {
            "type": "string",
            "format": "uuid",
            "title": "Task Id",
            "description": "The ID of the task"
          },
          "task_name": {
            "type": "string",
            "title": "Task Name",
            "description": "The name of the task"
          },
          "recommendations": {
            "items": {
              "$ref": "#/components/schemas/ReviewSetRecommendation"
            },
            "type": "array",
            "title": "Recommendations",
            "description": "List of recommended Review Sets"
          },
          "total_recommendations": {
            "type": "integer",
            "title": "Total Recommendations",
            "description": "Total number of recommendations"
          }
        },
        "type": "object",
        "required": ["task_id", "task_name", "recommendations", "total_recommendations"],
        "title": "TaskReviewSetRecommendationsResponse",
        "description": "Response body for task-based Review Set recommendations"
      },
      "TaskSimpleOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "TaskSimpleOut"
      },
      "TaskStatusOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "oid": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Oid"
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "owner_org_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Org Id"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "oid", "name", "owner_org_id"],
        "title": "TaskStatusOut"
      },
      "TaskStatus_bsm5s6_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "oid": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Oid"
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "owner_org": {
            "$ref": "#/components/schemas/Organization_xbred3_leaf",
            "title": "Owner Org"
          },
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/Task_6ea7cv_leaf"
            },
            "type": "array",
            "title": "Tasks"
          },
          "kanban_order": {
            "items": {
              "$ref": "#/components/schemas/TaskKanbanOrder_y2r4ew_leaf"
            },
            "type": "array",
            "title": "Kanban Order"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "oid", "name", "owner_org", "tasks", "kanban_order"],
        "title": "TaskStatus"
      },
      "TaskStatus_kfi3op_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "oid": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Oid"
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "oid", "name"],
        "title": "TaskStatus"
      },
      "TaskTagCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          }
        },
        "type": "object",
        "required": ["name", "project_id"],
        "title": "TaskTagCreate"
      },
      "TaskTagOut": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": ["name", "id", "project_id", "created_at", "updated_at"],
        "title": "TaskTagOut"
      },
      "TaskTagUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "TaskTagUpdate"
      },
      "TaskTag_4oktvr_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/Task_6ea7cv_leaf"
            },
            "type": "array",
            "title": "Tasks"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "tasks"],
        "title": "TaskTag"
      },
      "TaskTag_bsew2f_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "project": {
            "$ref": "#/components/schemas/Project_feg3u3_leaf"
          },
          "review_sets": {
            "items": {
              "$ref": "#/components/schemas/ReviewSet_uavksy_leaf"
            },
            "type": "array",
            "title": "Review Sets"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "project", "review_sets"],
        "title": "TaskTag"
      },
      "TaskTag_cutkof_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name"],
        "title": "TaskTag"
      },
      "TaskTag_prgcp2_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "review_sets": {
            "items": {
              "$ref": "#/components/schemas/ReviewSet_l6cvvj_leaf"
            },
            "type": "array",
            "title": "Review Sets"
          },
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/Task_6ea7cv_leaf"
            },
            "type": "array",
            "title": "Tasks"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "review_sets", "tasks"],
        "title": "TaskTag"
      },
      "TaskTag_rpbcgt_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "review_sets": {
            "items": {
              "$ref": "#/components/schemas/ReviewSet_ag6udm_leaf"
            },
            "type": "array",
            "title": "Review Sets"
          },
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/Task_e2du3r_leaf"
            },
            "type": "array",
            "title": "Tasks"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "review_sets", "tasks"],
        "title": "TaskTag"
      },
      "TaskTag_vwyd6b_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "project": {
            "$ref": "#/components/schemas/Project_ff7gsz_leaf"
          },
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/Task_6ea7cv_leaf"
            },
            "type": "array",
            "title": "Tasks"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "project", "tasks"],
        "title": "TaskTag"
      },
      "TaskTag_wgshrw_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "project": {
            "$ref": "#/components/schemas/Project_ff7gsz_leaf"
          },
          "review_sets": {
            "items": {
              "$ref": "#/components/schemas/ReviewSet_l6cvvj_leaf"
            },
            "type": "array",
            "title": "Review Sets"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "name", "project", "review_sets"],
        "title": "TaskTag"
      },
      "TaskThumbnail": {
        "properties": {
          "subtask_id": {
            "type": "string",
            "format": "uuid",
            "title": "Subtask Id"
          },
          "subtask_name": {
            "type": "string",
            "title": "Subtask Name"
          },
          "original_s3_path": {
            "type": "string",
            "title": "Original S3 Path"
          },
          "compressed_s3_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Compressed S3 Path"
          }
        },
        "type": "object",
        "required": ["subtask_id", "subtask_name", "original_s3_path"],
        "title": "TaskThumbnail",
        "description": "单个缩略图信息"
      },
      "TaskThumbnailsResponse": {
        "properties": {
          "task_id": {
            "type": "string",
            "format": "uuid",
            "title": "Task Id"
          },
          "thumbnails": {
            "items": {
              "$ref": "#/components/schemas/TaskThumbnail"
            },
            "type": "array",
            "title": "Thumbnails",
            "description": "任务的前几个图片子任务缩略图（默认前3个）"
          }
        },
        "type": "object",
        "required": ["task_id"],
        "title": "TaskThumbnailsResponse",
        "description": "任务缩略图响应模型"
      },
      "TaskUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "priority_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          }
        },
        "type": "object",
        "title": "TaskUpdate",
        "description": "用于更新任务的输入模型"
      },
      "Task_3vsong_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "tid": {
            "type": "string",
            "maxLength": 255,
            "title": "Tid"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "S3 Path"
          },
          "is_deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Deleted",
            "description": "Flag for soft-deleting the task",
            "default": false
          },
          "assignee": {
            "$ref": "#/components/schemas/User_5qdwey_leaf",
            "title": "Assignee"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date",
            "description": "Task due date",
            "nullable": true
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TaskTag_wgshrw_leaf"
            },
            "type": "array",
            "title": "Tags"
          },
          "illustration_doc": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IllustrationDoc_fc6mi4_leaf"
              },
              {
                "type": "null"
              }
            ],
            "title": "Illustration Doc",
            "nullable": true
          },
          "priority_id": {
            "type": "string",
            "format": "uuid",
            "title": "Priority Id"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "status_id": {
            "type": "string",
            "format": "uuid",
            "title": "Status Id"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "tid",
          "name",
          "description",
          "s3_path",
          "assignee",
          "tags",
          "illustration_doc",
          "priority_id",
          "project_id",
          "status_id"
        ],
        "title": "Task"
      },
      "Task_6ea7cv_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "tid": {
            "type": "string",
            "maxLength": 255,
            "title": "Tid"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "S3 Path"
          },
          "is_deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Deleted",
            "description": "Flag for soft-deleting the task",
            "default": false
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date",
            "description": "Task due date",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "tid", "name", "description", "s3_path"],
        "title": "Task"
      },
      "Task_e2du3r_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "tid": {
            "type": "string",
            "maxLength": 255,
            "title": "Tid"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "S3 Path"
          },
          "is_deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Deleted",
            "description": "Flag for soft-deleting the task",
            "default": false
          },
          "assignee": {
            "$ref": "#/components/schemas/User_rlfvwj_leaf",
            "title": "Assignee"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus_kfi3op_leaf",
            "title": "Status"
          },
          "priority": {
            "$ref": "#/components/schemas/TaskPriority_qapfh7_leaf",
            "title": "Priority"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date",
            "description": "Task due date",
            "nullable": true
          },
          "illustration_doc": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IllustrationDoc_mv32nl_leaf"
              },
              {
                "type": "null"
              }
            ],
            "title": "Illustration Doc",
            "nullable": true
          },
          "subtasks": {
            "items": {
              "$ref": "#/components/schemas/Subtask_azpicb_leaf"
            },
            "type": "array",
            "title": "Subtasks"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "tid",
          "name",
          "description",
          "s3_path",
          "assignee",
          "status",
          "priority",
          "illustration_doc",
          "subtasks"
        ],
        "title": "Task"
      },
      "Task_xgjixn_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "tid": {
            "type": "string",
            "maxLength": 255,
            "title": "Tid"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "s3_path": {
            "type": "string",
            "maxLength": 1024,
            "title": "S3 Path"
          },
          "is_deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Deleted",
            "description": "Flag for soft-deleting the task",
            "default": false
          },
          "assignee": {
            "$ref": "#/components/schemas/User_rlfvwj_leaf",
            "title": "Assignee"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus_kfi3op_leaf",
            "title": "Status"
          },
          "priority": {
            "$ref": "#/components/schemas/TaskPriority_qapfh7_leaf",
            "title": "Priority"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date",
            "description": "Task due date",
            "nullable": true
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TaskTag_cutkof_leaf"
            },
            "type": "array",
            "title": "Tags"
          },
          "illustration_doc": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IllustrationDoc_mv32nl_leaf"
              },
              {
                "type": "null"
              }
            ],
            "title": "Illustration Doc",
            "nullable": true
          },
          "subtasks": {
            "items": {
              "$ref": "#/components/schemas/Subtask_azpicb_leaf"
            },
            "type": "array",
            "title": "Subtasks"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "tid",
          "name",
          "description",
          "s3_path",
          "assignee",
          "status",
          "priority",
          "tags",
          "illustration_doc",
          "subtasks"
        ],
        "title": "Task"
      },
      "TextRPDTestRequest": {
        "properties": {
          "dialogue_text": {
            "type": "string",
            "title": "Dialogue Text",
            "description": "要测试的对话文本"
          },
          "rpd_title": {
            "type": "string",
            "title": "Rpd Title",
            "description": "RPD标题"
          },
          "appellation_file_s3_url": {
            "type": "string",
            "title": "Appellation File S3 Url",
            "description": "称呼表文件的S3 URL"
          },
          "special_rules": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Rules",
            "description": "特殊规则列表",
            "default": []
          },
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "项目ID"
          }
        },
        "type": "object",
        "required": ["dialogue_text", "rpd_title", "appellation_file_s3_url", "project_id"],
        "title": "TextRPDTestRequest",
        "description": "文本对话RPD测试的请求模型"
      },
      "TextRPDTestResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "analysis": {
            "type": "string",
            "title": "Analysis",
            "default": ""
          },
          "processing_time_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Time Seconds"
          },
          "rpd_title": {
            "type": "string",
            "title": "Rpd Title",
            "default": ""
          },
          "detected_speaker": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Detected Speaker"
          },
          "detected_targets": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Detected Targets",
            "default": []
          }
        },
        "type": "object",
        "required": ["success", "message"],
        "title": "TextRPDTestResponse",
        "description": "文本对话RPD测试的响应模型"
      },
      "UserAdminListOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "maxLength": 255,
            "title": "Email"
          },
          "display_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Display Name"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "description": "USER: user\u003Cbr/\u003EADMIN: admin",
            "default": "user"
          },
          "joined_orgs": {
            "items": {
              "$ref": "#/components/schemas/Organization_kywcwu_leaf"
            },
            "type": "array",
            "title": "Joined Orgs"
          },
          "avatar_url": {
            "type": "string",
            "title": "Avatar Url",
            "description": "",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "email", "display_name", "joined_orgs", "avatar_url"],
        "title": "UserAdminListOut"
      },
      "UserIn": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 255,
            "title": "Email"
          },
          "display_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Display Name"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["email", "display_name"],
        "title": "UserIn"
      },
      "UserOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "maxLength": 255,
            "title": "Email"
          },
          "display_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Display Name"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "description": "USER: user\u003Cbr/\u003EADMIN: admin",
            "default": "user"
          },
          "uploaded_pdfs": {
            "items": {
              "$ref": "#/components/schemas/PDF_d3hw5m_leaf"
            },
            "type": "array",
            "title": "Uploaded Pdfs",
            "description": "User who uploaded this PDF"
          },
          "avatar_url": {
            "type": "string",
            "title": "Avatar Url",
            "description": "",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "email", "display_name", "uploaded_pdfs", "avatar_url"],
        "title": "UserOut"
      },
      "UserPreferencesResponse": {
        "properties": {
          "settings": {
            "type": "object",
            "title": "Settings",
            "description": "User settings and configuration preferences"
          }
        },
        "type": "object",
        "title": "UserPreferencesResponse",
        "description": "Response schema for user preferences and settings"
      },
      "UserPreferences_rre2da_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "settings": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settings",
            "description": "User settings and configuration preferences"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "settings"],
        "title": "UserPreferences",
        "description": "User preferences and settings (liked images moved to dedicated LikedImage model)"
      },
      "UserRole": {
        "type": "string",
        "enum": ["user", "admin"],
        "title": "UserRole"
      },
      "User_5qdwey_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "maxLength": 255,
            "title": "Email"
          },
          "display_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Display Name"
          },
          "uploaded_pdfs": {
            "items": {
              "$ref": "#/components/schemas/PDF_bjp5ln_leaf"
            },
            "type": "array",
            "title": "Uploaded Pdfs",
            "description": "User who uploaded this PDF"
          },
          "avatar_url": {
            "type": "string",
            "title": "Avatar Url",
            "description": "",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "email", "display_name", "uploaded_pdfs", "avatar_url"],
        "title": "User"
      },
      "User_dzz5ed_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "maxLength": 255,
            "title": "Email"
          },
          "display_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Display Name"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "description": "USER: user\u003Cbr/\u003EADMIN: admin",
            "default": "user"
          },
          "initiated_ai_reviews": {
            "items": {
              "$ref": "#/components/schemas/AiReview_d7n2fs_leaf"
            },
            "type": "array",
            "title": "Initiated Ai Reviews"
          },
          "modified_ai_reviews": {
            "items": {
              "$ref": "#/components/schemas/AiReview_d7n2fs_leaf"
            },
            "type": "array",
            "title": "Modified Ai Reviews"
          },
          "uploaded_assets": {
            "items": {
              "$ref": "#/components/schemas/Asset_bqbv2z_leaf"
            },
            "type": "array",
            "title": "Uploaded Assets"
          },
          "created_batch_jobs": {
            "items": {
              "$ref": "#/components/schemas/BatchProcessJob_tvdggc_leaf"
            },
            "type": "array",
            "title": "Created Batch Jobs",
            "description": "创建该批处理任务的用户"
          },
          "uploaded_items": {
            "items": {
              "$ref": "#/components/schemas/Item_ops744_leaf"
            },
            "type": "array",
            "title": "Uploaded Items",
            "description": "User who uploaded this item"
          },
          "liked_images_new": {
            "items": {
              "$ref": "#/components/schemas/LikedImage_xn5xrn_leaf"
            },
            "type": "array",
            "title": "Liked Images New",
            "description": "User who liked this image"
          },
          "managed_orgs": {
            "items": {
              "$ref": "#/components/schemas/Organization_xbred3_leaf"
            },
            "type": "array",
            "title": "Managed Orgs"
          },
          "joined_orgs": {
            "items": {
              "$ref": "#/components/schemas/Organization_xbred3_leaf"
            },
            "type": "array",
            "title": "Joined Orgs"
          },
          "uploaded_pdfs": {
            "items": {
              "$ref": "#/components/schemas/PDF_bjp5ln_leaf"
            },
            "type": "array",
            "title": "Uploaded Pdfs",
            "description": "User who uploaded this PDF"
          },
          "promoted_findings": {
            "items": {
              "$ref": "#/components/schemas/PromotedFinding_pkcm32_leaf"
            },
            "type": "array",
            "title": "Promoted Findings"
          },
          "assigned_tasks": {
            "items": {
              "$ref": "#/components/schemas/Task_6ea7cv_leaf"
            },
            "type": "array",
            "title": "Assigned Tasks"
          },
          "preferences": {
            "items": {
              "$ref": "#/components/schemas/UserPreferences_rre2da_leaf"
            },
            "type": "array",
            "title": "Preferences"
          },
          "avatar_url": {
            "type": "string",
            "title": "Avatar Url",
            "description": "",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "email",
          "display_name",
          "initiated_ai_reviews",
          "modified_ai_reviews",
          "uploaded_assets",
          "created_batch_jobs",
          "uploaded_items",
          "liked_images_new",
          "managed_orgs",
          "joined_orgs",
          "uploaded_pdfs",
          "promoted_findings",
          "assigned_tasks",
          "preferences",
          "avatar_url"
        ],
        "title": "User"
      },
      "User_g3y7nb_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "maxLength": 255,
            "title": "Email"
          },
          "display_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Display Name"
          },
          "uploaded_pdfs": {
            "items": {
              "$ref": "#/components/schemas/PDF_pmtqyp_leaf"
            },
            "type": "array",
            "title": "Uploaded Pdfs",
            "description": "User who uploaded this PDF"
          },
          "avatar_url": {
            "type": "string",
            "title": "Avatar Url",
            "description": "",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "email", "display_name", "uploaded_pdfs", "avatar_url"],
        "title": "User"
      },
      "User_icoj3a_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "maxLength": 255,
            "title": "Email"
          },
          "display_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Display Name"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "description": "USER: user\u003Cbr/\u003EADMIN: admin",
            "default": "user"
          },
          "uploaded_pdfs": {
            "items": {
              "$ref": "#/components/schemas/PDF_bjp5ln_leaf"
            },
            "type": "array",
            "title": "Uploaded Pdfs",
            "description": "User who uploaded this PDF"
          },
          "avatar_url": {
            "type": "string",
            "title": "Avatar Url",
            "description": "",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "email", "display_name", "uploaded_pdfs", "avatar_url"],
        "title": "User"
      },
      "User_ogi2t2_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "maxLength": 255,
            "title": "Email"
          },
          "display_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Display Name"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "description": "USER: user\u003Cbr/\u003EADMIN: admin",
            "default": "user"
          },
          "initiated_ai_reviews": {
            "items": {
              "$ref": "#/components/schemas/AiReview_d7n2fs_leaf"
            },
            "type": "array",
            "title": "Initiated Ai Reviews"
          },
          "modified_ai_reviews": {
            "items": {
              "$ref": "#/components/schemas/AiReview_d7n2fs_leaf"
            },
            "type": "array",
            "title": "Modified Ai Reviews"
          },
          "uploaded_assets": {
            "items": {
              "$ref": "#/components/schemas/Asset_bqbv2z_leaf"
            },
            "type": "array",
            "title": "Uploaded Assets"
          },
          "created_batch_jobs": {
            "items": {
              "$ref": "#/components/schemas/BatchProcessJob_tvdggc_leaf"
            },
            "type": "array",
            "title": "Created Batch Jobs",
            "description": "创建该批处理任务的用户"
          },
          "generated_references": {
            "items": {
              "$ref": "#/components/schemas/GeneratedReference_z4fyu6_leaf"
            },
            "type": "array",
            "title": "Generated References"
          },
          "liked_images_new": {
            "items": {
              "$ref": "#/components/schemas/LikedImage_xn5xrn_leaf"
            },
            "type": "array",
            "title": "Liked Images New",
            "description": "User who liked this image"
          },
          "managed_orgs": {
            "items": {
              "$ref": "#/components/schemas/Organization_xbred3_leaf"
            },
            "type": "array",
            "title": "Managed Orgs"
          },
          "joined_orgs": {
            "items": {
              "$ref": "#/components/schemas/Organization_xbred3_leaf"
            },
            "type": "array",
            "title": "Joined Orgs"
          },
          "uploaded_pdfs": {
            "items": {
              "$ref": "#/components/schemas/PDF_bjp5ln_leaf"
            },
            "type": "array",
            "title": "Uploaded Pdfs",
            "description": "User who uploaded this PDF"
          },
          "promoted_findings": {
            "items": {
              "$ref": "#/components/schemas/PromotedFinding_pkcm32_leaf"
            },
            "type": "array",
            "title": "Promoted Findings"
          },
          "assigned_tasks": {
            "items": {
              "$ref": "#/components/schemas/Task_6ea7cv_leaf"
            },
            "type": "array",
            "title": "Assigned Tasks"
          },
          "preferences": {
            "items": {
              "$ref": "#/components/schemas/UserPreferences_rre2da_leaf"
            },
            "type": "array",
            "title": "Preferences"
          },
          "avatar_url": {
            "type": "string",
            "title": "Avatar Url",
            "description": "",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "email",
          "display_name",
          "initiated_ai_reviews",
          "modified_ai_reviews",
          "uploaded_assets",
          "created_batch_jobs",
          "generated_references",
          "liked_images_new",
          "managed_orgs",
          "joined_orgs",
          "uploaded_pdfs",
          "promoted_findings",
          "assigned_tasks",
          "preferences",
          "avatar_url"
        ],
        "title": "User"
      },
      "User_pitg6z_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "maxLength": 255,
            "title": "Email"
          },
          "display_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Display Name"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "description": "USER: user\u003Cbr/\u003EADMIN: admin",
            "default": "user"
          },
          "initiated_ai_reviews": {
            "items": {
              "$ref": "#/components/schemas/AiReview_d7n2fs_leaf"
            },
            "type": "array",
            "title": "Initiated Ai Reviews"
          },
          "modified_ai_reviews": {
            "items": {
              "$ref": "#/components/schemas/AiReview_d7n2fs_leaf"
            },
            "type": "array",
            "title": "Modified Ai Reviews"
          },
          "uploaded_assets": {
            "items": {
              "$ref": "#/components/schemas/Asset_bqbv2z_leaf"
            },
            "type": "array",
            "title": "Uploaded Assets"
          },
          "generated_references": {
            "items": {
              "$ref": "#/components/schemas/GeneratedReference_z4fyu6_leaf"
            },
            "type": "array",
            "title": "Generated References"
          },
          "uploaded_items": {
            "items": {
              "$ref": "#/components/schemas/Item_ops744_leaf"
            },
            "type": "array",
            "title": "Uploaded Items",
            "description": "User who uploaded this item"
          },
          "liked_images_new": {
            "items": {
              "$ref": "#/components/schemas/LikedImage_xn5xrn_leaf"
            },
            "type": "array",
            "title": "Liked Images New",
            "description": "User who liked this image"
          },
          "managed_orgs": {
            "items": {
              "$ref": "#/components/schemas/Organization_xbred3_leaf"
            },
            "type": "array",
            "title": "Managed Orgs"
          },
          "joined_orgs": {
            "items": {
              "$ref": "#/components/schemas/Organization_xbred3_leaf"
            },
            "type": "array",
            "title": "Joined Orgs"
          },
          "uploaded_pdfs": {
            "items": {
              "$ref": "#/components/schemas/PDF_bjp5ln_leaf"
            },
            "type": "array",
            "title": "Uploaded Pdfs",
            "description": "User who uploaded this PDF"
          },
          "promoted_findings": {
            "items": {
              "$ref": "#/components/schemas/PromotedFinding_pkcm32_leaf"
            },
            "type": "array",
            "title": "Promoted Findings"
          },
          "assigned_tasks": {
            "items": {
              "$ref": "#/components/schemas/Task_6ea7cv_leaf"
            },
            "type": "array",
            "title": "Assigned Tasks"
          },
          "preferences": {
            "items": {
              "$ref": "#/components/schemas/UserPreferences_rre2da_leaf"
            },
            "type": "array",
            "title": "Preferences"
          },
          "avatar_url": {
            "type": "string",
            "title": "Avatar Url",
            "description": "",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "email",
          "display_name",
          "initiated_ai_reviews",
          "modified_ai_reviews",
          "uploaded_assets",
          "generated_references",
          "uploaded_items",
          "liked_images_new",
          "managed_orgs",
          "joined_orgs",
          "uploaded_pdfs",
          "promoted_findings",
          "assigned_tasks",
          "preferences",
          "avatar_url"
        ],
        "title": "User"
      },
      "User_rlfvwj_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "maxLength": 255,
            "title": "Email"
          },
          "display_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Display Name"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "description": "USER: user\u003Cbr/\u003EADMIN: admin",
            "default": "user"
          },
          "avatar_url": {
            "type": "string",
            "title": "Avatar Url",
            "description": "",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["id", "created_at", "updated_at", "email", "display_name", "avatar_url"],
        "title": "User"
      },
      "User_tb4km4_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "maxLength": 255,
            "title": "Email"
          },
          "display_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Display Name"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "description": "USER: user\u003Cbr/\u003EADMIN: admin",
            "default": "user"
          },
          "initiated_ai_reviews": {
            "items": {
              "$ref": "#/components/schemas/AiReview_d7n2fs_leaf"
            },
            "type": "array",
            "title": "Initiated Ai Reviews"
          },
          "modified_ai_reviews": {
            "items": {
              "$ref": "#/components/schemas/AiReview_d7n2fs_leaf"
            },
            "type": "array",
            "title": "Modified Ai Reviews"
          },
          "created_batch_jobs": {
            "items": {
              "$ref": "#/components/schemas/BatchProcessJob_tvdggc_leaf"
            },
            "type": "array",
            "title": "Created Batch Jobs",
            "description": "创建该批处理任务的用户"
          },
          "generated_references": {
            "items": {
              "$ref": "#/components/schemas/GeneratedReference_z4fyu6_leaf"
            },
            "type": "array",
            "title": "Generated References"
          },
          "uploaded_items": {
            "items": {
              "$ref": "#/components/schemas/Item_ops744_leaf"
            },
            "type": "array",
            "title": "Uploaded Items",
            "description": "User who uploaded this item"
          },
          "liked_images_new": {
            "items": {
              "$ref": "#/components/schemas/LikedImage_xn5xrn_leaf"
            },
            "type": "array",
            "title": "Liked Images New",
            "description": "User who liked this image"
          },
          "managed_orgs": {
            "items": {
              "$ref": "#/components/schemas/Organization_xbred3_leaf"
            },
            "type": "array",
            "title": "Managed Orgs"
          },
          "joined_orgs": {
            "items": {
              "$ref": "#/components/schemas/Organization_xbred3_leaf"
            },
            "type": "array",
            "title": "Joined Orgs"
          },
          "uploaded_pdfs": {
            "items": {
              "$ref": "#/components/schemas/PDF_bjp5ln_leaf"
            },
            "type": "array",
            "title": "Uploaded Pdfs",
            "description": "User who uploaded this PDF"
          },
          "promoted_findings": {
            "items": {
              "$ref": "#/components/schemas/PromotedFinding_pkcm32_leaf"
            },
            "type": "array",
            "title": "Promoted Findings"
          },
          "assigned_tasks": {
            "items": {
              "$ref": "#/components/schemas/Task_6ea7cv_leaf"
            },
            "type": "array",
            "title": "Assigned Tasks"
          },
          "preferences": {
            "items": {
              "$ref": "#/components/schemas/UserPreferences_rre2da_leaf"
            },
            "type": "array",
            "title": "Preferences"
          },
          "avatar_url": {
            "type": "string",
            "title": "Avatar Url",
            "description": "",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "email",
          "display_name",
          "initiated_ai_reviews",
          "modified_ai_reviews",
          "created_batch_jobs",
          "generated_references",
          "uploaded_items",
          "liked_images_new",
          "managed_orgs",
          "joined_orgs",
          "uploaded_pdfs",
          "promoted_findings",
          "assigned_tasks",
          "preferences",
          "avatar_url"
        ],
        "title": "User"
      },
      "User_wk7sxb_leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "maxLength": 255,
            "title": "Email"
          },
          "display_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Display Name"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole",
                "maxLength": 16
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "description": "USER: user\u003Cbr/\u003EADMIN: admin",
            "default": "user"
          },
          "initiated_ai_reviews": {
            "items": {
              "$ref": "#/components/schemas/AiReview_d7n2fs_leaf"
            },
            "type": "array",
            "title": "Initiated Ai Reviews"
          },
          "modified_ai_reviews": {
            "items": {
              "$ref": "#/components/schemas/AiReview_d7n2fs_leaf"
            },
            "type": "array",
            "title": "Modified Ai Reviews"
          },
          "uploaded_assets": {
            "items": {
              "$ref": "#/components/schemas/Asset_bqbv2z_leaf"
            },
            "type": "array",
            "title": "Uploaded Assets"
          },
          "created_batch_jobs": {
            "items": {
              "$ref": "#/components/schemas/BatchProcessJob_tvdggc_leaf"
            },
            "type": "array",
            "title": "Created Batch Jobs",
            "description": "创建该批处理任务的用户"
          },
          "generated_references": {
            "items": {
              "$ref": "#/components/schemas/GeneratedReference_z4fyu6_leaf"
            },
            "type": "array",
            "title": "Generated References"
          },
          "uploaded_items": {
            "items": {
              "$ref": "#/components/schemas/Item_ops744_leaf"
            },
            "type": "array",
            "title": "Uploaded Items",
            "description": "User who uploaded this item"
          },
          "liked_images_new": {
            "items": {
              "$ref": "#/components/schemas/LikedImage_xn5xrn_leaf"
            },
            "type": "array",
            "title": "Liked Images New",
            "description": "User who liked this image"
          },
          "managed_orgs": {
            "items": {
              "$ref": "#/components/schemas/Organization_xbred3_leaf"
            },
            "type": "array",
            "title": "Managed Orgs"
          },
          "joined_orgs": {
            "items": {
              "$ref": "#/components/schemas/Organization_xbred3_leaf"
            },
            "type": "array",
            "title": "Joined Orgs"
          },
          "promoted_findings": {
            "items": {
              "$ref": "#/components/schemas/PromotedFinding_pkcm32_leaf"
            },
            "type": "array",
            "title": "Promoted Findings"
          },
          "assigned_tasks": {
            "items": {
              "$ref": "#/components/schemas/Task_6ea7cv_leaf"
            },
            "type": "array",
            "title": "Assigned Tasks"
          },
          "preferences": {
            "items": {
              "$ref": "#/components/schemas/UserPreferences_rre2da_leaf"
            },
            "type": "array",
            "title": "Preferences"
          },
          "avatar_url": {
            "type": "string",
            "title": "Avatar Url",
            "description": "",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "email",
          "display_name",
          "initiated_ai_reviews",
          "modified_ai_reviews",
          "uploaded_assets",
          "created_batch_jobs",
          "generated_references",
          "uploaded_items",
          "liked_images_new",
          "managed_orgs",
          "joined_orgs",
          "promoted_findings",
          "assigned_tasks",
          "preferences",
          "avatar_url"
        ],
        "title": "User"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "VideoScenesResponse": {
        "properties": {
          "scenes": {
            "items": {
              "$ref": "#/components/schemas/SceneInfo"
            },
            "type": "array",
            "title": "Scenes"
          },
          "total_scenes": {
            "type": "integer",
            "title": "Total Scenes"
          },
          "detector_used": {
            "type": "string",
            "title": "Detector Used"
          },
          "threshold_used": {
            "type": "number",
            "title": "Threshold Used"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "额外信息",
            "default": ""
          }
        },
        "type": "object",
        "required": ["scenes", "total_scenes", "detector_used", "threshold_used"],
        "title": "VideoScenesResponse",
        "description": "视频场景检测响应模型"
      },
      "aimage_supervision__endpoints__ai_review__AiReviewProcessingStatus": {
        "properties": {
          "subtask_id": {
            "type": "string",
            "format": "uuid",
            "title": "Subtask Id",
            "description": "The ID of the subtask"
          },
          "is_processing": {
            "type": "boolean",
            "title": "Is Processing",
            "description": "Whether AI review is currently being processed"
          },
          "is_completed": {
            "type": "boolean",
            "title": "Is Completed",
            "description": "Whether AI review has been completed"
          },
          "is_cancelled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Cancelled",
            "description": "Whether AI review has been cancelled",
            "default": false
          },
          "latest_review_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latest Review Id",
            "description": "The ID of the latest AI review if available"
          },
          "processing_started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Started At",
            "description": "When the processing started"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "When the processing completed"
          },
          "findings_count": {
            "type": "integer",
            "title": "Findings Count",
            "description": "Number of findings generated",
            "default": 0
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Status message"
          },
          "processing_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Status",
            "description": "明确的状态字符串"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "错误信息"
          },
          "should_cancel": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Should Cancel",
            "description": "中断信号",
            "default": false
          }
        },
        "type": "object",
        "required": ["subtask_id", "is_processing", "is_completed", "message"],
        "title": "AiReviewProcessingStatus",
        "description": "Response body for AI review processing status"
      },
      "aimage_supervision__enums__AiReviewProcessingStatus": {
        "type": "string",
        "enum": ["pending", "processing", "completed", "failed", "cancelled"],
        "title": "AiReviewProcessingStatus"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Add the token to your bearer authentication",
        "scheme": "bearer"
      }
    }
  }
}
